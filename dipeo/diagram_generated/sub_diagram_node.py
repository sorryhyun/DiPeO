"""
Auto-generated static node type for sub_diagram.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import dataclass, field
from typing import Dict, Any, Optional, List, Union, Literal

from dipeo.models.models import (
    NodeType, Vec2, NodeID, PersonID, MemoryConfig, MemorySettings, ToolConfig,
    HookTriggerMode, SupportedLanguage, HttpMethod, DBBlockSubType,
    NotionOperation, HookType, PersonLLMConfig, LLMService, ExtractPattern
)
from dipeo.core.static.generated_nodes import BaseExecutableNode


@dataclass(frozen=True)
class SubDiagramNode(BaseExecutableNode):
    """Execute another diagram as a node within the current diagram"""
    type: NodeType = field(default=NodeType.sub_diagram, init=False)
    diagram_name: str = ""
    diagram_data: Dict[str, Any] = {}
    input_mapping: Dict[str, Any] = {}
    output_mapping: Dict[str, Any] = {}
    timeout: float = 0.0
    wait_for_completion: bool = False
    isolate_conversation: bool = False

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = super().to_dict()
        data["diagram_name"] = self.diagram_name
        data["diagram_data"] = self.diagram_data
        data["input_mapping"] = self.input_mapping
        data["output_mapping"] = self.output_mapping
        data["timeout"] = self.timeout
        data["wait_for_completion"] = self.wait_for_completion
        data["isolate_conversation"] = self.isolate_conversation
        return data
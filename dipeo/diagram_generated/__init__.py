"""DiPeO diagram-generated models package.

This package contains models generated by DiPeO's self-hosted code generation system.
All files in this package are auto-generated - do not edit directly.
"""

# Re-export all models and conversions
from .conversions import *
from .domain_models import *
from .enums import *
from .generated_nodes import *
from .handle_utils import *

# Re-export specific node models for backward compatibility
from .models.api_job_model import *
from .models.code_job_model import *
from .models.condition_model import *
from .models.db_model import *
from .models.endpoint_model import *
from .models.hook_model import *
from .models.json_schema_validator_model import *
from .models.notion_model import *
from .models.person_batch_job_model import *
from .models.person_job_model import *
from .models.start_model import *
from .models.sub_diagram_model import *
from .models.template_job_model import *
from .models.typescript_ast_model import *
from .models.user_response_model import *

# Import all node types
from .nodes.api_job_node import ApiJobNode
from .nodes.code_job_node import CodeJobNode
from .nodes.condition_node import ConditionNode
from .nodes.db_node import DbNode as DBNode
from .nodes.endpoint_node import EndpointNode
from .nodes.hook_node import HookNode
from .nodes.json_schema_validator_node import JsonSchemaValidatorNode
from .nodes.notion_node import NotionNode
from .nodes.person_batch_job_node import PersonBatchJobNode
from .nodes.person_job_node import PersonJobNode
from .nodes.start_node import StartNode
from .nodes.sub_diagram_node import SubDiagramNode
from .nodes.template_job_node import TemplateJobNode
from .nodes.typescript_ast_node import TypescriptAstNode
from .nodes.user_response_node import UserResponseNode

# Combine all exports
__all__ = [
    # From domain_models.py
    "APIServiceType", "ApiJobNodeData", "ApiKeyID", "ArrowID",
    "BaseNodeData", "ChatResult", "CodeJobNodeData", "ConditionNodeData",
    "ConfigDict", "ContentType", "Conversation", "ConversationMetadata",
    "DBBlockSubType", "DBNodeData", "DataType", "DiagramFormat",
    "DiagramID", "DiagramMetadata", "DomainApiKey", "DomainArrow",
    "DomainDiagram", "DomainHandle", "DomainNode", "DomainPerson",
    "EndpointNodeData", "EventType", "ExecutionID", "ExecutionOptions",
    "ExecutionState", "ExecutionStatus", "ExecutionUpdate", "ForgettingMode",
    "HandleDirection", "HandleID", "HandleLabel",
    "HookNodeData", "HookTriggerMode", "HookType", "HttpMethod",
    "ImageGenerationResult", "InteractivePromptData", "InteractiveResponse",
    "JsonSchemaValidatorNodeData", "LLMRequestOptions", "LLMService", "MemoryConfig", "MemorySettings",
    "Message", "NewType", "NodeDefinition", "NodeExecutionStatus",
    "NodeID", "NodeState", "NodeType",
    "NotionNodeData", "NotionOperation", "PersonBatchJobNodeData", "PersonID",
    "PersonJobNodeData", "PersonLLMConfig", "PersonMemoryMessage",
    "StartNodeData", "SupportedLanguage",
    "TemplateJobNodeData", "TokenUsage", "ToolConfig", "ToolOutput", "ToolType",
    "TypescriptAstNodeData", "UserResponseNodeData", "Vec2", "WebSearchResult",
    # From conversions.py
    "NODE_TYPE_MAP", "NODE_TYPE_REVERSE_MAP", "node_kind_to_domain_type",
    "domain_type_to_node_kind", "normalize_node_id", "create_handle_id",
    "parse_handle_id", "diagram_arrays_to_maps", "diagram_maps_to_arrays",
    # From handle_utils.py
    "ParsedHandle", "HandleReference", "parse_handle_id_safe",
    "extract_node_id_from_handle", "is_valid_handle_id",
    # From generated_nodes.py
    "BaseExecutableNode",
    # Node types
    "ApiJobNode", "CodeJobNode", "ConditionNode", "DBNode", "EndpointNode",
    "HookNode", "JsonSchemaValidatorNode", "NotionNode", "PersonBatchJobNode",
    "PersonJobNode", "StartNode", "SubDiagramNode", "TemplateJobNode",
    "TypescriptAstNode", "UserResponseNode",
]
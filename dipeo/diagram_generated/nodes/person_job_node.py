"""
Auto-generated static node type for person_job.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import *
from typing import *

from ..domain_models import *
from ..enums import *
from ..integrations import *


@dataclass(frozen=True)
class PersonJobNode:
    """Execute tasks using AI language models"""
    # Required base fields first
    id: NodeID
    position: Vec2
    
    # Required node-specific fields
    first_only_prompt: str
    max_iteration: int
    
    # Optional base fields
    label: str = ""
    flipped: bool = False
    metadata: Optional[Dict[str, Any]] = None
    
    # Node type (fixed for this node class)
    type: NodeType = field(default=NodeType.PERSON_JOB, init=False)
    
    # Optional node-specific fields
    person: str = ""
    first_prompt_file: str = ""
    default_prompt: str = ""
    prompt_file: str = ""
    memorize_to: str = ""
    at_most: float = 0
    tools: List[ToolConfig] = ""
    text_format: str = ""
    resolved_prompt: str = ""
    resolved_first_prompt: str = ""

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = {
            "id": self.id,
            "type": self.type.value,
            "position": {"x": self.position.x, "y": self.position.y},
            "label": self.label,
            "flipped": self.flipped
        }
        if self.metadata:
            data["metadata"] = self.metadata
            
        # Add node-specific fields
        data["person"] = self.person
        data["first_only_prompt"] = self.first_only_prompt
        data["first_prompt_file"] = self.first_prompt_file
        data["default_prompt"] = self.default_prompt
        data["prompt_file"] = self.prompt_file
        data["max_iteration"] = self.max_iteration
        data["memorize_to"] = self.memorize_to
        data["at_most"] = self.at_most
        data["tools"] = self.tools
        data["text_format"] = self.text_format
        data["resolved_prompt"] = self.resolved_prompt
        data["resolved_first_prompt"] = self.resolved_first_prompt
        return data
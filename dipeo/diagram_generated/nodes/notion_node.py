"""
Auto-generated static node type for notion.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import dataclass, field
from typing import Dict, Any, Optional, List, Union, Literal

from dipeo.models.models import (
    NodeType, Vec2, NodeID, PersonID, MemoryConfig, MemorySettings, ToolConfig,
    HookTriggerMode, SupportedLanguage, HttpMethod, DBBlockSubType,
    NotionOperation, HookType, PersonLLMConfig, LLMService
)


@dataclass(frozen=True)
class NotionNode:
    """Integrate with Notion API to query, create, or update database entries"""
    # Required base fields first
    id: NodeID
    position: Vec2
    
    # Required node-specific fields
    api_key: str
    database_id: str
    operation: NotionOperation
    
    # Optional base fields
    label: str = ""
    flipped: bool = False
    metadata: Optional[Dict[str, Any]] = None
    
    # Node type (fixed for this node class)
    type: NodeType = field(default=NodeType.notion, init=False)
    
    # Optional node-specific fields
    page_id: str = ""

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = {
            "id": self.id,
            "type": self.type.value,
            "position": {"x": self.position.x, "y": self.position.y},
            "label": self.label,
            "flipped": self.flipped
        }
        if self.metadata:
            data["metadata"] = self.metadata
            
        # Add node-specific fields
        data["api_key"] = self.api_key
        data["database_id"] = self.database_id
        data["operation"] = self.operation
        data["page_id"] = self.page_id
        return data








"""
Auto-generated static node type for integrated_api.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import *
from typing import *

from ..domain_models import *
from ..enums import *
from ..integrations import *


@dataclass(frozen=True)
class IntegratedApiNode:
    """Connect to external APIs like Notion, Slack, GitHub, and more"""
    # Required base fields first
    id: NodeID
    position: Vec2
    
    # Required node-specific fields
    provider: Literal["notion", "slack", "github", "jira", "google_search"]
    operation: str
    
    # Optional base fields
    label: str = ""
    flipped: bool = False
    metadata: Optional[Dict[str, Any]] = None
    
    # Node type (fixed for this node class)
    type: NodeType = field(default=NodeType.INTEGRATED_API, init=False)
    
    # Optional node-specific fields
    resource_id: str = ""
    config: Dict[str, Any] = field(default_factory=dict)
    timeout: int = 0
    max_retries: float = 0

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = {
            "id": self.id,
            "type": self.type.value,
            "position": {"x": self.position.x, "y": self.position.y},
            "label": self.label,
            "flipped": self.flipped
        }
        if self.metadata:
            data["metadata"] = self.metadata
            
        # Add node-specific fields
        data["provider"] = self.provider
        data["operation"] = self.operation
        data["resource_id"] = self.resource_id
        data["config"] = self.config
        data["timeout"] = self.timeout
        data["max_retries"] = self.max_retries
        return data
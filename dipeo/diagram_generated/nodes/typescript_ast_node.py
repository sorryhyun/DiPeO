"""
Auto-generated static node type for typescript_ast.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import dataclass, field
from typing import Dict, Any, Optional, List, Union, Literal

from dipeo.models.models import (
    NodeType, Vec2, NodeID, PersonID, MemoryConfig, MemorySettings, ToolConfig,
    HookTriggerMode, SupportedLanguage, HttpMethod, DBBlockSubType,
    NotionOperation, HookType, PersonLLMConfig, LLMService
)


@dataclass(frozen=True)
class TypescriptAstNode:
    """Parses TypeScript source code and extracts AST, interfaces, types, and enums"""
    # Required base fields first
    id: NodeID
    position: Vec2
    
    # Required node-specific fields
    source: str
    
    # Optional base fields
    label: str = ""
    flipped: bool = False
    metadata: Optional[Dict[str, Any]] = None
    
    # Node type (fixed for this node class)
    type: NodeType = field(default=NodeType.typescript_ast, init=False)
    
    # Optional node-specific fields
    extractPatterns: List[Any] = field(default_factory=list)
    includeJSDoc: bool = False
    parseMode: Literal["module", "script"] = "module"

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = {
            "id": self.id,
            "type": self.type.value,
            "position": {"x": self.position.x, "y": self.position.y},
            "label": self.label,
            "flipped": self.flipped
        }
        if self.metadata:
            data["metadata"] = self.metadata
            
        # Add node-specific fields
        data["source"] = self.source
        data["extractPatterns"] = self.extractPatterns
        data["includeJSDoc"] = self.includeJSDoc
        data["parseMode"] = self.parseMode
        return data
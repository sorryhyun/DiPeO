







"""
Auto-generated static node type for api_job.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import *
from typing import *

from dipeo.diagram_generated.domain_models import *
from dipeo.diagram_generated.enums import *
from dipeo.diagram_generated.integrations import *


@dataclass(frozen=True)
class ApiJobNode:
    """Make HTTP API requests"""
    # Required base fields first
    id: NodeID
    position: Vec2
    
    # Required node-specific fields
    url: str
    method: HttpMethod
    
    # Optional base fields
    label: str = ""
    flipped: bool = False
    metadata: Optional[Dict[str, Any]] = None
    
    # Node type (fixed for this node class)
    type: NodeType = field(default=NodeType.API_JOB, init=False)
    
    # Optional node-specific fields
    headers: Dict[str, Any] = field(default_factory=dict)
    params: Dict[str, Any] = field(default_factory=dict)
    body: Dict[str, Any] = field(default_factory=dict)
    timeout: int = 0
    auth_type: Literal["none", "bearer", "basic", "api_key"] = None
    auth_config: Dict[str, Any] = field(default_factory=dict)

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = {
            "id": self.id,
            "type": self.type.value,
            "position": {"x": self.position.x, "y": self.position.y},
            "label": self.label,
            "flipped": self.flipped
        }
        if self.metadata:
            data["metadata"] = self.metadata
            
        # Add node-specific fields
        data["url"] = self.url
        data["method"] = self.method
        data["headers"] = self.headers
        data["params"] = self.params
        data["body"] = self.body
        data["timeout"] = self.timeout
        data["auth_type"] = self.auth_type
        data["auth_config"] = self.auth_config
        return data
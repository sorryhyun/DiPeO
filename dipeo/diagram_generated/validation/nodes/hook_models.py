# Auto-generated from JSON Schema
# DO NOT EDIT MANUALLY

# generated by datamodel-codegen:
#   filename:  hook.schema.json
#   timestamp: 2025-09-06T03:56:13+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, RootModel


class RecordStringString(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class Format(Enum):
    json = 'json'
    text = 'text'
    yaml = 'yaml'


class Method(Enum):
    delete = 'delete'
    get = 'get'
    patch = 'patch'
    post = 'post'
    put = 'put'


class HookType(Enum):
    shell = 'shell'
    webhook = 'webhook'
    python = 'python'
    file = 'file'


class HookNodeData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    args: list[str] | None = None
    command: str | None = None
    cwd: str | None = None
    env: RecordStringString | None = None
    file_path: str | None = None
    flipped: bool | None = None
    format: Format | None = None
    function_name: str | None = None
    headers: RecordStringString | None = None
    hook_type: HookType
    label: str
    method: Method | None = None
    retry_count: float | None = None
    retry_delay: float | None = None
    script: str | None = None
    timeout: float | None = None
    url: str | None = None


class Model(RootModel[HookNodeData]):
    root: HookNodeData

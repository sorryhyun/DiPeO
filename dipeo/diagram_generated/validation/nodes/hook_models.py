# Auto-generated from JSON Schema
# DO NOT EDIT MANUALLY

# generated by datamodel-codegen:
#   filename:  hook.schema.json
#   timestamp: 2025-08-22T03:35:54+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, RootModel


class RecordStringString(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class Format(Enum):
    json = 'json'
    text = 'text'
    yaml = 'yaml'


class Method(Enum):
    DELETE = 'DELETE'
    GET = 'GET'
    PATCH = 'PATCH'
    POST = 'POST'
    PUT = 'PUT'


class HookType(Enum):
    shell = 'shell'
    webhook = 'webhook'
    python = 'python'
    file = 'file'


class HookNodeData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    args: Optional[List[str]] = None
    command: Optional[str] = None
    cwd: Optional[str] = None
    env: Optional[RecordStringString] = None
    file_path: Optional[str] = None
    flipped: Optional[bool] = None
    format: Optional[Format] = None
    function_name: Optional[str] = None
    headers: Optional[RecordStringString] = None
    hook_type: HookType
    label: str
    method: Optional[Method] = None
    retry_count: Optional[float] = None
    retry_delay: Optional[float] = None
    script: Optional[str] = None
    timeout: Optional[float] = None
    url: Optional[str] = None


class Model(RootModel[HookNodeData]):
    root: HookNodeData

# Auto-generated from JSON Schema
# DO NOT EDIT MANUALLY

# generated by datamodel-codegen:
#   filename:  codejob.schema.json
#   timestamp: 2025-08-16T11:51:03+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel


class SupportedLanguage(Enum):
    python = 'python'
    typescript = 'typescript'
    bash = 'bash'
    shell = 'shell'


class CodeJobNodeData(BaseModel):
    """
    Configuration data for CodeJob nodes that execute code
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    code: Optional[str] = Field(
        None, description='Inline code or path to external file'
    )
    filePath: Optional[str] = Field(
        None, description="External code file path (e.g., 'files/code/processor.py')"
    )
    flipped: Optional[bool] = None
    functionName: Optional[str] = Field(
        None, description='Function to call in external file (required with filePath)'
    )
    label: str
    language: SupportedLanguage = Field(
        ..., description='Programming language: python, typescript, bash, or shell'
    )
    timeout: Optional[float] = Field(
        None, description='Execution timeout in seconds (default: 60)'
    )


class Model(RootModel[CodeJobNodeData]):
    root: CodeJobNodeData

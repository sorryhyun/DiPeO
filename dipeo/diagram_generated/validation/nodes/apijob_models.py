# Auto-generated from JSON Schema
# DO NOT EDIT MANUALLY

# generated by datamodel-codegen:
#   filename:  apijob.schema.json
#   timestamp: 2025-09-05T10:20:51+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional, Union

from pydantic import BaseModel, ConfigDict, RootModel


class RecordStringString(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class HttpMethod(Enum):
    get = 'get'
    post = 'post'
    put = 'put'
    delete = 'delete'
    patch = 'patch'


class AuthType(Enum):
    api_key = 'api_key'
    basic = 'basic'
    bearer = 'bearer'
    none = 'none'


class JsonDict(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class Model(RootModel[ApiJobNodeData]):
    root: ApiJobNodeData


class JsonValue(
    RootModel[Union[JsonObject, list[JsonValue], str | float | bool | None]]
):
    root: JsonObject | list[JsonValue] | str | float | bool | None


class ApiJobNodeData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    auth_config: RecordStringString | None = None
    auth_type: AuthType | None = None
    body: JsonObject | list[JsonValue] | str | float | bool | None | None = None
    flipped: bool | None = None
    headers: RecordStringString | None = None
    label: str
    method: HttpMethod
    params: JsonDict | None = None
    timeout: float | None = None
    url: str


class JsonObject(RootModel[Optional[dict[str, JsonValue]]]):
    root: dict[str, JsonValue] | None = None


Model.model_rebuild()
JsonValue.model_rebuild()
ApiJobNodeData.model_rebuild()

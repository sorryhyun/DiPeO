"""
Auto-generated static node type for condition.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import dataclass, field
from typing import Dict, Any, Optional, List, Union, Literal

from dipeo.models.models import (
    NodeType, Vec2, NodeID, PersonID, MemoryConfig, MemorySettings, ToolConfig,
    HookTriggerMode, SupportedLanguage, HttpMethod, DBBlockSubType,
    NotionOperation, HookType, PersonLLMConfig, LLMService, ExtractPattern
)
from dipeo.core.static.generated_nodes import BaseExecutableNode


@dataclass(frozen=True)
class ConditionNode(BaseExecutableNode):
    """Conditional branching based on expressions"""
    type: NodeType = field(default=NodeType.condition, init=False)
    condition_type: str
    expression: str = ""
    node_indices: List[Any] = []

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = super().to_dict()
        data["condition_type"] = self.condition_type
        data["expression"] = self.expression
        data["node_indices"] = self.node_indices
        return data
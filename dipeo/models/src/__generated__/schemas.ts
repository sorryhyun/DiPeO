/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by DiPeO code generation
 * Generated at: 2025-10-02T02:08:32.399856
 *
 * Zod validation schemas for all node types.
 * These schemas are exported from @dipeo/models for use across the codebase.
 */

import { z } from 'zod';

// Node validation schemas

// Export all schemas as a registry
export const nodeSchemas = {
} as const;

// Type for node type keys
export type NodeSchemaKey = keyof typeof nodeSchemas;

// Export validation helper
export function validateNodeData<T extends NodeSchemaKey>(
  nodeType: T,
  data: unknown
): z.infer<typeof nodeSchemas[T]> {
  return nodeSchemas[nodeType].parse(data);
}

// Safe validation that returns result instead of throwing
export function safeValidateNodeData<T extends NodeSchemaKey>(
  nodeType: T,
  data: unknown
): z.SafeParseReturnType<unknown, z.infer<typeof nodeSchemas[T]>> {
  return nodeSchemas[nodeType].safeParse(data);
}

// Get schema for a node type
export function getNodeSchema(nodeType: NodeSchemaKey) {
  return nodeSchemas[nodeType];
}

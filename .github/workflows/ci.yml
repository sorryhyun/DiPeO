name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        python-version: [3.13]

    env:
      DIPEO_BASE_DIR: ${{ github.workspace }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ hashFiles('requirements.txt', 'pyproject.toml', 'uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install Node dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Python dependencies with uv
      run: |
        uv venv --python ${{ matrix.python-version }}
        source .venv/bin/activate
        uv sync --all-extras
        uv pip install pytest-asyncio pytest-cov import-linter
        uv pip install -e apps/cli

    - name: Build TypeScript models
      run: pnpm --filter @dipeo/models build

    - name: Generate code
      run: |
        source .venv/bin/activate
        make codegen-auto

    - name: Build frontend
      run: pnpm --filter web build

    - name: Type check TypeScript
      run: pnpm typecheck

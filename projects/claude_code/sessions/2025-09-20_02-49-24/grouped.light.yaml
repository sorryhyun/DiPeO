version: light
nodes:
- label: Start
  type: start
  position: {x: 100, y: 100}
  props:
    trigger_mode: manual
    custom_data:
      session_id: 28482fb5-c213-4e1a-916d-981938f1cbc3
      initial_prompt: |-
        <command-name>/clear</command-name>
                    <command-message>clear</command-message>
                    <command-args></command-args>
- label: Claude Responds To User 1
  type: person_job
  position: {x: 350, y: 100}
  props:
    person: claude_code
    default_prompt: |-
      <command-name>/clear</command-name>
                  <command-message>clear</command-message>
                  <command-args></command-args>
- label: Claude Responds To User 2
  type: person_job
  position: {x: 400, y: 100}
  props:
    person: claude_code
    default_prompt: <local-command-stdout></local-command-stdout>
- label: Claude Responds To User 3
  type: person_job
  position: {x: 450, y: 100}
  props:
    person: claude_code
    default_prompt: I want you to make `dipeocc` command to ignore `--debug` flag, not returning error immediately. think
- label: Grep Search 1
  type: code_job
  position: {x: 500, y: 100}
  props:
    language: bash
    code: rg -l 'dipeocc' .
    tool: Grep
    description: Grep search operation
- label: Read File 1
  type: db
  position: {x: 550, y: 100}
  props:
    operation: read
    sub_type: file
    file: /home/soryhyun/DiPeO/apps/cli/src/dipeo_cli/__main__.py
- label: Grep Search 2
  type: code_job
  position: {x: 600, y: 100}
  props:
    language: bash
    code: rg -l 'class ClaudeCodeCommand' .
    tool: Grep
    description: Grep search operation
- label: Read File 2
  type: db
  position: {x: 650, y: 100}
  props:
    operation: read
    sub_type: file
    file: /home/soryhyun/DiPeO/apps/cli/src/dipeo_cli/commands/claude_code_command.py
- label: Edit File 3
  type: diff_patch
  position: {x: 700, y: 100}
  props:
    target_path: /home/soryhyun/DiPeO/apps/cli/src/dipeo_cli/__main__.py
    diff: "--- /home/soryhyun/DiPeO/apps/cli/src/dipeo_cli/__main__.py\n+++ /home/soryhyun/DiPeO/apps/cli/src/dipeo_cli/__main__.py\n@@ -2,6 +2,9 @@\n     list_parser = dipeocc_subparsers.add_parser(\"list\", help=\"List recent Claude Code sessions\")\n     list_parser.add_argument(\n         \"--limit\", type=int, default=50, help=\"Maximum number of sessions to list (default: 50)\"\n+    )\n+    list_parser.add_argument(\n+        \"--debug\", action=\"store_true\", help=\"(Ignored for dipeocc commands)\"\n     )\n \n     # Convert subcommand\n@@ -28,6 +31,9 @@\n         default=\"light\",\n         help=\"Output format (default: light)\",\n     )\n+    convert_parser.add_argument(\n+        \"--debug\", action=\"store_true\", help=\"(Ignored for dipeocc commands)\"\n+    )\n \n     # Watch subcommand\n     watch_parser = dipeocc_subparsers.add_parser(\n@@ -36,9 +42,15 @@\n     watch_parser.add_argument(\n         \"--interval\", type=int, default=30, help=\"Check interval in seconds (default: 30)\"\n     )\n+    watch_parser.add_argument(\n+        \"--debug\", action=\"store_true\", help=\"(Ignored for dipeocc commands)\"\n+    )\n \n     # Stats subcommand\n     stats_cc_parser = dipeocc_subparsers.add_parser(\n         \"stats\", help=\"Show detailed session statistics\"\n     )\n     stats_cc_parser.add_argument(\"session_id\", help=\"Session ID to analyze\")\n+    stats_cc_parser.add_argument(\n+        \"--debug\", action=\"store_true\", help=\"(Ignored for dipeocc commands)\"\n+    )"
    format: unified
    backup: true
    validate: true
- label: tool_result 1
  type: api_job
  position: {x: 750, y: 100}
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: Bash Command 3
  type: code_job
  position: {x: 800, y: 250}
  props:
    language: bash
    code: dipeocc list --debug --limit 1
    timeout: 120000
    description: Test dipeocc with --debug flag
- label: Bash Command 4
  type: code_job
  position: {x: 850, y: 250}
  props:
    language: bash
    code: dipeocc convert --debug --latest --format light 2>&1 | head -20
    timeout: 120000
    description: Test dipeocc convert with --debug flag
- label: Claude Responds To User 4
  type: person_job
  position: {x: 900, y: 250}
  props:
    person: claude_code
    default_prompt: '[Request interrupted by user]'
connections:
- {from: Start, to: Claude Responds To User 1, content_type: raw_text}
- {from: Claude Responds To User 1, to: Claude Responds To User 2, content_type: raw_text}
- {from: Claude Responds To User 2, to: Claude Responds To User 3, content_type: raw_text}
- {from: Claude Responds To User 3, to: Grep Search 1, content_type: raw_text}
- {from: Grep Search 1, to: Read File 1, content_type: raw_text}
- {from: Read File 1, to: Grep Search 2, content_type: raw_text}
- {from: Grep Search 2, to: Read File 2, content_type: raw_text}
- {from: Read File 2, to: Edit File 3, content_type: raw_text}
- {from: Edit File 3, to: tool_result 1, content_type: raw_text}
- {from: tool_result 1, to: Bash Command 3, content_type: raw_text}
- {from: Bash Command 3, to: Bash Command 4, content_type: raw_text}
- {from: Bash Command 4, to: Claude Responds To User 4, content_type: raw_text}
persons:
  claude_code:
    service: anthropic
    model: claude-code
    api_key_id: APIKEY_CLAUDE
    system_prompt: You are Claude Code, an AI assistant helping with software development.
metadata:
  conversion:
    total_nodes: 13
    total_connections: 12
    total_persons: 0
    node_types:
      start: 1
      person_job: 4
      code_job: 4
      db: 2
      diff_patch: 1
      api_job: 1

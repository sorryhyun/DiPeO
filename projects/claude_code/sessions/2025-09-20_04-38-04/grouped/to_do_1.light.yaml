version: light
nodes:
- label: Edit File 12
  type: diff_patch
  position:
    x: 900
    y: 400
  props:
    target_path: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py
    diff: "--- /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py\n+++ /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py\n@@ -1,10 +1,10 @@\n             # Find to-do update nodes\n-            to_do_nodes = self._find_to_do_update_nodes(processed[\"nodes\"])\n+            to_do_nodes, to_do_nodes_map = self._find_to_do_update_nodes(processed[\"nodes\"])\n \n             if not to_do_nodes:\n                 # No to-do updates found, return original\n                 report.processing_time_ms = (time.time() - start_time) * 1000\n                 return diagram, report\n \n-            # Group nodes by to-do updates\n-            node_groups = self._group_nodes_by_to_dos(processed, to_do_nodes)\n+            # Group nodes by to-do updates (now with TODO extraction if enabled)\n+            node_groups = self._group_nodes_by_to_dos(processed, to_do_nodes, to_do_nodes_map)"
    format: unified
    backup: true
    validate: true
- label: Edit File 19
  type: diff_patch
  position:
    x: 900
    y: 700
  props:
    target_path: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py
    diff: "--- /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py\n+++ /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py\n@@ -2,14 +2,16 @@\n         self,\n         original_diagram: Dict[str, Any],\n         node_groups: List[Dict[str, Any]],\n+        extracted_todos: List[Dict[str, Any]],\n         report: DiagramProcessingReport\n     ) -> Dict[str, Any]:\n         \"\"\"\n-        Create the main grouped diagram with sub_diagram nodes.\n+        Create the main grouped diagram with sub_diagram nodes and extracted TODO nodes.\n \n         Args:\n             original_diagram: Original diagram\n             node_groups: List of node groups\n+            extracted_todos: List of extracted TODO nodes to insert between sub-diagrams\n             report: Processing report\n \n         Returns:"
    format: unified
    backup: true
    validate: true
- label: tool_result 21
  type: api_job
  position:
    x: 900
    y: 1000
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: tool_result 1
  type: api_job
  position:
    x: 950
    y: 250
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: tool_result 9
  type: api_job
  position:
    x: 950
    y: 400
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: tool_result 16
  type: api_job
  position:
    x: 950
    y: 700
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: Edit File 29
  type: diff_patch
  position:
    x: 950
    y: 1000
  props:
    target_path: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/config.py
    diff: "--- /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/config.py\n+++ /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/config.py\n@@ -3,4 +3,7 @@\n                 \"output_subdirectory\": self.todo_subdiagram_grouper.output_subdirectory,\n                 \"preserve_connections\": self.todo_subdiagram_grouper.preserve_connections,\n                 \"naming_convention\": self.todo_subdiagram_grouper.naming_convention,\n+                \"extract_todos_to_main\": self.todo_subdiagram_grouper.extract_todos_to_main,\n+                \"min_nodes_for_subdiagram\": self.todo_subdiagram_grouper.min_nodes_for_subdiagram,\n+                \"skip_trivial_subdiagrams\": self.todo_subdiagram_grouper.skip_trivial_subdiagrams,\n             },"
    format: unified
    backup: true
    validate: true
- label: Read File 7
  type: db
  position:
    x: 1000
    y: 250
  props:
    operation: read
    sub_type: file
    file: /home/soryhyun/DiPeO/projects/claude_code/sessions/2025-09-20_04-27-06/grouped/to_do_2.light.yaml
- label: Edit File 13
  type: diff_patch
  position:
    x: 1000
    y: 550
  props:
    target_path: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py
    diff: "--- /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py\n+++ /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/to_do_subdiagram_grouper.py\n@@ -1,3 +1,3 @@\n     def _group_nodes_by_to_dos(\n-        self, diagram: Dict[str, Any], to_do_nodes: List[Dict[str, Any]]\n-    ) -> List[Dict[str, Any]]:\n+        self, diagram: Dict[str, Any], to_do_nodes: List[Dict[str, Any]], to_do_nodes_map: Dict[str, Dict[str, Any]]\n+    ) -> Tuple[List[Dict[str, Any]], List[Dict[str, Any]]]:"
    format: unified
    backup: true
    validate: true
- label: tool_result 22
  type: api_job
  position:
    x: 1000
    y: 1000
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
connections:
- from: tool_result 1
  to: Read File 7
  content_type: raw_text
- from: Edit File 12
  to: tool_result 9
  content_type: raw_text
- from: tool_result 9
  to: Edit File 13
  content_type: raw_text
- from: Edit File 19
  to: tool_result 16
  content_type: raw_text
- from: tool_result 21
  to: Edit File 29
  content_type: raw_text
- from: Edit File 29
  to: tool_result 22
  content_type: raw_text
metadata:
  group_name: to_do_1
  node_count: 10
  connection_count: 6
  extracted_from: unknown
persons:
  claude_code:
    service: anthropic
    model: claude-code
    api_key_id: APIKEY_CLAUDE
    system_prompt: You are Claude Code, an AI assistant helping with software development.

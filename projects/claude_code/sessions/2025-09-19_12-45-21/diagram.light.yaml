version: light
nodes:
- label: Start
  type: start
  position: {x: 100, y: 100}
  props:
    trigger_mode: manual
    custom_data:
      session_id: 4ad614ca-a513-432c-b600-d598c4816336
      initial_prompt: |-
        <command-name>/clear</command-name>
                    <command-message>clear</command-message>
                    <command-args></command-args>
- label: Claude Responds To User 1
  type: person_job
  position: {x: 350, y: 100}
  props:
    person: claude_code
    default_prompt: |-
      <command-name>/clear</command-name>
                  <command-message>clear</command-message>
                  <command-args></command-args>
- label: Claude Responds To User 2
  type: person_job
  position: {x: 400, y: 100}
  props:
    person: claude_code
    default_prompt: <local-command-stdout></local-command-stdout>
- label: Claude Responds To User 3
  type: person_job
  position: {x: 450, y: 100}
  props:
    person: claude_code
    default_prompt: it seems @dipeo/domain/cc_translate/ has inconsistent phase methods. can't we just renmae `diagram_converter.py` to `converter.py` which implements its base, and `pipeline` to `post_processor`... etc? those are unnecessarily diverse. think
- label: Bash Command 1
  type: code_job
  position: {x: 500, y: 100}
  props:
    language: bash
    code: find /home/soryhyun/DiPeO -type d -name "*cc_translate*" 2>/dev/null | head -20
    timeout: 120000
    description: Find cc_translate directories
- label: Bash Command 2
  type: code_job
  position: {x: 550, y: 100}
  props:
    language: bash
    code: ls -la /home/soryhyun/DiPeO/dipeo/domain/cc_translate/
    timeout: 120000
    description: List files in domain cc_translate
- label: Bash Command 3
  type: code_job
  position: {x: 600, y: 100}
  props:
    language: bash
    code: ls -la /home/soryhyun/DiPeO/dipeo/infrastructure/cc_translate/
    timeout: 120000
    description: List files in infrastructure cc_translate
- label: Bash Command 4
  type: code_job
  position: {x: 650, y: 100}
  props:
    language: bash
    code: find /home/soryhyun/DiPeO/dipeo/domain/cc_translate -name "*.py" | grep -v __pycache__ | xargs ls -1
    timeout: 120000
    description: Find all Python files in domain cc_translate
- label: Update TODO 1
  type: db
  position: {x: 700, y: 100}
  props:
    operation: write
    sub_type: memory
    query: UPDATE TODO LIST
    data:
      todos:
      - content: Rename diagram_converter.py to converter.py in convert/
        activeForm: Renaming diagram_converter.py to converter.py
        status: pending
      - content: Rename pipeline.py to post_processor.py in post_processing/
        activeForm: Renaming pipeline.py to post_processor.py
        status: pending
      - content: Rename session_orchestrator.py to preprocessor.py in preprocess/
        activeForm: Renaming session_orchestrator.py to preprocessor.py
        status: pending
      - content: Update all import statements across the codebase
        activeForm: Updating all import statements
        status: pending
      - content: Update __init__.py files to reflect new names
        activeForm: Updating __init__.py files
        status: pending
- label: tool_result 1
  type: api_job
  position: {x: 750, y: 100}
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: Read File 1
  type: db
  position: {x: 800, y: 250}
  props:
    operation: read
    sub_type: file
    file: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/convert/diagram_converter.py
    lines: '1:50'
- label: Read File 2
  type: db
  position: {x: 850, y: 250}
  props:
    operation: read
    sub_type: file
    file: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/post_processing/pipeline.py
    lines: '1:40'
- label: Read File 3
  type: db
  position: {x: 900, y: 250}
  props:
    operation: read
    sub_type: file
    file: /home/soryhyun/DiPeO/dipeo/domain/cc_translate/preprocess/session_orchestrator.py
    lines: '1:40'
- label: Update TODO 2
  type: db
  position: {x: 950, y: 250}
  props:
    operation: write
    sub_type: memory
    query: UPDATE TODO LIST
    data:
      todos:
      - content: Rename diagram_converter.py to converter.py and DiagramConverter class to Converter
        activeForm: Renaming diagram_converter.py to converter.py
        status: in_progress
      - content: Rename pipeline.py to post_processor.py and PostProcessingPipeline class to PostProcessor
        activeForm: Renaming pipeline.py to post_processor.py
        status: pending
      - content: Rename session_orchestrator.py to preprocessor.py and SessionOrchestrator class to Preprocessor
        activeForm: Renaming session_orchestrator.py to preprocessor.py
        status: pending
      - content: Update all import statements across the codebase
        activeForm: Updating all import statements
        status: pending
      - content: Update __init__.py files to reflect new names
        activeForm: Updating __init__.py files
        status: pending
- label: tool_result 2
  type: api_job
  position: {x: 1000, y: 250}
  props:
    endpoint: /tools/tool_result
    method: POST
    body: {}
    timeout: 30
    description: tool_result operation
- label: Bash Command 5
  type: code_job
  position: {x: 1050, y: 250}
  props:
    language: bash
    code: rg "from.*diagram_converter import|import.*diagram_converter" --type py
    timeout: 120000
    description: Find all imports of diagram_converter
- label: Bash Command 6
  type: code_job
  position: {x: 300, y: 250}
  props:
    language: bash
    code: rg "from.*pipeline import|import.*pipeline|PostProcessingPipeline" --type py
    timeout: 120000
    description: Find all imports of PostProcessingPipeline
- label: Claude Responds To User 4
  type: person_job
  position: {x: 350, y: 250}
  props:
    person: claude_code
    default_prompt: '[Request interrupted by user]'
- label: Claude Responds To User 5
  type: person_job
  position: {x: 400, y: 250}
  props:
    person: claude_code
    default_prompt: |-
      <command-name>/model</command-name>
                  <command-message>model</command-message>
                  <command-args></command-args>
- label: Claude Responds To User 6
  type: person_job
  position: {x: 450, y: 250}
  props:
    person: claude_code
    default_prompt: "<local-command-stdout>Set model to \e[1mopus (claude-opus-4-1-20250805)\e[22m</local-command-stdout>"
connections:
- {from: Start, to: Claude Responds To User 1, content_type: raw_text}
- {from: Claude Responds To User 1, to: Claude Responds To User 2, content_type: raw_text}
- {from: Claude Responds To User 2, to: Claude Responds To User 3, content_type: raw_text}
- {from: Claude Responds To User 3, to: Bash Command 1, content_type: raw_text}
- {from: Bash Command 1, to: Bash Command 2, content_type: raw_text}
- {from: Bash Command 2, to: Bash Command 3, content_type: raw_text}
- {from: Bash Command 3, to: Bash Command 4, content_type: raw_text}
- {from: Bash Command 4, to: Update TODO 1, content_type: raw_text}
- {from: Update TODO 1, to: tool_result 1, content_type: raw_text}
- {from: tool_result 1, to: Read File 1, content_type: raw_text}
- {from: Read File 1, to: Read File 2, content_type: raw_text}
- {from: Read File 2, to: Read File 3, content_type: raw_text}
- {from: Read File 3, to: Update TODO 2, content_type: raw_text}
- {from: Update TODO 2, to: tool_result 2, content_type: raw_text}
- {from: tool_result 2, to: Bash Command 5, content_type: raw_text}
- {from: Bash Command 5, to: Bash Command 6, content_type: raw_text}
- {from: Bash Command 6, to: Claude Responds To User 4, content_type: raw_text}
- {from: Claude Responds To User 4, to: Claude Responds To User 5, content_type: raw_text}
- {from: Claude Responds To User 5, to: Claude Responds To User 6, content_type: raw_text}
persons:
  claude_code:
    service: anthropic
    model: claude-code
    api_key_id: APIKEY_CLAUDE
    system_prompt: You are Claude Code, an AI assistant helping with software development.
metadata:
  conversion:
    total_nodes: 20
    total_connections: 19
    total_persons: 0
    node_types:
      start: 1
      person_job: 6
      code_job: 6
      db: 5
      api_job: 2

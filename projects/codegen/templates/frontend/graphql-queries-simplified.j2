/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by GraphQL query generation
 * Generated at: {{ generated_at }}
 *
 * Contains all GraphQL queries, mutations, and subscriptions
 */

import { gql } from '@apollo/client';

{%- macro render_field(field, indent=0) -%}
{{ '  ' * indent }}{{ field.name }}
{%- if field.args and field.args|length > 0 -%}
(
{%- for arg in field.args -%}
{{ arg.name }}: {{ '$' if arg.isVariable else '' }}{{ arg.value }}{{ ', ' if not loop.last else '' }}
{%- endfor -%}
)
{%- endif -%}
{%- if field.fields and field.fields|length > 0 %} {
{%- for subfield in field.fields %}
{{ render_field(subfield, indent + 1) }}
{%- endfor %}
{{ '  ' * indent }}}
{%- endif -%}
{%- endmacro -%}

// ============================================================================
// QUERIES
// ============================================================================
{%- for query in queries %}

export const {{ query.name | upper }}_QUERY = gql`
  query {{ query.name }}(
{%- for var in query.variables %}
    ${{ var.name }}: {{ var.graphql_type }}{{ '!' if var.required else '' }}{{ ',' if not loop.last else '' }}
{%- endfor %}
  ) {
    {{ query.name }}(
{%- for var in query.variables %}
      {{ var.name }}: ${{ var.name }}{{ ',' if not loop.last else '' }}
{%- endfor %}
    ) {
{%- for field in query.fields %}
{{ render_field(field, 3) }}
{%- endfor %}
    }
  }
`;
{%- endfor %}

// ============================================================================
// MUTATIONS
// ============================================================================
{%- for mutation in mutations %}

export const {{ mutation.name | upper }}_MUTATION = gql`
  mutation {{ mutation.name }}(
{%- for var in mutation.variables %}
    ${{ var.name }}: {{ var.graphql_type }}{{ '!' if var.required else '' }}{{ ',' if not loop.last else '' }}
{%- endfor %}
  ) {
    {{ mutation.name }}(
{%- for var in mutation.variables %}
      {{ var.name }}: ${{ var.name }}{{ ',' if not loop.last else '' }}
{%- endfor %}
    ) {
{%- for field in mutation.fields %}
{{ render_field(field, 3) }}
{%- endfor %}
    }
  }
`;
{%- endfor %}

// ============================================================================
// SUBSCRIPTIONS
// ============================================================================
{%- for subscription in subscriptions %}

export const {{ subscription.name | upper }}_SUBSCRIPTION = gql`
  subscription {{ subscription.name }}(
{%- for var in subscription.variables %}
    ${{ var.name }}: {{ var.graphql_type }}{{ '!' if var.required else '' }}{{ ',' if not loop.last else '' }}
{%- endfor %}
  ) {
    {{ subscription.name }}(
{%- for var in subscription.variables %}
      {{ var.name }}: ${{ var.name }}{{ ',' if not loop.last else '' }}
{%- endfor %}
    ) {
{%- for field in subscription.fields %}
{{ render_field(field, 3) }}
{%- endfor %}
    }
  }
`;
{%- endfor %}

// Export all operations
export const queries = {
{%- for query in queries %}
  {{ query.name }}: {{ query.name | upper }}_QUERY,
{%- endfor %}
} as const;

export const mutations = {
{%- for mutation in mutations %}
  {{ mutation.name }}: {{ mutation.name | upper }}_MUTATION,
{%- endfor %}
} as const;

export const subscriptions = {
{%- for subscription in subscriptions %}
  {{ subscription.name }}: {{ subscription.name | upper }}_SUBSCRIPTION,
{%- endfor %}
} as const;

// Statistics
// Queries: {{ queries | length }}
// Mutations: {{ mutations | length }}
// Subscriptions: {{ subscriptions | length }}

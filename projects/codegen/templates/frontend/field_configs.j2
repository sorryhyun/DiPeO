/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by domain model field configs generation
 * Generated at: {{ now }}
 * 
 * This file contains base field configurations generated from domain models.
 * To customize fields, use the override system in each node's config file.
 */

import type { UnifiedFieldDefinition } from '@/infrastructure/config/unifiedConfig';

export interface GeneratedFieldConfigs {
  [nodeType: string]: UnifiedFieldDefinition[];
}

export const GENERATED_FIELD_CONFIGS: GeneratedFieldConfigs = {
{%- for node_config in node_configs %}
  '{{ node_config.nodeType }}': [
{%- for field in node_config.fields %}
    {
      name: '{{ field.name }}',
      type: '{{ field.type }}',
      label: '{{ field.label }}',
      required: {{ field.required | lower }},
{%- if field.get('placeholder') %}
      placeholder: '{{ field.placeholder }}',
{%- endif %}
{%- if field.get('defaultValue') is not none %}
      defaultValue: {{ field.defaultValue | tojson }},
{%- endif %}
{%- if field.get('min') is not none %}
      min: {{ field.min }},
{%- endif %}
{%- if field.get('max') is not none %}
      max: {{ field.max }},
{%- endif %}
{%- if field.get('rows') is not none %}
      rows: {{ field.rows }},
{%- endif %}
{%- if field.get('options') %}
      options: {{ field.options | tojson(indent=8) | replace('\n', '\n      ') }},
{%- endif %}
    },
{%- endfor %}
  ],
{%- endfor %}
};

/**
 * Get generated field configurations for a node type
 */
export function getGeneratedFields(nodeType: string): UnifiedFieldDefinition[] {
  return GENERATED_FIELD_CONFIGS[nodeType] || [];
}
"""
Auto-generated static node type for {{ nodeType }}.
DO NOT EDIT THIS FILE DIRECTLY.
"""

from dataclasses import *
from typing import *

from ..domain_models import *
from ..enums import *
from ..integrations import *


@dataclass(frozen=True)
class {{ nodeType | pascal_case }}Node:
    """{{ description }}"""
    # Required base fields first
    id: NodeID
    position: Vec2

    # Required node-specific fields
{%- for field in fields %}
{%- if field.required %}
    {{ field.name | snake_case }}: {{ field | python_type_with_context(nodeType) }}
{%- endif %}
{%- endfor %}

    # Optional base fields
    label: str = ""
    flipped: bool = False
    metadata: Optional[Dict[str, Any]] = None

    # Node type (fixed for this node class)
    type: NodeType = field(default=NodeType.{{ nodeType | replace('-', '_') | upper }}, init=False)

    # Optional node-specific fields
{%- for field in fields %}
{%- if not field.required %}
{%- if field.type in ['object', 'dict', 'json'] %}
    {{ field.name | snake_case }}: {{ field | python_type_with_context(nodeType) }} = field(default_factory=dict)
{%- elif field.type in ['array', 'list'] %}
    {{ field.name | snake_case }}: {{ field | python_type_with_context(nodeType) }} = field(default_factory=list)
{%- else %}
    {{ field.name | snake_case }}: {{ field | python_type_with_context(nodeType) }} = {{ field | python_default }}
{%- endif %}
{%- endif %}
{%- endfor %}

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = {
            "id": self.id,
            "type": self.type.value,
            "position": {"x": self.position.x, "y": self.position.y},
            "label": self.label,
            "flipped": self.flipped
        }
        if self.metadata:
            data["metadata"] = self.metadata

        # Add node-specific fields
{%- for field in fields %}
{%- if field.name == 'person' %}
        data["person"] = self.person
{%- else %}
        data["{{ field.name }}"] = self.{{ field.name | snake_case }}
{%- endif %}
{%- endfor %}
        return data

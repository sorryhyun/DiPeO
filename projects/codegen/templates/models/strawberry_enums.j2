"""
Generated Strawberry GraphQL enum definitions for DiPeO.
DO NOT EDIT - This file is automatically generated.

Generated at: {{ generation_time }}
"""

from enum import Enum
import strawberry

{% for enum in enums_data %}
@strawberry.enum
class {{ enum.name }}GraphQL(Enum):
    """{{ enum.description or '' }} - GraphQL enum"""
    {% for value in enum['values'] %}
    {{ value.name }} = "{{ value.value.lower() }}"
    {% endfor %}

{% endfor %}

# Export all GraphQL enums
__all__ = [
    {% for enum in enums_data %}
    "{{ enum.name }}GraphQL",
    {% endfor %}
]

# Mapping functions for conversion between Python and GraphQL enums
{% for enum in enums_data %}
def convert_{{ enum.name|lower }}_to_graphql(python_enum):
    """Convert Python {{ enum.name }} enum to GraphQL enum."""
    from dipeo.diagram_generated.enums import {{ enum.name }}
    mapping = {
        {% for value in enum['values'] %}
        {{ enum.name }}.{{ value.name }}: {{ enum.name }}GraphQL.{{ value.name }},
        {% endfor %}
    }
    return mapping.get(python_enum)

def convert_{{ enum.name|lower }}_from_graphql(graphql_enum):
    """Convert GraphQL {{ enum.name }} enum to Python enum."""
    from dipeo.diagram_generated.enums import {{ enum.name }}
    mapping = {
        {% for value in enum['values'] %}
        {{ enum.name }}GraphQL.{{ value.name }}: {{ enum.name }}.{{ value.name }},
        {% endfor %}
    }
    return mapping.get(graphql_enum)

{% endfor %}

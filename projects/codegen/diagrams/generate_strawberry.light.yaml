version: light
# Unified Strawberry Code Generation Pipeline
# This diagram consolidates all strawberry generation into a single IR-based flow
# using template_job nodes for rendering

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 400}
    props:
      custom_data:
        message: Starting unified strawberry generation

  # Load all TypeScript AST files
  - label: Load TypeScript AST
    type: db
    position: {x: 200, y: 400}
    props:
      operation: read
      sub_type: file
      format: json
      glob: true
      file:
        - "temp/**/*.ts.json"
        - "temp/core/enums/*.ts.json"  # Explicitly include core enums

  # Build complete Strawberry IR from AST and configuration
  - label: Build Strawberry IR
    type: code_job
    position: {x: 400, y: 400}
    props:
      language: python
      filePath: projects/codegen/code/strawberry/ir_builder.py
      functionName: build_complete_ir
      # This will:
      # 1. Load configuration from YAML files
      # 2. Process TypeScript AST
      # 3. Generate operations metadata
      # 4. Merge everything into strawberry_ir.json

  # Render all templates using template_job nodes
  # Note: Templates will receive the IR data from the Build Strawberry IR node
  - label: Render Strawberry Types
    type: template_job
    position: {x: 600, y: 200}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/strawberry/strawberry_types.j2
      output_path: dipeo/diagram_generated_staged/graphql/strawberry_nodes.py
      variables:
        module_name: "strawberry_nodes"
        generated_warning: "DO NOT EDIT - Generated by DiPeO Unified Strawberry Pipeline"
      # The IR data comes through the connection and will be available in the template

  - label: Render Scalars
    type: template_job
    position: {x: 600, y: 300}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/strawberry/strawberry_scalars.j2
      output_path: dipeo/diagram_generated_staged/graphql/scalars.py
      variables:
        module_name: "scalars"
        generated_warning: "DO NOT EDIT - Generated by DiPeO Unified Strawberry Pipeline"

  - label: Render Domain Types
    type: template_job
    position: {x: 600, y: 400}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/strawberry/strawberry_domain_full.j2
      output_path: dipeo/diagram_generated_staged/graphql/domain_types.py
      variables:
        module_name: "domain_types"
        generated_warning: "DO NOT EDIT - Generated by DiPeO Unified Strawberry Pipeline"

  - label: Render Input Types
    type: template_job
    position: {x: 600, y: 500}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/strawberry/strawberry_inputs.j2
      output_path: dipeo/diagram_generated_staged/graphql/inputs.py
      variables:
        module_name: "inputs"
        generated_warning: "DO NOT EDIT - Generated by DiPeO Unified Strawberry Pipeline"

  - label: Render GraphQL Enums
    type: template_job
    position: {x: 600, y: 600}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/strawberry/strawberry_enums.j2
      output_path: dipeo/diagram_generated_staged/graphql/enums.py
      variables:
        module_name: "enums"
        generated_warning: "DO NOT EDIT - Generated by DiPeO Unified Strawberry Pipeline"

  - label: Render Mutations
    type: template_job
    position: {x: 800, y: 400}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/strawberry/strawberry_mutations.j2
      output_path: dipeo/diagram_generated_staged/graphql/node_mutations.py
      variables:
        module_name: "node_mutations"
        generated_warning: "DO NOT EDIT - Generated by DiPeO Unified Strawberry Pipeline"

  # End node
  - label: End
    type: endpoint
    position: {x: 1000, y: 400}
    props:
      custom_data:
        message: Strawberry generation complete

connections:
  # Load AST and build IR
  - {from: Start, to: Load TypeScript AST}
  - {from: Load TypeScript AST, to: Build Strawberry IR}

  # Parallel template rendering from IR
  - {from: Build Strawberry IR, to: Render Strawberry Types}
  - {from: Build Strawberry IR, to: Render Scalars}
  - {from: Build Strawberry IR, to: Render Domain Types}
  - {from: Build Strawberry IR, to: Render Input Types}
  - {from: Build Strawberry IR, to: Render GraphQL Enums}
  - {from: Build Strawberry IR, to: Render Mutations}

  # Complete
  - {from: Render Strawberry Types, to: End}
  - {from: Render Scalars, to: End}
  - {from: Render Domain Types, to: End}
  - {from: Render Input Types, to: End}
  - {from: Render GraphQL Enums, to: End}
  - {from: Render Mutations, to: End}

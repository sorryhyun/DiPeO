# Generate Frontend Node Registry - Simplified
# Uses simple_registry_v2 that works directly with DB glob results

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 200}

  # NEW: Discover node spec files dynamically using glob patterns
  - label: Discover Node Specs
    type: db
    position: {x: 200, y: 200}
    props:
      operation: read
      sub_type: file
      format: json  # Parse JSON files automatically
      glob: true  # Enable glob pattern expansion
      file:
        # Dynamically discover all node spec files
        - "temp/nodes/*.spec.ts.json"

  - label: Generate Registry
    type: code_job
    position: {x: 350, y: 200}
    props:
      language: python
      file_path: dipeo/infrastructure/codegen/generators/registry_generator.py
      function_name: main

  - label: Write Registry
    type: db
    position: {x: 500, y: 200}
    props:
      operation: write
      format: text
      sub_type: file
      file: apps/web/src/__generated__/nodeRegistry.ts

  - label: End
    type: endpoint
    position: {x: 650, y: 200}

connections:
  - {from: Start, to: Discover Node Specs}
  - {from: Discover Node Specs, to: Generate Registry, content_type: object}
  - {from: Generate Registry, to: Write Registry, label: generated_code, content_type: object}
  - {from: Write Registry, to: End}

# Generate Integration Models
# Extracts and generates integration-specific enums and models from integration.ts

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 200}
    props:
      custom_data:
        message: Starting integration models generation

  # Run batch parser if cache doesn't exist
  - label: Parse TypeScript Batch
    type: sub_diagram
    position: {x: 200, y: 200}
    props:
      diagram_name: projects/codegen/diagrams/shared/parse_typescript_batch_direct
      diagram_format: light
      passInputData: false
      ignoreIfSub: true

  # Load cached integration AST data
  - label: Load Integration AST
    type: db
    position: {x: 400, y: 200}
    props:
      operation: read
      sub_type: file
      format: json
      source_details: temp/core/integration.ts.json

  # Extract integration-specific definitions
  - label: Extract Integrations
    type: code_job
    position: {x: 500, y: 200}
    props:
      language: python
      filePath: projects/codegen/code/shared/extract_integrations.py
      functionName: main

  # Render integrations template
  - label: Render Integrations
    type: template_job
    position: {x: 700, y: 200}
    props:
      engine: jinja2
      template_path: projects/codegen/templates/models/integrations.j2
      output_path: dipeo/diagram_generated_staged/integrations.py
      variables:
        module_name: "integrations"
        generated_warning: "DO NOT EDIT - Generated from integration.ts"

  - label: End
    type: endpoint
    position: {x: 900, y: 200}
    props:
      save_to_file: false

connections:
  # Run batch parser first
  - {from: Start, to: Parse TypeScript Batch}
    
  # Load cached AST after parsing
  - {from: Parse TypeScript Batch, to: Load Integration AST, content_type: object}

  # Extract definitions from cached AST
  - {from: Load Integration AST, to: Extract Integrations, content_type: object}

  # Pass extracted data to template
  - {from: Extract Integrations, to: Render Integrations, label: integration_data, content_type: object}

  - {from: Render Integrations, to: End}
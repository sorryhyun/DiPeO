version: light
nodes:
- label: start
  type: start
  position: {x: -179, y: 299}
  props:
    custom_data:
      message: Starting Zod schemas generation with template job
- label: parse typescript batch
  type: sub_diagram
  position: {x: 43, y: 66}
  props:
    diagram_name: projects/codegen/diagrams/shared/parse_typescript_batch_direct
    diagram_format: light
    passInputData: false
    ignoreIfSub: true
- label: load all ast files
  type: db
  position: {x: 248, y: 276}
  props:
    operation: read
    sub_type: file
    format: json  # Parse JSON files automatically
    glob: true  # Enable glob pattern expansion
    source_details:
    - temp/codegen/mappings.ts.json
    - temp/codegen/node-interface-map.ts.json
    - temp/core/diagram.ts.json
    # Base node data interface (must be loaded before node data files)
    - temp/core/nodes/base.ts.json
    # Dynamically discover all node data files
    - "temp/core/nodes/*.data.ts.json"
- label: extract mappings
  type: code_job
  position: {x: 509, y: -9}
  props:
    language: python
    filePath: projects/codegen/code/shared/extract_mappings.py
    functionName: main
    code_type: python
- label: generate zod schemas
  type: code_job
  position: {x: 785, y: 220}
  props:
    language: python
    filePath: projects/codegen/code/shared/extractors/zod_schemas_extractor.py
    functionName: main
    code_type: python
- label: render zod schemas template
  type: template_job
  position: {x: 1061, y: 62}
  props:
    engine: jinja2
    template_path: projects/codegen/templates/frontend/zod_schemas.j2
    output_path: apps/web/src/__generated__/schemas.ts
    variables:
      module_name: schemas
      generated_warning: DO NOT EDIT - Generated by DiPeO
- label: end
  type: endpoint
  position: {x: 1413, y: 280}
  props:
    save_to_file: false
connections:
- {from: start, to: parse typescript batch, content_type: raw_text}
- {from: parse typescript batch, to: load all ast files, content_type: object}
- {from: load all ast files, to: extract mappings, content_type: object, label: default}
- {from: load all ast files, to: generate zod schemas, content_type: object, label: ast_files}
- {from: extract mappings, to: generate zod schemas, content_type: object, label: mappings}
- {from: generate zod schemas, to: render zod schemas template, content_type: object}
- {from: render zod schemas template, to: end, content_type: raw_text}

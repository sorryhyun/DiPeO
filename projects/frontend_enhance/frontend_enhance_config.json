{
  "app_type": "dashboard",
  "framework": "react",
  "target_framework": "react",
  "styling_approach": "tailwind",
  "features": [
    "responsive navigation",
    "data visualization charts",
    "real-time updates",
    "dark mode toggle",
    "user authentication UI"
  ],
  "target_audience": "business analysts",
  "target_score": 85,
  "max_iterations": 3,
  "output_dir": "./generated_frontend_enhanced",
  "prompt_type": "frontend_component_generator",
  "prompt_requirements": [
    "Generate modern, production-ready React components with proper separation of concerns",
    "Implement advanced React patterns: custom hooks, compound components, render props, HOCs where appropriate",
    "Use React 18+ features: Suspense, Error Boundaries, Concurrent features, Server Components readiness",
    "Include comprehensive TypeScript types with generics, discriminated unions, and strict type safety",
    "Implement proper state management patterns: local state, lifting state, context API, and reducer patterns",
    "Handle complex async operations with proper loading, error, and success states using React Query or SWR patterns",
    "Implement responsive design with Tailwind CSS including container queries and fluid typography",
    "Ensure WCAG 2.1 AA compliance with proper ARIA labels, keyboard navigation, and screen reader support",
    "Optimize for Core Web Vitals: LCP < 2.5s, FID < 100ms, CLS < 0.1",
    "Implement code splitting with React.lazy() and dynamic imports for optimal bundle sizes",
    "Include proper error boundaries with fallback UI and error recovery mechanisms",
    "Implement data virtualization for large lists and infinite scrolling patterns",
    "Use React.memo, useMemo, and useCallback appropriately to prevent unnecessary re-renders",
    "Implement proper form validation with real-time feedback and error recovery",
    "Include unit tests setup with React Testing Library and integration test patterns",
    "Implement proper SEO meta tags and structured data for SSR/SSG scenarios",
    "Handle authentication flows with protected routes and token refresh patterns",
    "Implement WebSocket connections for real-time features with proper cleanup",
    "Use Intersection Observer API for lazy loading and scroll-triggered animations",
    "Implement proper data caching and optimistic UI updates",
    "Include proper logging and monitoring integration points",
    "Handle offline functionality with service workers and local storage fallbacks",
    "Implement proper CSS-in-JS or CSS modules patterns for style encapsulation",
    "Use proper environment variable handling and configuration management",
    "Implement i18n/l10n support with proper text direction (RTL/LTR) handling",
    "Include proper analytics event tracking integration points",
    "Implement progressive enhancement with proper fallbacks for older browsers",
    "Use proper image optimization with next-gen formats and responsive images",
    "Implement proper CSP headers and XSS protection patterns",
    "Handle proper data sanitization and validation on the frontend"
  ],
  "evaluation_criteria": [
    "Code quality and maintainability",
    "Component reusability and composability",
    "Type safety and error handling",
    "Performance optimization",
    "Accessibility compliance",
    "Responsive design implementation",
    "Best practices adherence"
  ],
  "prompt_sections": [
    "Component Requirements",
    "Technical Specifications",
    "Design System Integration",
    "State Management",
    "Error Handling",
    "Performance Considerations",
    "Accessibility Requirements",
    "Testing Guidelines"
  ]
}
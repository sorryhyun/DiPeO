{
  "app_type": "e-commerce",
  "framework": "react",
  "target_framework": "react",
  "styling_approach": "tailwind",
  "objective": "Modern E-commerce Platform",
  "features": [
    "responsive navigation",
    "product catalog with filters",
    "shopping cart functionality",
    "checkout and payment UI",
    "user authentication UI",
    "order tracking",
    "wishlist management",
    "product reviews and ratings"
  ],
  "target_audience": "Online Shoppers",
  "output_dir": "./generated",
  "development_mode": {
    "enable_mock_data": true,
    "mock_auth_users": [
      {"email": "admin@shop.com", "password": "admin123", "role": "admin"},
      {"email": "customer@example.com", "password": "customer123", "role": "customer"},
      {"email": "vendor@store.com", "password": "vendor123", "role": "vendor"}
    ],
    "mock_api_endpoints": [
      "/api/products",
      "/api/cart",
      "/api/orders",
      "/api/checkout",
      "/api/reviews",
      "/api/wishlist"
    ],
    "disable_websocket_in_dev": true,
    "use_localstorage_persistence": true
  },
  "prompt_requirements": [
    "Generate modern, production-ready React components with TypeScript",
    "Use React 18+ features: Suspense, Error Boundaries, Context API",
    "Implement responsive design with Tailwind CSS and dark mode support",
    "Ensure basic accessibility with ARIA labels and keyboard navigation",
    "Handle authentication with protected routes and token management",
    "Implement proper form validation with error handling",
    "Use React Query for data fetching with loading and error states",
    "Implement i18n support for internationalization",
    "IMPORTANT: Include mock product data and mock payment processing",
    "Create fallback mechanisms when backend services are unavailable",
    "Provide mock API responses for all e-commerce endpoints",
    "Implement mock payment gateway responses for testing",
    "Ensure the app runs standalone without any backend dependencies",
    "Use localStorage for cart persistence and user sessions"
  ],
  "evaluation_criteria": [
    "Code quality and maintainability",
    "Component reusability and composability",
    "Type safety and error handling",
    "Performance optimization",
    "Accessibility compliance",
    "Responsive design implementation",
    "Best practices adherence"
  ],
  "prompt_sections": [
    "Component Structure",
    "Mock Product Data",
    "Shopping Cart Logic",
    "Authentication Flow",
    "Payment Processing",
    "State Management",
    "Error Handling",
    "Development Mode Features"
  ]
}
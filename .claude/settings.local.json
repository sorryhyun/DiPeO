{
  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "true",
    "MAX_THINKING_TOKENS": "32678",
    "MAX_MCP_OUTPUT_TOKENS": "128000"
  },
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(make:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(python3:*)",
      "Bash(pnpm build:*)",
      "Bash(grep:*)",
      "Bash(dipeo run:*)",
      "Bash(tree:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(for:*)",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(pnpm list:*)",
      "Bash(node:*)",
      "Bash(xargs:*)",
      "Bash(DIPEO_LOG_LEVEL=DEBUG dipeo run projects/codegen/diagrams/parse_typescript_batch_direct --light --debug --timeout=20)",
      "Bash(tee:*)",
      "Bash(uv pip install:*)",
      "Bash(dipeo:*)",
      "Read(//tmp/**)",
      "Bash(sqlite3:*)",
      "Bash(dipeocc convert:*)",
      "WebSearch",
      "Bash(uv sync:*)",
      "Bash(curl -X POST http://localhost:8000/graphql )",
      "mcp__ide__getDiagnostics",
      "Bash(awk:*)",
      "Bash(do echo \"=== $db ===\")",
      "WebFetch(domain:www.anthropic.com)",
      "Read(//home/soryhyun/.claude/projects/**)",
      "Bash(wc:*)",
      "SlashCommand(/dipeotodos)",
      "Read(//home/soryhyun/.claude/**)",
      "Bash(DIPEO_BASE_DIR=/home/soryhyun/DiPeO dipeo run projects/codegen/diagrams/parse_typescript_batch_direct --light --debug --timeout=20)",
      "Bash(npx tsc:*)",
      "Bash(npx tsx:*)",
      "Bash(mypy:*)",
      "Bash(ruff check:*)",
      "Bash(curl -s http://localhost:8000/graphql -H \"Content-Type: application/json\" -d '{\"\"\"\"query\"\"\"\": \"\"\"\"{ __schema { subscriptionType { name fields { name type { name kind ofType { name kind } } args { name type { name kind ofType { name } } } } } } }\"\"\"\"}')",
      "Bash(pnpm --filter web exec graphql-codegen --version)",
      "WebFetch(domain:strawberry.rocks)",
      "WebFetch(domain:github.com)",
      "Bash(do echo \"=== Checking $file ===\")"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "python3 scripts/inject-agent-docs.py"
          }
        ]
      }
    ]
  },
  "additionalDirectories": [
    ".claude/commands"
  ]
}

version: light

name: data_processing_pipeline_typescript
description: TypeScript variant of the data processing pipeline showcasing cross-language support.

persons:
  "Quality Checker":
    service: openai
    model: gpt-5-nano-2025-08-07
    api_key_id: APIKEY_52609F
    system_prompt: |
      You are a meticulous data quality analyst. Always reply with JSON containing a numeric score and an issues array.

  "Data Analyst":
    service: openai
    model: gpt-5-nano-2025-08-07
    api_key_id: APIKEY_52609F
    system_prompt: |
      You uncover trends and anomalies in enriched datasets. Provide concise insights formatted as JSON.

  "Report Writer":
    service: openai
    model: gpt-5-nano-2025-08-07
    api_key_id: APIKEY_52609F
    system_prompt: |
      You write comprehensive markdown reports summarizing processing outcomes for business stakeholders.

nodes:
  - label: Start
    type: start
    position: {x: -728, y: 348}
    props:
      trigger_mode: manual
      custom_data:
        processing_config:
          quality_threshold: 70
          output_format: json

  - label: Load Raw Data
    type: db
    position: {x: -386, y: 146}
    props:
      operation: read
      sub_type: file
      source_details: files/uploads/raw_data.csv

  - label: Load Config
    type: db
    position: {x: -413, y: 481}
    props:
      operation: read
      sub_type: file
      source_details: files/config/processing_rules.json
      flipped: [false, true]

  - label: Parse Data
    type: code_job
    position: {x: 19, y: 342}
    props:
      language: typescript
      filePath: files/code_examples/data_processor.ts
      functionName: parse_data

  - label: Quality Check
    type: person_job
    position: {x: 355, y: 233}
    props:
      person: "Quality Checker"
      max_iteration: 1
      default_prompt: |
        Analyze this data summary and provide a quality score (0-100):
        Total rows: {{parsed_data.total_rows}}
        Valid rows: {{parsed_data.valid_rows}}
        Invalid rows: {{parsed_data.invalid_rows}}
        Columns: {{parsed_data.columns}}
        Statistics: {{parsed_data.statistics}}

        IMPORTANT: Respond with ONLY valid JSON matching:
        {
          "score": <number>,
          "issues": ["issue1", "issue2"]
        }

        Do not include explanatory text outside the JSON block.

  - label: Extract Score
    type: code_job
    position: {x: 731, y: 425}
    props:
      language: typescript
      filePath: files/code_examples/data_processor.ts
      functionName: extract_score

  - label: Check Quality Threshold
    type: condition
    position: {x: 720, y: 775}
    props:
      condition_type: custom
      expression: processing_result.quality_score >= processing_config.quality_threshold
      flipped: [true, false]

  - label: Transform Data
    type: code_job
    position: {x: 271, y: 943}
    props:
      language: typescript
      filePath: files/code_examples/data_processor.ts
      functionName: transform_data
      flipped: [true, false]

  - label: Enrich with API
    type: api_job
    position: {x: -79, y: 995}
    props:
      url: https://api.exchangerate-api.com/v4/latest/USD
      method: GET
      headers:
        Accept: application/json
      flipped: [true, false]

  - label: Merge Enriched Data
    type: code_job
    position: {x: -393, y: 854}
    props:
      language: typescript
      filePath: files/code_examples/data_processor.ts
      functionName: enrich_data
      flipped: [true, false]

  - label: Pattern Analysis
    type: code_job
    position: {x: -550, y: 950}
    props:
      language: typescript
      filePath: files/code_examples/data_processor.ts
      functionName: analyze_patterns
      flipped: [true, false]

  - label: Analyze Patterns
    type: person_job
    position: {x: -722, y: 1054}
    props:
      person: "Data Analyst"
      max_iteration: 1
      memorize_to: CONVERSATION_PAIRS
      memory_settings:
        view: conversation_pairs
        max_messages: 20
        preserve_system: true
      default_prompt: |
        Analyze these patterns in the enriched data:
        {{enriched_result.patterns}}

        Provide JSON with sections for:
        1. Key trends
        2. Anomalies
        3. Recommendations

      flipped: [true, false]

  - label: Handle Low Quality
    type: code_job
    position: {x: 276, y: 655}
    props:
      language: typescript
      filePath: files/code_examples/data_processor.ts
      functionName: handle_error
      flipped: [true, false]

  - label: Generate Report
    type: person_job
    position: {x: -1040, y: 836}
    props:
      person: "Report Writer"
      max_iteration: 1
      memorize_to: ALL_MESSAGES
      memory_settings:
        view: all_involved
        preserve_system: true
      default_prompt: |
        Create a comprehensive data processing report combining:
        - Processing summary: {{final_data.enriched_data}}
        - Pattern analysis: {{final_data.analysis}}
        - Quality metrics: Score {{final_data.quality_score}}

        Produce a professional markdown report with sections, tables, and recommendations.

      flipped: [true, false]

  - label: Save Success Report
    type: endpoint
    position: {x: -1305, y: 657}
    props:
      save_to_file: true
      file_format: md
      file_path: files/results/data_processing_report.md

  - label: Save Processed Data
    type: endpoint
    position: {x: -869, y: 638}
    props:
      save_to_file: true
      file_format: json
      file_path: files/results/processed_data.json

  - label: Save Error Report
    type: endpoint
    position: {x: -102, y: 600}
    props:
      save_to_file: true
      file_format: json
      file_path: files/results/error_report.json

connections:
  - {from: Start, to: Load Raw Data, content_type: object, label: config}
  - {from: Start, to: Load Config, content_type: object, label: config}
  - {from: Start, to: Parse Data, content_type: object, label: processing_config}
  - {from: Load Raw Data, to: Parse Data, content_type: raw_text, label: raw_data}
  - {from: Load Config, to: Parse Data, content_type: raw_text, label: config_data}
  - {from: Parse Data, to: Quality Check, content_type: object, label: parsed_data}
  - {from: Quality Check, to: Extract Score, content_type: raw_text, label: quality_result}
  - {from: Parse Data, to: Extract Score, content_type: object, label: parsed_data}
  - {from: Extract Score, to: Check Quality Threshold, content_type: object, label: processing_result}
  - {from: Start, to: Check Quality Threshold, content_type: object, label: processing_config}
  - {from: Check Quality Threshold_condtrue, to: Transform Data, content_type: object, label: processing_result}
  - {from: Transform Data, to: Enrich with API, content_type: object, label: transformed_data}
  - {from: Enrich with API, to: Merge Enriched Data, content_type: raw_text, label: api_response}
  - {from: Transform Data, to: Merge Enriched Data, content_type: object, label: transformed_data}
  - {from: Merge Enriched Data, to: Pattern Analysis, content_type: object, label: enriched_data}
  - {from: Pattern Analysis, to: Analyze Patterns, content_type: object, label: enriched_result}
  - {from: Analyze Patterns, to: Generate Report, content_type: raw_text, label: analysis}
  - {from: Pattern Analysis, to: Generate Report, content_type: object, label: final_data}
  - {from: Generate Report, to: Save Success Report, content_type: raw_text}
  - {from: Pattern Analysis, to: Save Processed Data, content_type: object, label: enriched_result}
  - {from: Check Quality Threshold_condfalse, to: Handle Low Quality, content_type: object, label: processing_result}
  - {from: Handle Low Quality, to: Save Error Report, content_type: object, label: error_result}

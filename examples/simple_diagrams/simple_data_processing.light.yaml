version: light

nodes:
- label: start
  type: START
  position: {x: 100, y: 300}
  props:
    trigger_mode: manual
    custom_data:
      dataset_name: sales_data
      process_date: 2025-01-11

- label: load data
  type: DB
  position: {x: 350, y: 300}
  props:
    operation: read
    sub_type: file
    file: files/uploads/sample_data.csv

- label: clean data
  type: CODE_JOB
  position: {x: 600, y: 300}
  props:
    language: python
    code: |
      import json
      import csv
      from io import StringIO
      
      def process_data(input_data):
          # Parse CSV data
          reader = csv.DictReader(StringIO(input_data["raw_data"]))
          rows = list(reader)
          
          # Clean and validate data
          cleaned_rows = []
          invalid_count = 0
          
          for row in rows:
              # Remove empty values and strip whitespace
              cleaned_row = {k: v.strip() for k, v in row.items() if v and v.strip()}
              
              # Basic validation (customize as needed)
              if cleaned_row:
                  cleaned_rows.append(cleaned_row)
              else:
                  invalid_count += 1
          
          # Calculate statistics
          stats = {
              "total_rows": len(rows),
              "valid_rows": len(cleaned_rows),
              "invalid_rows": invalid_count,
              "columns": list(rows[0].keys()) if rows else []
          }
          
          return {
              "cleaned_data": cleaned_rows,
              "statistics": stats,
              "dataset_name": input_data.get("dataset_name", "unknown")
          }
      
      result = process_data(inputs)
    functionName: process_data

- label: analyze patterns
  type: PERSON_JOB
  position: {x: 900, y: 300}
  props:
    default_prompt: |
      Analyze this cleaned dataset and identify key patterns:
      
      Dataset: {{processed.dataset_name}}
      Statistics: {{processed.statistics}}
      Sample data (first 5 rows): {{processed.cleaned_data[:5]}}
      
      Please provide:
      1. Main patterns or trends you observe
      2. Data quality assessment
      3. Potential insights for business decisions
      
      Format your response as a structured analysis.
    max_iteration: 1
    memory_profile: FOCUSED
    person: Data Analyst

- label: format report
  type: CODE_JOB
  position: {x: 1200, y: 300}
  props:
    language: python
    code: |
      import json
      from datetime import datetime
      
      def format_report(input_data):
          analysis = input_data["analysis"]
          stats = input_data["statistics"]
          dataset_name = input_data["dataset_name"]
          
          report = f"""# Data Processing Report
      
      **Generated**: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
      **Dataset**: {dataset_name}
      
      ## Statistics
      - Total Rows: {stats['total_rows']}
      - Valid Rows: {stats['valid_rows']}
      - Invalid Rows: {stats['invalid_rows']}
      - Columns: {', '.join(stats['columns'])}
      
      ## Analysis
      {analysis}
      
      ## Processed Data Summary
      Successfully processed {stats['valid_rows']} records from {dataset_name}.
      Data quality: {round(stats['valid_rows'] / stats['total_rows'] * 100, 1)}%
      """
          
          return {"report": report, "metadata": stats}
      
      result = format_report(inputs)
    functionName: format_report

- label: save report
  type: ENDPOINT
  position: {x: 1500, y: 300}
  props:
    file_format: md
    save_to_file: true
    file_path: files/results/data_processing_report.md

connections:
- from: start
  to: load data
  content_type: object
  label: config

- from: load data
  to: clean data
  content_type: raw_text
  label: raw_data

- from: start
  to: clean data
  content_type: object
  label: config

- from: clean data
  to: analyze patterns
  content_type: object
  label: processed

- from: analyze patterns
  to: format report
  content_type: raw_text
  label: analysis

- from: clean data
  to: format report
  content_type: object
  label: processed

- from: format report
  to: save report
  content_type: object
  label: result

persons:
  Data Analyst:
    service: openai
    model: gpt-5-nano-2025-08-07
    system_prompt: You are a data analyst expert who identifies patterns and provides actionable insights from data.
    api_key_id: APIKEY_52609F
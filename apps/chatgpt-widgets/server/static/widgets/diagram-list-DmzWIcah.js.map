{"version":3,"file":"diagram-list-DmzWIcah.js","sources":["../../../src/diagram-list/index.tsx"],"sourcesContent":["/**\n * Diagram List Widget\n *\n * Displays a searchable, filterable list of available DiPeO diagrams\n */\n\nimport { useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { useGraphQLQuery } from '../hooks/use-graphql-query';\nimport { WidgetLayout } from '../components/WidgetLayout';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { LIST_DIAGRAMS_QUERY } from '../__generated__/queries/all-queries';\nimport type { ListDiagramsQuery } from '../__generated__/graphql';\nimport '../shared/index.css';\n\nfunction DiagramList() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const { data, loading, error, refetch } = useGraphQLQuery<ListDiagramsQuery>(\n    LIST_DIAGRAMS_QUERY\n  );\n\n  const filteredDiagrams = data?.listDiagrams?.filter((diagram) => {\n    if (!searchQuery) return true;\n    const query = searchQuery.toLowerCase();\n    return (\n      diagram.metadata?.name?.toLowerCase().includes(query) ||\n      diagram.metadata?.description?.toLowerCase().includes(query)\n    );\n  }) || [];\n\n  return (\n    <WidgetLayout\n      title=\"DiPeO Diagrams\"\n      error={error}\n      loading={loading && !data}\n    >\n      {/* Search Box */}\n      <div className=\"mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search diagrams...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n      </div>\n\n      {/* Diagram Count */}\n      <div className=\"text-sm text-gray-600 mb-3\">\n        {filteredDiagrams.length} diagram{filteredDiagrams.length !== 1 ? 's' : ''} found\n      </div>\n\n      {/* Diagram Cards */}\n      <div className=\"space-y-3\">\n        {filteredDiagrams.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            No diagrams found\n          </div>\n        ) : (\n          filteredDiagrams.map((diagram, index) => (\n            <div\n              key={diagram.metadata?.name || `diagram-${index}`}\n              className=\"border border-gray-200 rounded-lg p-4 hover:border-blue-400 hover:shadow-sm transition-all cursor-pointer\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">{diagram.metadata?.name || 'Unnamed Diagram'}</h3>\n                  {diagram.metadata?.description && (\n                    <p className=\"text-sm text-gray-600 mt-1\">{diagram.metadata.description}</p>\n                  )}\n                  <div className=\"flex items-center gap-3 mt-2 text-xs text-gray-500\">\n                    {diagram.metadata?.format && (\n                      <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\n                        {diagram.metadata.format}\n                      </span>\n                    )}\n                    {diagram.nodes && (\n                      <span>{diagram.nodes.length} nodes</span>\n                    )}\n                    {diagram.metadata?.created && (\n                      <span>{new Date(diagram.metadata.created).toLocaleDateString()}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Refresh Button */}\n      {data && (\n        <button\n          onClick={() => refetch()}\n          className=\"mt-4 w-full py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n        >\n          Refresh\n        </button>\n      )}\n    </WidgetLayout>\n  );\n}\n\n// Mount the widget\nconst rootElement = document.getElementById('diagram-list-root');\nif (rootElement) {\n  const root = createRoot(rootElement);\n  root.render(\n    <ErrorBoundary>\n      <DiagramList />\n    </ErrorBoundary>\n  );\n}\n"],"names":["DiagramList","searchQuery","setSearchQuery","useState","data","loading","error","refetch","useGraphQLQuery","LIST_DIAGRAMS_QUERY","filteredDiagrams","diagram","query","jsxs","WidgetLayout","jsx","e","index","rootElement","createRoot","ErrorBoundary"],"mappings":"kFAeA,SAASA,GAAc,CACrB,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAS,EAAE,EAC3C,CAAE,KAAAC,EAAM,QAAAC,EAAS,MAAAC,EAAO,QAAAC,GAAYC,EACxCC,CAAA,EAGIC,EAAmBN,GAAM,cAAc,OAAQO,GAAY,CAC/D,GAAI,CAACV,EAAa,MAAO,GACzB,MAAMW,EAAQX,EAAY,YAAA,EAC1B,OACEU,EAAQ,UAAU,MAAM,YAAA,EAAc,SAASC,CAAK,GACpDD,EAAQ,UAAU,aAAa,YAAA,EAAc,SAASC,CAAK,CAAA,CAE9D,GAAK,CAAA,EAEN,OACEC,EAAAA,KAACC,EAAA,CACC,MAAM,iBACN,MAAAR,EACA,QAASD,GAAW,CAACD,EAGrB,SAAA,CAAAW,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,qBACZ,MAAOd,EACP,SAAWe,GAAMd,EAAec,EAAE,OAAO,KAAK,EAC9C,UAAU,wGAAA,CAAA,EAEd,EAGAH,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACZ,SAAA,CAAAH,EAAiB,OAAO,WAASA,EAAiB,SAAW,EAAI,IAAM,GAAG,QAAA,EAC7E,QAGC,MAAA,CAAI,UAAU,YACZ,SAAAA,EAAiB,SAAW,EAC3BK,MAAC,MAAA,CAAI,UAAU,iCAAiC,SAAA,mBAAA,CAEhD,EAEAL,EAAiB,IAAI,CAACC,EAASM,IAC7BF,EAAAA,IAAC,MAAA,CAEC,UAAU,4GAEV,eAAC,MAAA,CAAI,UAAU,mCACb,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAE,MAAC,MAAG,UAAU,8BAA+B,SAAAJ,EAAQ,UAAU,MAAQ,kBAAkB,EACxFA,EAAQ,UAAU,aACjBI,EAAAA,IAAC,KAAE,UAAU,6BAA8B,SAAAJ,EAAQ,SAAS,WAAA,CAAY,EAE1EE,EAAAA,KAAC,MAAA,CAAI,UAAU,qDACZ,SAAA,CAAAF,EAAQ,UAAU,QACjBI,EAAAA,IAAC,OAAA,CAAK,UAAU,kCACb,SAAAJ,EAAQ,SAAS,MAAA,CACpB,EAEDA,EAAQ,OACPE,EAAAA,KAAC,OAAA,CAAM,SAAA,CAAAF,EAAQ,MAAM,OAAO,QAAA,EAAM,EAEnCA,EAAQ,UAAU,SACjBI,EAAAA,IAAC,OAAA,CAAM,SAAA,IAAI,KAAKJ,EAAQ,SAAS,OAAO,EAAE,mBAAA,CAAmB,CAAE,CAAA,CAAA,CAEnE,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAvBKA,EAAQ,UAAU,MAAQ,WAAWM,CAAK,EAAA,CAyBlD,EAEL,EAGCb,GACCW,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMR,EAAA,EACf,UAAU,8FACX,SAAA,SAAA,CAAA,CAED,CAAA,CAAA,CAIR,CAGA,MAAMW,EAAc,SAAS,eAAe,mBAAmB,EAC3DA,GACWC,EAAAA,WAAWD,CAAW,EAC9B,OACHH,EAAAA,IAACK,EAAA,CACC,SAAAL,EAAAA,IAACf,EAAA,CAAA,CAAY,CAAA,CACf,CAAA"}
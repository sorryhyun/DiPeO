# GraphQL Code Generation Configuration for ChatGPT Widgets

overwrite: true
schema: "../server/schema.graphql"
documents:
  - "src/__generated__/queries/all-queries.ts"
generates:
  src/__generated__/graphql.ts:
    plugins:
      - typescript
      - typescript-operations
    config:
      # Use branded types from @dipeo/models
      scalars:
        NodeID: "@dipeo/models#NodeID"
        HandleID: "@dipeo/models#HandleID"
        ArrowID: "@dipeo/models#ArrowID"
        PersonID: "@dipeo/models#PersonID"
        ApiKeyID: "@dipeo/models#ApiKeyID"
        ExecutionID: "@dipeo/models#ExecutionID"
        DiagramID: "@dipeo/models#DiagramID"
        DateTime: string
        JSON: Record<string, unknown>
      # Import enums from @dipeo/models
      enumsAsTypes: false
      enumValues:
        NodeType: "@dipeo/models#NodeType"
        HandleDirection: "@dipeo/models#HandleDirection"
        HandleLabel: "@dipeo/models#HandleLabel"
        DataType: "@dipeo/models#DataType"
        LLMService: "@dipeo/models#LLMService"
        DiagramFormatGraphQL: "@dipeo/models#DiagramFormat"
        Status: "@dipeo/models#Status"
      # Skip generating TypeScript types for enums
      skipTypename: false
      # Use proper imports
      useTypeImports: true
      # Keep all names as-is from schema (including snake_case field names)
      namingConvention:
        enumValues: keep
        typeNames: keep
        fieldNames: keep
      avoidOptionals: false
      addDocumentNodeToOperations: false

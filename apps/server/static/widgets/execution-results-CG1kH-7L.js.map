{"version":3,"file":"execution-results-CG1kH-7L.js","sources":["../../../chatgpt-widgets/src/hooks/use-widget-state.ts","../../../chatgpt-widgets/src/execution-results/index.tsx"],"sourcesContent":["/**\n * Hook to access widget state from OpenAI's widget runtime\n *\n * This hook provides access to the widget's state object that is passed\n * via window.oai.widget.setState() from the MCP server response.\n */\n\nimport { useEffect, useState } from 'react';\n\ndeclare global {\n  interface Window {\n    oai?: {\n      widget?: {\n        setState?: (state: any) => void;\n        getState?: () => any;\n      };\n    };\n  }\n}\n\n/**\n * Hook to get and subscribe to widget state updates\n */\nexport function useWidgetState<T = any>(): T | null {\n  const [state, setState] = useState<T | null>(() => {\n    // Try to get initial state\n    if (typeof window !== 'undefined' && window.oai?.widget?.getState) {\n      return window.oai.widget.getState() as T;\n    }\n    return null;\n  });\n\n  useEffect(() => {\n    // Poll for state if not immediately available using exponential backoff\n    if (!state) {\n      let delay = 100; // Start at 100ms\n      const maxDelay = 2000; // Cap at 2 seconds\n      const maxAttempts = 10; // Try up to 10 times\n      let attempts = 0;\n      let timeoutId: NodeJS.Timeout;\n\n      const poll = () => {\n        if (window.oai?.widget?.getState) {\n          const currentState = window.oai.widget.getState();\n          if (currentState) {\n            setState(currentState as T);\n            return;\n          }\n        }\n\n        attempts++;\n        if (attempts < maxAttempts) {\n          delay = Math.min(delay * 1.5, maxDelay);\n          timeoutId = setTimeout(poll, delay);\n        }\n      };\n\n      poll();\n\n      return () => {\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    }\n  }, [state]);\n\n  return state;\n}\n\n/**\n * Hook to get widget props from state\n * Alias for useWidgetState for clearer semantics\n */\nexport function useWidgetProps<T = any>(): T | null {\n  return useWidgetState<T>();\n}\n","/**\n * Execution Results Widget\n *\n * Displays comprehensive execution results including:\n * - Execution status and metadata\n * - Node execution timeline\n * - Token usage metrics\n * - Output data\n */\n\nimport { createRoot } from 'react-dom/client';\nimport { useWidgetProps } from '../hooks/use-widget-state';\nimport { useGraphQLQuery } from '../hooks/use-graphql-query';\nimport { WidgetLayout } from '../components/WidgetLayout';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { StatusBadge } from '../components/StatusBadge';\nimport { GET_EXECUTION_QUERY } from '../__generated__/queries/all-queries';\nimport type { GetExecutionQuery } from '../__generated__/graphql';\nimport '../shared/index.css';\n\ninterface ExecutionResultsProps {\n  executionId: string;\n}\n\nfunction ExecutionResults() {\n  const props = useWidgetProps<ExecutionResultsProps>();\n\n  const { data, loading, error } = useGraphQLQuery<GetExecutionQuery>(\n    GET_EXECUTION_QUERY,\n    { executionId: props?.executionId },\n    { skip: !props?.executionId, refetchInterval: 5000 }\n  );\n\n  if (!props) {\n    return (\n      <WidgetLayout>\n        <div className=\"text-sm text-gray-500\">Waiting for execution data...</div>\n      </WidgetLayout>\n    );\n  }\n\n  return (\n    <WidgetLayout\n      title=\"Execution Results\"\n      error={error}\n      loading={loading && !data}\n    >\n      {data?.getExecution && (\n        <div className=\"space-y-4\">\n          {/* Status Header */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <StatusBadge status={data.getExecution.status} />\n              <span className=\"text-sm font-medium text-gray-700\">\n                {data.getExecution.diagram_id || 'Unknown Diagram'}\n              </span>\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              {data.getExecution.id}\n            </div>\n          </div>\n\n          {/* Timing Information */}\n          <div className=\"bg-gray-50 rounded-lg p-3 space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Started:</span>\n              <span className=\"font-mono text-gray-900\">\n                {data.getExecution.started_at ? new Date(data.getExecution.started_at).toLocaleString() : 'N/A'}\n              </span>\n            </div>\n            {data.getExecution.ended_at && (\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-600\">Completed:</span>\n                <span className=\"font-mono text-gray-900\">\n                  {new Date(data.getExecution.ended_at).toLocaleString()}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/* Error */}\n          {data.getExecution.error && (\n            <div className=\"bg-red-50 rounded-lg p-3\">\n              <h3 className=\"text-sm font-semibold text-red-700 mb-2\">Error</h3>\n              <pre className=\"text-xs text-red-600 overflow-x-auto whitespace-pre-wrap\">\n                {data.getExecution.error}\n              </pre>\n            </div>\n          )}\n\n          {/* Metrics */}\n          {data.getExecution.metrics && (\n            <div>\n              <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">Metrics</h3>\n              <pre className=\"bg-gray-50 rounded-lg p-3 text-xs overflow-x-auto\">\n                {JSON.stringify(data.getExecution.metrics, null, 2)}\n              </pre>\n            </div>\n          )}\n\n          {/* LLM Usage */}\n          {data.getExecution.llm_usage && (\n            <div>\n              <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">LLM Usage</h3>\n              <div className=\"bg-gray-50 rounded-lg p-3 space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Input Tokens:</span>\n                  <span className=\"font-mono\">{data.getExecution.llm_usage.input || 0}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Output Tokens:</span>\n                  <span className=\"font-mono\">{data.getExecution.llm_usage.output || 0}</span>\n                </div>\n                {data.getExecution.llm_usage.cached !== null && data.getExecution.llm_usage.cached !== undefined && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Cached Tokens:</span>\n                    <span className=\"font-mono\">{data.getExecution.llm_usage.cached}</span>\n                  </div>\n                )}\n                {data.getExecution.llm_usage.total !== null && data.getExecution.llm_usage.total !== undefined && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Total Cost:</span>\n                    <span className=\"font-mono\">${data.getExecution.llm_usage.total.toFixed(4)}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </WidgetLayout>\n  );\n}\n\n// Mount the widget\nconst rootElement = document.getElementById('execution-results-root');\nif (rootElement) {\n  const root = createRoot(rootElement);\n  root.render(\n    <ErrorBoundary>\n      <ExecutionResults />\n    </ErrorBoundary>\n  );\n}\n"],"names":["useWidgetState","state","setState","useState","useEffect","delay","maxDelay","maxAttempts","attempts","timeoutId","poll","currentState","useWidgetProps","ExecutionResults","props","data","loading","error","useGraphQLQuery","GET_EXECUTION_QUERY","jsx","WidgetLayout","jsxs","StatusBadge","rootElement","createRoot","ErrorBoundary"],"mappings":"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"}
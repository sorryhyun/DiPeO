# Auto-generated GraphQL schema for sub_diagram node

type Sub_diagramNode implements Node {
  id: ID!
  type: String!
  position: Position!
  data: Sub_diagramNodeData!
  selected: Boolean
  dragging: Boolean
}

type Sub_diagramNodeData {
  "Name of the diagram to execute (e.g., 'workflow/process')"
  diagram_name: String  "Inline diagram data (alternative to diagram_name)"
  diagram_data: JSON  "Map node inputs to sub-diagram variables"
  input_mapping: JSON  "Map sub-diagram outputs to node outputs"
  output_mapping: JSON  "Execution timeout in seconds"
  timeout: Float  "Whether to wait for sub-diagram completion"
  wait_for_completion: Boolean  "Create isolated conversation context for sub-diagram"
  isolate_conversation: Boolean}

input Sub_diagramNodeInput {
  id: ID!
  type: String!
  position: PositionInput!
  data: Sub_diagramNodeDataInput!
}

input Sub_diagramNodeDataInput {
  diagram_name: String  diagram_data: JSON  input_mapping: JSON  output_mapping: JSON  timeout: Float  wait_for_completion: Boolean  isolate_conversation: Boolean}

# Add to schema extensions
extend type Query {
  sub_diagramNodes: [Sub_diagramNode!]!
  sub_diagramNode(id: ID!): Sub_diagramNode
}

extend type Mutation {
  createSub_diagramNode(input: Sub_diagramNodeInput!): Sub_diagramNode!
  updateSub_diagramNode(id: ID!, input: Sub_diagramNodeDataInput!): Sub_diagramNode!
  deleteSub_diagramNode(id: ID!): Boolean!
}
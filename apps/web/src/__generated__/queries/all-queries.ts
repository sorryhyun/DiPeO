/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by GraphQL query generation
 * Generated at: 2025-09-14T16:53:25.541809
 *
 * Contains all GraphQL queries, mutations, and subscriptions
 */

import { gql } from '@apollo/client';// ============================================================================
// QUERIES
// ============================================================================

export const GETAPIKEYS_QUERY = gql`
  query GetApiKeys(
    $service: String
  ) {
    get_api_keys(
      service: $service
    )
  }
`;

export const GETAPIKEY_QUERY = gql`
  query GetApiKey(
    $api_key_id: String!
  ) {
    get_api_key(
      api_key_id: $api_key_id
    )
  }
`;

export const GETAVAILABLEMODELS_QUERY = gql`
  query GetAvailableModels(
    $service: String!,
    $api_key_id: String!
  ) {
    get_available_models(
      service: $service,
      api_key_id: $api_key_id
    )
  }
`;

export const LISTCONVERSATIONS_QUERY = gql`
  query ListConversations(
    $person_id: String,
    $execution_id: String,
    $search: String,
    $show_forgotten: Boolean,
    $limit: Int,
    $offset: Int,
    $since: String
  ) {
    list_conversations(
      person_id: $person_id,
      execution_id: $execution_id,
      search: $search,
      show_forgotten: $show_forgotten,
      limit: $limit,
      offset: $offset,
      since: $since
    )
  }
`;

export const GETDIAGRAM_QUERY = gql`
  query GetDiagram(
    $diagram_id: String!
  ) {
    get_diagram(
      diagram_id: $diagram_id
    )
  }
`;

export const LISTDIAGRAMS_QUERY = gql`
  query ListDiagrams(
    $filter: DiagramFilterInput,
    $limit: Int,
    $offset: Int
  ) {
    list_diagrams(
      filter: $filter,
      limit: $limit,
      offset: $offset
    )
  }
`;

export const GETEXECUTION_QUERY = gql`
  query GetExecution(
    $execution_id: String!
  ) {
    get_execution(
      execution_id: $execution_id
    )
  }
`;

export const LISTEXECUTIONS_QUERY = gql`
  query ListExecutions(
    $filter: ExecutionFilterInput,
    $limit: Int,
    $offset: Int
  ) {
    list_executions(
      filter: $filter,
      limit: $limit,
      offset: $offset
    )
  }
`;

export const GETSUPPORTEDFORMATS_QUERY = gql`
  query GetSupportedFormats {
    get_supported_formats
  }
`;

export const GETPERSON_QUERY = gql`
  query GetPerson(
    $person_id: String!
  ) {
    get_person(
      person_id: $person_id
    )
  }
`;

export const LISTPERSONS_QUERY = gql`
  query ListPersons(
    $limit: Int
  ) {
    list_persons(
      limit: $limit
    )
  }
`;

export const LISTPROMPTFILES_QUERY = gql`
  query ListPromptFiles {
    list_prompt_files
  }
`;

export const GETPROMPTFILE_QUERY = gql`
  query GetPromptFile(
    $filename: String!
  ) {
    get_prompt_file(
      filename: $filename
    )
  }
`;

export const GETPROVIDERS_QUERY = gql`
  query GetProviders {
    get_providers
  }
`;

export const GETPROVIDEROPERATIONS_QUERY = gql`
  query GetProviderOperations(
    $provider: String!
  ) {
    get_provider_operations(
      provider: $provider
    )
  }
`;

export const GETOPERATIONSCHEMA_QUERY = gql`
  query GetOperationSchema(
    $provider: String!,
    $operation: String!
  ) {
    get_operation_schema(
      provider: $provider,
      operation: $operation
    )
  }
`;

export const GETSYSTEMINFO_QUERY = gql`
  query GetSystemInfo {
    get_system_info
  }
`;

export const GETEXECUTIONCAPABILITIES_QUERY = gql`
  query GetExecutionCapabilities {
    get_execution_capabilities
  }
`;

export const HEALTHCHECK_QUERY = gql`
  query HealthCheck {
    health_check
  }
`;

export const GETEXECUTIONORDER_QUERY = gql`
  query GetExecutionOrder(
    $execution_id: String!
  ) {
    get_execution_order(
      execution_id: $execution_id
    )
  }
`;

export const GETEXECUTIONMETRICS_QUERY = gql`
  query GetExecutionMetrics(
    $execution_id: String!
  ) {
    get_execution_metrics(
      execution_id: $execution_id
    )
  }
`;

export const GETEXECUTIONHISTORY_QUERY = gql`
  query GetExecutionHistory(
    $diagram_id: String,
    $limit: Int,
    $include_metrics: Boolean
  ) {
    get_execution_history(
      diagram_id: $diagram_id,
      limit: $limit,
      include_metrics: $include_metrics
    )
  }
`;

export const GETACTIVECLISESSION_QUERY = gql`
  query GetActiveCliSession {
    get_active_cli_session
  }
`;

// ============================================================================
// MUTATIONS
// ============================================================================

export const CREATEAPIKEY_MUTATION = gql`
  mutation CreateApiKey(
    $input: CreateApiKeyInput!
  ) {
    create_api_key(
      input: $input
    )
  }
`;

export const TESTAPIKEY_MUTATION = gql`
  mutation TestApiKey(
    $api_key_id: String!
  ) {
    test_api_key(
      api_key_id: $api_key_id
    )
  }
`;

export const DELETEAPIKEY_MUTATION = gql`
  mutation DeleteApiKey(
    $api_key_id: String!
  ) {
    delete_api_key(
      api_key_id: $api_key_id
    )
  }
`;

export const REGISTERCLISESSION_MUTATION = gql`
  mutation RegisterCliSession(
    $input: RegisterCliSessionInput!
  ) {
    register_cli_session(
      input: $input
    )
  }
`;

export const UNREGISTERCLISESSION_MUTATION = gql`
  mutation UnregisterCliSession(
    $input: UnregisterCliSessionInput!
  ) {
    unregister_cli_session(
      input: $input
    )
  }
`;

export const CREATEDIAGRAM_MUTATION = gql`
  mutation CreateDiagram(
    $input: CreateDiagramInput!
  ) {
    create_diagram(
      input: $input
    )
  }
`;

export const EXECUTEDIAGRAM_MUTATION = gql`
  mutation ExecuteDiagram(
    $input: ExecuteDiagramInput!
  ) {
    execute_diagram(
      input: $input
    )
  }
`;

export const DELETEDIAGRAM_MUTATION = gql`
  mutation DeleteDiagram(
    $diagram_id: String!
  ) {
    delete_diagram(
      diagram_id: $diagram_id
    )
  }
`;

export const CONTROLEXECUTION_MUTATION = gql`
  mutation ControlExecution(
    $input: ExecutionControlInput!
  ) {
    control_execution(
      input: $input
    )
  }
`;

export const SENDINTERACTIVERESPONSE_MUTATION = gql`
  mutation SendInteractiveResponse(
    $input: InteractiveResponseInput!
  ) {
    send_interactive_response(
      input: $input
    )
  }
`;

export const UPDATENODESTATE_MUTATION = gql`
  mutation UpdateNodeState(
    $input: UpdateNodeStateInput!
  ) {
    update_node_state(
      input: $input
    )
  }
`;

export const UPLOADFILE_MUTATION = gql`
  mutation UploadFile(
    $file: Upload!,
    $path: String
  ) {
    upload_file(
      file: $file,
      path: $path
    )
  }
`;

export const UPLOADDIAGRAM_MUTATION = gql`
  mutation UploadDiagram(
    $file: Upload!,
    $format: DiagramFormatGraphQL!
  ) {
    upload_diagram(
      file: $file,
      format: $format
    )
  }
`;

export const VALIDATEDIAGRAM_MUTATION = gql`
  mutation ValidateDiagram(
    $content: String!,
    $format: DiagramFormatGraphQL!
  ) {
    validate_diagram(
      content: $content,
      format: $format
    )
  }
`;

export const CONVERTDIAGRAMFORMAT_MUTATION = gql`
  mutation ConvertDiagramFormat(
    $content: String!,
    $from_format: DiagramFormatGraphQL!,
    $to_format: DiagramFormatGraphQL!
  ) {
    convert_diagram_format(
      content: $content,
      from_format: $from_format,
      to_format: $to_format
    )
  }
`;

export const CREATENODE_MUTATION = gql`
  mutation CreateNode(
    $diagram_id: String!,
    $input: CreateNodeInput!
  ) {
    create_node(
      diagram_id: $diagram_id,
      input: $input
    )
  }
`;

export const UPDATENODE_MUTATION = gql`
  mutation UpdateNode(
    $diagram_id: String!,
    $node_id: String!,
    $input: UpdateNodeInput!
  ) {
    update_node(
      diagram_id: $diagram_id,
      node_id: $node_id,
      input: $input
    )
  }
`;

export const DELETENODE_MUTATION = gql`
  mutation DeleteNode(
    $diagram_id: String!,
    $node_id: String!
  ) {
    delete_node(
      diagram_id: $diagram_id,
      node_id: $node_id
    )
  }
`;

export const CREATEPERSON_MUTATION = gql`
  mutation CreatePerson(
    $input: CreatePersonInput!
  ) {
    create_person(
      input: $input
    )
  }
`;

export const UPDATEPERSON_MUTATION = gql`
  mutation UpdatePerson(
    $person_id: String!,
    $input: UpdatePersonInput!
  ) {
    update_person(
      person_id: $person_id,
      input: $input
    )
  }
`;

export const DELETEPERSON_MUTATION = gql`
  mutation DeletePerson(
    $person_id: String!
  ) {
    delete_person(
      person_id: $person_id
    )
  }
`;

// ============================================================================
// SUBSCRIPTIONS
// ============================================================================

export const EXECUTIONUPDATES_SUBSCRIPTION = gql`
  subscription ExecutionUpdates(
    $execution_id: String!
  ) {
    execution_updates(
      execution_id: $execution_id
    )
  }
`;

// Export all operations
export const queries = {
  GetApiKeys: GETAPIKEYS_QUERY,
  GetApiKey: GETAPIKEY_QUERY,
  GetAvailableModels: GETAVAILABLEMODELS_QUERY,
  ListConversations: LISTCONVERSATIONS_QUERY,
  GetDiagram: GETDIAGRAM_QUERY,
  ListDiagrams: LISTDIAGRAMS_QUERY,
  GetExecution: GETEXECUTION_QUERY,
  ListExecutions: LISTEXECUTIONS_QUERY,
  GetSupportedFormats: GETSUPPORTEDFORMATS_QUERY,
  GetPerson: GETPERSON_QUERY,
  ListPersons: LISTPERSONS_QUERY,
  ListPromptFiles: LISTPROMPTFILES_QUERY,
  GetPromptFile: GETPROMPTFILE_QUERY,
  GetProviders: GETPROVIDERS_QUERY,
  GetProviderOperations: GETPROVIDEROPERATIONS_QUERY,
  GetOperationSchema: GETOPERATIONSCHEMA_QUERY,
  GetSystemInfo: GETSYSTEMINFO_QUERY,
  GetExecutionCapabilities: GETEXECUTIONCAPABILITIES_QUERY,
  HealthCheck: HEALTHCHECK_QUERY,
  GetExecutionOrder: GETEXECUTIONORDER_QUERY,
  GetExecutionMetrics: GETEXECUTIONMETRICS_QUERY,
  GetExecutionHistory: GETEXECUTIONHISTORY_QUERY,
  GetActiveCliSession: GETACTIVECLISESSION_QUERY,
} as const;

export const mutations = {
  CreateApiKey: CREATEAPIKEY_MUTATION,
  TestApiKey: TESTAPIKEY_MUTATION,
  DeleteApiKey: DELETEAPIKEY_MUTATION,
  RegisterCliSession: REGISTERCLISESSION_MUTATION,
  UnregisterCliSession: UNREGISTERCLISESSION_MUTATION,
  CreateDiagram: CREATEDIAGRAM_MUTATION,
  ExecuteDiagram: EXECUTEDIAGRAM_MUTATION,
  DeleteDiagram: DELETEDIAGRAM_MUTATION,
  ControlExecution: CONTROLEXECUTION_MUTATION,
  SendInteractiveResponse: SENDINTERACTIVERESPONSE_MUTATION,
  UpdateNodeState: UPDATENODESTATE_MUTATION,
  UploadFile: UPLOADFILE_MUTATION,
  UploadDiagram: UPLOADDIAGRAM_MUTATION,
  ValidateDiagram: VALIDATEDIAGRAM_MUTATION,
  ConvertDiagramFormat: CONVERTDIAGRAMFORMAT_MUTATION,
  CreateNode: CREATENODE_MUTATION,
  UpdateNode: UPDATENODE_MUTATION,
  DeleteNode: DELETENODE_MUTATION,
  CreatePerson: CREATEPERSON_MUTATION,
  UpdatePerson: UPDATEPERSON_MUTATION,
  DeletePerson: DELETEPERSON_MUTATION,
} as const;

export const subscriptions = {
  ExecutionUpdates: EXECUTIONUPDATES_SUBSCRIPTION,
} as const;

// Statistics
// Queries: 23
// Mutations: 21
// Subscriptions: 1

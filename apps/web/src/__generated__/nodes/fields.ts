/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by domain model field configs generation
 * Generated at: 2025-07-25T22:50:53.978008
 * 
 * This file contains base field configurations generated from domain models.
 * To customize fields, use the override system in each node's config file.
 */

import type { UnifiedFieldDefinition } from '@/core/config/unifiedConfig';

export interface GeneratedFieldConfigs {
  [nodeType: string]: UnifiedFieldDefinition[];
}

export const GENERATED_FIELD_CONFIGS: GeneratedFieldConfigs = {
  'start': [
    {
      name: 'custom_data',
      type: 'code',
      label: 'Custom Data',
      required: true,
    },
    {
      name: 'output_data_structure',
      type: 'code',
      label: 'Output Data Structure',
      required: true,
    },
    {
      name: 'trigger_mode',
      type: 'select',
      label: 'Trigger Mode',
      required: false,
      options: [
              {
                      "label": "Manual",
                      "value": "manual"
              },
              {
                      "label": "Hook",
                      "value": "hook"
              }
      ],
    },
    {
      name: 'hook_event',
      type: 'text',
      label: 'Hook Event',
      required: false,
    },
    {
      name: 'hook_filters',
      type: 'text',
      label: 'Hook Filters',
      required: false,
    },
  ],
  'person_job': [
    {
      name: 'person',
      type: 'personSelect',
      label: 'Person',
      required: false,
    },
    {
      name: 'first_only_prompt',
      type: 'variableTextArea',
      label: 'First Only Prompt',
      required: true,
      placeholder: 'Enter prompt. Use {{variable_name}} for variables.',
      rows: 6,
    },
    {
      name: 'default_prompt',
      type: 'variableTextArea',
      label: 'Default Prompt',
      required: false,
      placeholder: 'Enter prompt. Use {{variable_name}} for variables.',
      rows: 6,
    },
    {
      name: 'max_iteration',
      type: 'maxIteration',
      label: 'Max Iteration',
      required: true,
      defaultValue: 1,
      min: 1,
      max: 100,
    },
    {
      name: 'memory_config',
      type: 'text',
      label: 'Memory Config',
      required: false,
    },
    {
      name: 'memory_settings',
      type: 'text',
      label: 'Memory Settings',
      required: false,
    },
    {
      name: 'tools',
      type: 'code',
      label: 'Tools',
      required: false,
    },
  ],
  'condition': [
    {
      name: 'condition_type',
      type: 'text',
      label: 'Condition Type',
      required: true,
    },
    {
      name: 'expression',
      type: 'variableTextArea',
      label: 'Expression',
      required: false,
    },
    {
      name: 'node_indices',
      type: 'code',
      label: 'Node Indices',
      required: false,
    },
  ],
  'endpoint': [
    {
      name: 'save_to_file',
      type: 'checkbox',
      label: 'Save To File',
      required: true,
      defaultValue: false,
    },
    {
      name: 'file_name',
      type: 'text',
      label: 'File Name',
      required: false,
    },
  ],
  'db': [
    {
      name: 'file',
      type: 'text',
      label: 'File',
      required: false,
    },
    {
      name: 'collection',
      type: 'text',
      label: 'Collection',
      required: false,
    },
    {
      name: 'sub_type',
      type: 'select',
      label: 'Sub Type',
      required: true,
      options: [
              {
                      "label": "Fixed Prompt",
                      "value": "fixed_prompt"
              },
              {
                      "label": "File",
                      "value": "file"
              },
              {
                      "label": "Code",
                      "value": "code"
              },
              {
                      "label": "Api Tool",
                      "value": "api_tool"
              }
      ],
    },
    {
      name: 'operation',
      type: 'text',
      label: 'Operation',
      required: true,
    },
    {
      name: 'query',
      type: 'variableTextArea',
      label: 'Query',
      required: false,
    },
    {
      name: 'data',
      type: 'text',
      label: 'Data',
      required: false,
    },
  ],
  'code_job': [
    {
      name: 'language',
      type: 'select',
      label: 'Language',
      required: true,
      options: [
              {
                      "label": "Python",
                      "value": "python"
              },
              {
                      "label": "Typescript",
                      "value": "typescript"
              },
              {
                      "label": "Bash",
                      "value": "bash"
              },
              {
                      "label": "Shell",
                      "value": "shell"
              }
      ],
    },
    {
      name: 'filePath',
      type: 'filepath',
      label: 'Filepath',
      required: false,
    },
    {
      name: 'code',
      type: 'code',
      label: 'Code',
      required: false,
      placeholder: 'Enter code here',
      rows: 10,
    },
    {
      name: 'functionName',
      type: 'text',
      label: 'Functionname',
      required: false,
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
      placeholder: 'Timeout in seconds',
      min: 0,
      max: 600,
    },
  ],
  'api_job': [
    {
      name: 'url',
      type: 'url',
      label: 'Url',
      required: true,
      placeholder: 'https://api.example.com/endpoint',
    },
    {
      name: 'method',
      type: 'select',
      label: 'Method',
      required: true,
      options: [
              {
                      "label": "Get",
                      "value": "GET"
              },
              {
                      "label": "Post",
                      "value": "POST"
              },
              {
                      "label": "Put",
                      "value": "PUT"
              },
              {
                      "label": "Delete",
                      "value": "DELETE"
              },
              {
                      "label": "Patch",
                      "value": "PATCH"
              }
      ],
    },
    {
      name: 'headers',
      type: 'text',
      label: 'Headers',
      required: false,
    },
    {
      name: 'params',
      type: 'text',
      label: 'Params',
      required: false,
    },
    {
      name: 'body',
      type: 'text',
      label: 'Body',
      required: false,
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
      placeholder: 'Timeout in seconds',
      min: 0,
      max: 600,
    },
    {
      name: 'auth_type',
      type: 'text',
      label: 'Auth Type',
      required: false,
    },
    {
      name: 'auth_config',
      type: 'text',
      label: 'Auth Config',
      required: false,
    },
  ],
  'user_response': [
    {
      name: 'prompt',
      type: 'variableTextArea',
      label: 'Prompt',
      required: true,
      placeholder: 'Enter prompt. Use {{variable_name}} for variables.',
      rows: 6,
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: true,
      placeholder: 'Timeout in seconds',
      defaultValue: 30,
      min: 0,
      max: 600,
    },
  ],
  'notion': [
    {
      name: 'operation',
      type: 'select',
      label: 'Operation',
      required: true,
    },
    {
      name: 'page_id',
      type: 'text',
      label: 'Page Id',
      required: false,
    },
    {
      name: 'database_id',
      type: 'text',
      label: 'Database Id',
      required: false,
    },
  ],
  'hook': [
    {
      name: 'hook_type',
      type: 'select',
      label: 'Hook Type',
      required: true,
      options: [
              {
                      "label": "Shell",
                      "value": "shell"
              },
              {
                      "label": "Webhook",
                      "value": "webhook"
              },
              {
                      "label": "Python",
                      "value": "python"
              },
              {
                      "label": "File",
                      "value": "file"
              }
      ],
    },
    {
      name: 'config',
      type: 'code',
      label: 'Config',
      required: true,
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
      placeholder: 'Timeout in seconds',
      min: 0,
      max: 600,
    },
    {
      name: 'retry_count',
      type: 'number',
      label: 'Retry Count',
      required: false,
    },
    {
      name: 'retry_delay',
      type: 'number',
      label: 'Retry Delay',
      required: false,
    },
  ],
  'template_job': [
    {
      name: 'template_path',
      type: 'text',
      label: 'Template Path',
      required: false,
    },
    {
      name: 'template_content',
      type: 'text',
      label: 'Template Content',
      required: false,
    },
    {
      name: 'output_path',
      type: 'text',
      label: 'Output Path',
      required: false,
    },
    {
      name: 'variables',
      type: 'text',
      label: 'Variables',
      required: false,
    },
    {
      name: 'engine',
      type: 'text',
      label: 'Engine',
      required: false,
    },
  ],
  'json_schema_validator': [
    {
      name: 'schema_path',
      type: 'text',
      label: 'Schema Path',
      required: false,
    },
    {
      name: 'schema',
      type: 'text',
      label: 'Schema',
      required: false,
    },
    {
      name: 'data_path',
      type: 'text',
      label: 'Data Path',
      required: false,
    },
    {
      name: 'strict_mode',
      type: 'checkbox',
      label: 'Strict Mode',
      required: false,
    },
    {
      name: 'error_on_extra',
      type: 'checkbox',
      label: 'Error On Extra',
      required: false,
    },
  ],
  'typescript_ast': [
    {
      name: 'source',
      type: 'text',
      label: 'Source',
      required: false,
    },
    {
      name: 'extractPatterns',
      type: 'code',
      label: 'Extractpatterns',
      required: false,
    },
    {
      name: 'includeJSDoc',
      type: 'checkbox',
      label: 'Includejsdoc',
      required: false,
    },
    {
      name: 'parseMode',
      type: 'text',
      label: 'Parsemode',
      required: false,
    },
  ],
  'sub_diagram': [
    {
      name: 'diagram_name',
      type: 'text',
      label: 'Diagram Name',
      required: false,
    },
    {
      name: 'diagram_format',
      type: 'select',
      label: 'Diagram Format',
      required: false,
      options: [
              {
                      "label": "Native",
                      "value": "native"
              },
              {
                      "label": "Light",
                      "value": "light"
              },
              {
                      "label": "Readable",
                      "value": "readable"
              }
      ],
    },
    {
      name: 'diagram_data',
      type: 'text',
      label: 'Diagram Data',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'Batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'text',
      label: 'Batch Input Key',
      required: false,
    },
    {
      name: 'batch_parallel',
      type: 'checkbox',
      label: 'Batch Parallel',
      required: false,
    },
  ],
};

/**
 * Get generated field configurations for a node type
 */
export function getGeneratedFields(nodeType: string): UnifiedFieldDefinition[] {
  return GENERATED_FIELD_CONFIGS[nodeType] || [];
}
/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by domain model field configs generation
 * Generated at: 2025-09-07T13:25:52.269492
 *
 * This file contains base field configurations generated from domain models.
 * To customize fields, use the override system in each node's config file.
 */

import type { UnifiedFieldDefinition } from '@/infrastructure/config/unifiedConfig';

export interface GeneratedFieldConfigs {
  [nodeType: string]: UnifiedFieldDefinition[];
}

export const GENERATED_FIELD_CONFIGS: GeneratedFieldConfigs = {
  'api_job': [
    {
      name: 'url',
      type: 'url',
      label: 'Url',
      required: true,
      placeholder: 'https://example.com',
    },
    {
      name: 'method',
      type: 'select',
      label: 'Method',
      required: true,
      options: [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH"
      ],
    },
    {
      name: 'headers',
      type: 'code',
      label: 'Headers',
      required: false,
    },
    {
      name: 'params',
      type: 'code',
      label: 'Params',
      required: false,
    },
    {
      name: 'body',
      type: 'code',
      label: 'Body',
      required: false,
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
    },
    {
      name: 'auth_type',
      type: 'select',
      label: 'Auth Type',
      required: false,
      options: [
              "none",
              "bearer",
              "basic",
              "api_key"
      ],
    },
    {
      name: 'auth_config',
      type: 'code',
      label: 'Auth Config',
      required: false,
    },
  ],
  'code_job': [
    {
      name: 'language',
      type: 'select',
      label: 'Language',
      required: true,
      options: [
              "python",
              "typescript",
              "bash",
              "shell"
      ],
    },
    {
      name: 'filePath',
      type: 'filepath',
      label: 'Filepath',
      required: false,
      placeholder: '/path/to/file',
    },
    {
      name: 'code',
      type: 'code',
      label: 'Code',
      required: false,
    },
    {
      name: 'functionName',
      type: 'text',
      label: 'Functionname',
      required: false,
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
    },
  ],
  'condition': [
    {
      name: 'condition_type',
      type: 'select',
      label: 'Condition Type',
      required: false,
      options: [
              "detect_max_iterations",
              "check_nodes_executed",
              "custom",
              "llm_decision"
      ],
    },
    {
      name: 'expression',
      type: 'variableTextArea',
      label: 'Expression',
      required: false,
      placeholder: 'e.g., inputs.value > 10',
    },
    {
      name: 'node_indices',
      type: 'text',
      label: 'Node Indices',
      required: false,
      placeholder: 'Select nodes to monitor',
    },
    {
      name: 'person',
      type: 'text',
      label: 'Person',
      required: false,
      placeholder: 'Select AI agent',
    },
    {
      name: 'judge_by',
      type: 'variableTextArea',
      label: 'Judge By',
      required: false,
      placeholder: 'Enter the prompt for LLM to judge (should result in YES/NO)',
    },
    {
      name: 'judge_by_file',
      type: 'text',
      label: 'Judge By File',
      required: false,
      placeholder: 'e.g., prompts/quality_check.txt',
    },
    {
      name: 'memorize_to',
      type: 'text',
      label: 'Memorize To',
      required: false,
      placeholder: 'e.g., GOLDFISH',
    },
    {
      name: 'at_most',
      type: 'number',
      label: 'At Most',
      required: false,
      placeholder: 'e.g., 10',
    },
    {
      name: 'expose_index_as',
      type: 'text',
      label: 'Expose Index As',
      required: false,
      placeholder: 'e.g., current_index, loop_counter',
    },
    {
      name: 'skippable',
      type: 'checkbox',
      label: 'Skippable',
      required: false,
    },
  ],
  'db': [
    {
      name: 'file',
      type: 'text',
      label: 'File',
      required: false,
    },
    {
      name: 'collection',
      type: 'text',
      label: 'Collection',
      required: false,
    },
    {
      name: 'sub_type',
      type: 'select',
      label: 'Sub Type',
      required: true,
      options: [
              "fixed_prompt",
              "file",
              "code",
              "api_tool"
      ],
    },
    {
      name: 'operation',
      type: 'text',
      label: 'Operation',
      required: true,
    },
    {
      name: 'query',
      type: 'variableTextArea',
      label: 'Query',
      required: false,
    },
    {
      name: 'data',
      type: 'code',
      label: 'Data',
      required: false,
    },
    {
      name: 'serialize_json',
      type: 'checkbox',
      label: 'Serialize Json',
      required: false,
    },
    {
      name: 'format',
      type: 'select',
      label: 'Format',
      required: false,
      options: [
              "json",
              "yaml",
              "csv",
              "text",
              "xml"
      ],
    },
  ],
  'endpoint': [
    {
      name: 'save_to_file',
      type: 'checkbox',
      label: 'Save To File',
      required: true,
    },
    {
      name: 'file_name',
      type: 'text',
      label: 'File Name',
      required: false,
    },
  ],
  'hook': [
    {
      name: 'hook_type',
      type: 'select',
      label: 'Hook Type',
      required: true,
      options: [
              "shell",
              "http",
              "python",
              "file"
      ],
    },
    {
      name: 'command',
      type: 'text',
      label: 'Command',
      required: false,
      placeholder: 'Command to execute',
    },
    {
      name: 'url',
      type: 'url',
      label: 'Url',
      required: false,
      placeholder: 'https://api.example.com/webhook',
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
    },
    {
      name: 'retry_count',
      type: 'number',
      label: 'Retry Count',
      required: false,
    },
  ],
  'integrated_api': [
    {
      name: 'provider',
      type: 'select',
      label: 'Provider',
      required: true,
    },
    {
      name: 'operation',
      type: 'select',
      label: 'Operation',
      required: true,
      placeholder: 'Select an operation',
    },
    {
      name: 'resource_id',
      type: 'text',
      label: 'Resource Id',
      required: false,
      placeholder: 'Resource ID (if applicable)',
    },
    {
      name: 'config',
      type: 'code',
      label: 'Config',
      required: false,
      placeholder: '{ /* provider-specific config */ }',
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
      placeholder: '30',
    },
    {
      name: 'max_retries',
      type: 'number',
      label: 'Max Retries',
      required: false,
      placeholder: '3',
    },
  ],
  'json_schema_validator': [
    {
      name: 'schema_path',
      type: 'text',
      label: 'Schema Path',
      required: false,
      placeholder: '/path/to/file',
    },
    {
      name: 'schema',
      type: 'code',
      label: 'Schema',
      required: false,
    },
    {
      name: 'data_path',
      type: 'text',
      label: 'Data Path',
      required: false,
      placeholder: '/path/to/file',
    },
    {
      name: 'strict_mode',
      type: 'checkbox',
      label: 'Strict Mode',
      required: false,
    },
    {
      name: 'error_on_extra',
      type: 'checkbox',
      label: 'Error On Extra',
      required: false,
    },
  ],
  'person_batch_job': [
    {
      name: 'person',
      type: 'text',
      label: 'Person',
      required: false,
      placeholder: 'Select a person',
    },
    {
      name: 'batch_key',
      type: 'text',
      label: 'Batch Key',
      required: true,
      placeholder: 'Key containing the array to iterate over',
    },
    {
      name: 'prompt',
      type: 'variableTextArea',
      label: 'Prompt',
      required: true,
      placeholder: 'Use {{item}} for current batch item, {{variable_name}} for other variables',
    },
  ],
  'person_job': [
    {
      name: 'person',
      type: 'text',
      label: 'Person',
      required: false,
    },
    {
      name: 'first_only_prompt',
      type: 'variableTextArea',
      label: 'First Only Prompt',
      required: true,
      placeholder: 'Enter prompt template...',
    },
    {
      name: 'first_prompt_file',
      type: 'text',
      label: 'First Prompt File',
      required: false,
      placeholder: 'example_first.txt',
    },
    {
      name: 'default_prompt',
      type: 'variableTextArea',
      label: 'Default Prompt',
      required: false,
      placeholder: 'Enter prompt template...',
    },
    {
      name: 'prompt_file',
      type: 'text',
      label: 'Prompt File',
      required: false,
      placeholder: 'example.txt',
    },
    {
      name: 'max_iteration',
      type: 'number',
      label: 'Max Iteration',
      required: true,
    },
    {
      name: 'memorize_to',
      type: 'text',
      label: 'Memorize To',
      required: false,
      placeholder: 'e.g., requirements, acceptance criteria, API keys',
    },
    {
      name: 'at_most',
      type: 'number',
      label: 'At Most',
      required: false,
    },
    {
      name: 'tools',
      type: 'select',
      label: 'Tools',
      required: false,
      options: [
              "none",
              "image",
              "websearch"
      ],
    },
    {
      name: 'text_format',
      type: 'variableTextArea',
      label: 'Text Format',
      required: false,
      placeholder: '{"type": "object", "properties": {...}}',
    },
    {
      name: 'resolved_prompt',
      type: 'variableTextArea',
      label: 'Resolved Prompt',
      required: false,
    },
    {
      name: 'resolved_first_prompt',
      type: 'variableTextArea',
      label: 'Resolved First Prompt',
      required: false,
    },
  ],
  'start': [
    {
      name: 'trigger_mode',
      type: 'select',
      label: 'Trigger Mode',
      required: true,
      options: [
              "none",
              "manual",
              "hook"
      ],
    },
    {
      name: 'custom_data',
      type: 'text',
      label: 'Custom Data',
      required: false,
    },
    {
      name: 'output_data_structure',
      type: 'code',
      label: 'Output Data Structure',
      required: false,
    },
    {
      name: 'hook_event',
      type: 'text',
      label: 'Hook Event',
      required: false,
      placeholder: 'e.g., webhook.received, file.uploaded',
    },
    {
      name: 'hook_filters',
      type: 'code',
      label: 'Hook Filters',
      required: false,
    },
  ],
  'sub_diagram': [
    {
      name: 'diagram_name',
      type: 'select',
      label: 'Diagram Name',
      required: false,
      placeholder: 'Select diagram...',
    },
    {
      name: 'diagram_data',
      type: 'code',
      label: 'Diagram Data',
      required: false,
    },
    {
      name: 'input_mapping',
      type: 'code',
      label: 'Input Mapping',
      required: false,
      placeholder: '{ "targetVar": "sourceInput" }',
    },
    {
      name: 'output_mapping',
      type: 'code',
      label: 'Output Mapping',
      required: false,
      placeholder: '{ "outputKey": "nodeId.field" }',
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
    },
    {
      name: 'wait_for_completion',
      type: 'checkbox',
      label: 'Wait For Completion',
      required: false,
    },
    {
      name: 'isolate_conversation',
      type: 'checkbox',
      label: 'Isolate Conversation',
      required: false,
    },
    {
      name: 'ignoreIfSub',
      type: 'checkbox',
      label: 'Ignoreifsub',
      required: false,
    },
    {
      name: 'diagram_format',
      type: 'select',
      label: 'Diagram Format',
      required: false,
      options: [
              "yaml",
              "json",
              "light"
      ],
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'Batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'text',
      label: 'Batch Input Key',
      required: false,
      placeholder: 'items',
    },
    {
      name: 'batch_parallel',
      type: 'checkbox',
      label: 'Batch Parallel',
      required: false,
    },
  ],
  'template_job': [
    {
      name: 'template_path',
      type: 'text',
      label: 'Template Path',
      required: false,
      placeholder: '/path/to/file',
    },
    {
      name: 'template_content',
      type: 'variableTextArea',
      label: 'Template Content',
      required: false,
      placeholder: 'Enter template content...',
    },
    {
      name: 'output_path',
      type: 'text',
      label: 'Output Path',
      required: false,
      placeholder: '/path/to/file',
    },
    {
      name: 'variables',
      type: 'code',
      label: 'Variables',
      required: false,
    },
    {
      name: 'engine',
      type: 'select',
      label: 'Engine',
      required: false,
      options: [
              "internal",
              "jinja2"
      ],
    },
    {
      name: 'preprocessor',
      type: 'text',
      label: 'Preprocessor',
      required: false,
    },
  ],
  'typescript_ast': [
    {
      name: 'source',
      type: 'code',
      label: 'Source',
      required: true,
    },
    {
      name: 'extractPatterns',
      type: 'code',
      label: 'Extractpatterns',
      required: false,
    },
    {
      name: 'includeJSDoc',
      type: 'checkbox',
      label: 'Includejsdoc',
      required: false,
    },
    {
      name: 'parseMode',
      type: 'select',
      label: 'Parsemode',
      required: false,
      options: [
              "module",
              "script"
      ],
    },
    {
      name: 'transformEnums',
      type: 'checkbox',
      label: 'Transformenums',
      required: false,
    },
    {
      name: 'flattenOutput',
      type: 'checkbox',
      label: 'Flattenoutput',
      required: false,
    },
    {
      name: 'outputFormat',
      type: 'select',
      label: 'Outputformat',
      required: false,
      options: [
              "standard",
              "for_codegen",
              "for_analysis"
      ],
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'Batch',
      required: false,
    },
    {
      name: 'batchInputKey',
      type: 'text',
      label: 'Batchinputkey',
      required: false,
    },
  ],
  'user_response': [
    {
      name: 'prompt',
      type: 'variableTextArea',
      label: 'Prompt',
      required: true,
      placeholder: 'Enter prompt template...',
    },
    {
      name: 'timeout',
      type: 'number',
      label: 'Timeout',
      required: false,
    },
  ],
};

/**
 * Get generated field configurations for a node type
 */
export function getGeneratedFields(nodeType: string): UnifiedFieldDefinition[] {
  return GENERATED_FIELD_CONFIGS[nodeType] || [];
}

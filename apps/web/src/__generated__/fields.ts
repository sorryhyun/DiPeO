/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by domain model field configs generation
 * Generated at: 2025-10-09T14:13:40.884216
 *
 * This file contains base field configurations generated from domain models.
 * To customize fields, use the override system in each node's config file.
 */

import type { UnifiedFieldDefinition } from '@/infrastructure/config/unifiedConfig';

export interface GeneratedFieldConfigs {
  [nodeType: string]: UnifiedFieldDefinition[];
}

export const GENERATED_FIELD_CONFIGS: GeneratedFieldConfigs = {
  'api_job': [
    {
      name: 'url',
      type: 'url',
      label: 'Url',
      required: true,
    },
    {
      name: 'method',
      type: 'text',
      label: 'Method',
      required: true,
    },
    {
      name: 'headers',
      type: 'textarea',
      label: 'Headers',
      required: false,
    },
    {
      name: 'params',
      type: 'textarea',
      label: 'Params',
      required: false,
    },
    {
      name: 'body',
      type: 'textarea',
      label: 'Body',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'Timeout',
      required: false,
    },
    {
      name: 'auth_type',
      type: 'text',
      label: 'Auth Type',
      required: false,
    },
    {
      name: 'auth_config',
      type: 'textarea',
      label: 'Auth Config',
      required: false,
    },
  ],
  'code_job': [
    {
      name: 'language',
      type: 'text',
      label: 'Language',
      required: true,
    },
    {
      name: 'file_path',
      type: 'text',
      label: 'File Path',
      required: false,
    },
    {
      name: 'code',
      type: 'text',
      label: 'Code',
      required: false,
    },
    {
      name: 'function_name',
      type: 'text',
      label: 'Function Name',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'Timeout',
      required: false,
    },
  ],
  'condition': [
    {
      name: 'condition_type',
      type: 'text',
      label: 'Condition Type',
      required: false,
    },
    {
      name: 'expression',
      type: 'text',
      label: 'Expression',
      required: false,
    },
    {
      name: 'node_indices',
      type: 'textarea',
      label: 'Node Indices',
      required: false,
    },
    {
      name: 'person',
      type: 'text',
      label: 'Person',
      required: false,
    },
    {
      name: 'judge_by',
      type: 'text',
      label: 'Judge By',
      required: false,
    },
    {
      name: 'judge_by_file',
      type: 'text',
      label: 'Judge By File',
      required: false,
    },
    {
      name: 'memorize_to',
      type: 'text',
      label: 'Memorize To',
      required: false,
    },
    {
      name: 'at_most',
      type: 'number',
      label: 'At Most',
      required: false,
    },
    {
      name: 'expose_index_as',
      type: 'text',
      label: 'Expose Index As',
      required: false,
    },
    {
      name: 'skippable',
      type: 'checkbox',
      label: 'Skippable',
      required: false,
    },
  ],
  'db': [
    {
      name: 'file',
      type: 'text',
      label: 'File',
      required: false,
    },
    {
      name: 'collection',
      type: 'text',
      label: 'Collection',
      required: false,
    },
    {
      name: 'sub_type',
      type: 'text',
      label: 'Sub Type',
      required: true,
    },
    {
      name: 'operation',
      type: 'text',
      label: 'Operation',
      required: true,
    },
    {
      name: 'query',
      type: 'text',
      label: 'Query',
      required: false,
    },
    {
      name: 'keys',
      type: 'password',
      label: 'Keys',
      required: false,
    },
    {
      name: 'lines',
      type: 'text',
      label: 'Lines',
      required: false,
    },
    {
      name: 'data',
      type: 'textarea',
      label: 'Data',
      required: false,
    },
    {
      name: 'serialize_json',
      type: 'checkbox',
      label: 'Serialize Json',
      required: false,
    },
    {
      name: 'format',
      type: 'text',
      label: 'Format',
      required: false,
    },
  ],
  'diff_patch': [
    {
      name: 'target_path',
      type: 'text',
      label: 'Target Path',
      required: true,
    },
    {
      name: 'diff',
      type: 'text',
      label: 'Diff',
      required: true,
    },
    {
      name: 'format',
      type: 'text',
      label: 'Format',
      required: false,
    },
    {
      name: 'apply_mode',
      type: 'text',
      label: 'Apply Mode',
      required: false,
    },
    {
      name: 'backup',
      type: 'checkbox',
      label: 'Backup',
      required: false,
    },
    {
      name: 'validate_patch',
      type: 'text',
      label: 'Validate Patch',
      required: false,
    },
    {
      name: 'backup_dir',
      type: 'text',
      label: 'Backup Dir',
      required: false,
    },
    {
      name: 'strip_level',
      type: 'number',
      label: 'Strip Level',
      required: false,
      min: 0,
      max: 10,
    },
    {
      name: 'fuzz_factor',
      type: 'number',
      label: 'Fuzz Factor',
      required: false,
      min: 0,
      max: 100,
    },
    {
      name: 'reject_file',
      type: 'text',
      label: 'Reject File',
      required: false,
    },
    {
      name: 'ignore_whitespace',
      type: 'checkbox',
      label: 'Ignore Whitespace',
      required: false,
    },
    {
      name: 'create_missing',
      type: 'checkbox',
      label: 'Create Missing',
      required: false,
    },
  ],
  'endpoint': [
    {
      name: 'save_to_file',
      type: 'checkbox',
      label: 'Save To File',
      required: false,
    },
    {
      name: 'file_name',
      type: 'text',
      label: 'File Name',
      required: false,
    },
  ],
  'hook': [
    {
      name: 'hook_type',
      type: 'text',
      label: 'Hook Type',
      required: true,
    },
    {
      name: 'command',
      type: 'text',
      label: 'Command',
      required: false,
    },
    {
      name: 'url',
      type: 'url',
      label: 'Url',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'Timeout',
      required: false,
      min: 1,
      max: 300,
    },
    {
      name: 'retry_count',
      type: 'number',
      label: 'Retry Count',
      required: false,
      min: 0,
      max: 5,
    },
  ],
  'integrated_api': [
    {
      name: 'provider',
      type: 'text',
      label: 'Provider',
      required: true,
    },
    {
      name: 'operation',
      type: 'text',
      label: 'Operation',
      required: true,
    },
    {
      name: 'resource_id',
      type: 'text',
      label: 'Resource Id',
      required: false,
    },
    {
      name: 'config',
      type: 'textarea',
      label: 'Config',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'Timeout',
      required: false,
      min: 1,
      max: 300,
    },
    {
      name: 'max_retries',
      type: 'number',
      label: 'Max Retries',
      required: false,
      min: 0,
      max: 10,
    },
  ],
  'ir_builder': [
    {
      name: 'builder_type',
      type: 'text',
      label: 'Builder Type',
      required: true,
    },
    {
      name: 'source_type',
      type: 'text',
      label: 'Source Type',
      required: false,
    },
    {
      name: 'config_path',
      type: 'text',
      label: 'Config Path',
      required: false,
    },
    {
      name: 'output_format',
      type: 'text',
      label: 'Output Format',
      required: false,
    },
    {
      name: 'cache_enabled',
      type: 'checkbox',
      label: 'Cache Enabled',
      required: false,
    },
    {
      name: 'validate_output',
      type: 'text',
      label: 'Validate Output',
      required: false,
    },
  ],
  'json_schema_validator': [
    {
      name: 'schema_path',
      type: 'text',
      label: 'Schema Path',
      required: false,
    },
    {
      name: 'json_schema',
      type: 'textarea',
      label: 'Json Schema',
      required: false,
    },
    {
      name: 'data_path',
      type: 'text',
      label: 'Data Path',
      required: false,
    },
    {
      name: 'strict_mode',
      type: 'checkbox',
      label: 'Strict Mode',
      required: false,
    },
    {
      name: 'error_on_extra',
      type: 'checkbox',
      label: 'Error On Extra',
      required: false,
    },
  ],
  'person_job': [
    {
      name: 'person',
      type: 'text',
      label: 'Person',
      required: false,
    },
    {
      name: 'first_only_prompt',
      type: 'text',
      label: 'First Only Prompt',
      required: false,
    },
    {
      name: 'first_prompt_file',
      type: 'text',
      label: 'First Prompt File',
      required: false,
    },
    {
      name: 'default_prompt',
      type: 'text',
      label: 'Default Prompt',
      required: false,
    },
    {
      name: 'prompt_file',
      type: 'text',
      label: 'Prompt File',
      required: false,
    },
    {
      name: 'max_iteration',
      type: 'number',
      label: 'Max Iteration',
      required: true,
    },
    {
      name: 'memorize_to',
      type: 'text',
      label: 'Memorize To',
      required: false,
    },
    {
      name: 'at_most',
      type: 'number',
      label: 'At Most',
      required: false,
      min: 1,
      max: 500,
    },
    {
      name: 'ignore_person',
      type: 'text',
      label: 'Ignore Person',
      required: false,
    },
    {
      name: 'tools',
      type: 'text',
      label: 'Tools',
      required: false,
    },
    {
      name: 'text_format',
      type: 'text',
      label: 'Text Format',
      required: false,
    },
    {
      name: 'text_format_file',
      type: 'text',
      label: 'Text Format File',
      required: false,
    },
    {
      name: 'resolved_prompt',
      type: 'text',
      label: 'Resolved Prompt',
      required: false,
    },
    {
      name: 'resolved_first_prompt',
      type: 'text',
      label: 'Resolved First Prompt',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'Batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'password',
      label: 'Batch Input Key',
      required: false,
    },
    {
      name: 'batch_parallel',
      type: 'checkbox',
      label: 'Batch Parallel',
      required: false,
    },
    {
      name: 'max_concurrent',
      type: 'number',
      label: 'Max Concurrent',
      required: false,
      min: 1,
      max: 100,
    },
  ],
  'start': [
    {
      name: 'trigger_mode',
      type: 'text',
      label: 'Trigger Mode',
      required: false,
    },
    {
      name: 'custom_data',
      type: 'text',
      label: 'Custom Data',
      required: false,
    },
    {
      name: 'output_data_structure',
      type: 'textarea',
      label: 'Output Data Structure',
      required: false,
    },
    {
      name: 'hook_event',
      type: 'text',
      label: 'Hook Event',
      required: false,
    },
    {
      name: 'hook_filters',
      type: 'textarea',
      label: 'Hook Filters',
      required: false,
    },
  ],
  'sub_diagram': [
    {
      name: 'diagram_name',
      type: 'text',
      label: 'Diagram Name',
      required: false,
    },
    {
      name: 'diagram_data',
      type: 'textarea',
      label: 'Diagram Data',
      required: false,
    },
    {
      name: 'input_mapping',
      type: 'textarea',
      label: 'Input Mapping',
      required: false,
    },
    {
      name: 'output_mapping',
      type: 'textarea',
      label: 'Output Mapping',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'Timeout',
      required: false,
      min: 1,
      max: 3600,
    },
    {
      name: 'wait_for_completion',
      type: 'checkbox',
      label: 'Wait For Completion',
      required: false,
    },
    {
      name: 'isolate_conversation',
      type: 'checkbox',
      label: 'Isolate Conversation',
      required: false,
    },
    {
      name: 'ignore_if_sub',
      type: 'checkbox',
      label: 'Ignore If Sub',
      required: false,
    },
    {
      name: 'diagram_format',
      type: 'text',
      label: 'Diagram Format',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'Batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'password',
      label: 'Batch Input Key',
      required: false,
    },
    {
      name: 'batch_parallel',
      type: 'checkbox',
      label: 'Batch Parallel',
      required: false,
    },
  ],
  'template_job': [
    {
      name: 'template_path',
      type: 'text',
      label: 'Template Path',
      required: false,
    },
    {
      name: 'template_content',
      type: 'textarea',
      label: 'Template Content',
      required: false,
    },
    {
      name: 'output_path',
      type: 'text',
      label: 'Output Path',
      required: false,
    },
    {
      name: 'variables',
      type: 'textarea',
      label: 'Variables',
      required: false,
    },
    {
      name: 'engine',
      type: 'text',
      label: 'Engine',
      required: false,
    },
    {
      name: 'preprocessor',
      type: 'text',
      label: 'Preprocessor',
      required: false,
    },
  ],
  'typescript_ast': [
    {
      name: 'source',
      type: 'text',
      label: 'Source',
      required: false,
    },
    {
      name: 'extract_patterns',
      type: 'textarea',
      label: 'Extract Patterns',
      required: false,
    },
    {
      name: 'include_jsdoc',
      type: 'checkbox',
      label: 'Include Jsdoc',
      required: false,
    },
    {
      name: 'parse_mode',
      type: 'text',
      label: 'Parse Mode',
      required: false,
    },
    {
      name: 'transform_enums',
      type: 'checkbox',
      label: 'Transform Enums',
      required: false,
    },
    {
      name: 'flatten_output',
      type: 'checkbox',
      label: 'Flatten Output',
      required: false,
    },
    {
      name: 'output_format',
      type: 'text',
      label: 'Output Format',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'Batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'password',
      label: 'Batch Input Key',
      required: false,
    },
  ],
  'user_response': [
    {
      name: 'prompt',
      type: 'text',
      label: 'Prompt',
      required: true,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'Timeout',
      required: false,
    },
  ],
};

/**
 * Get generated field configurations for a node type
 */
export function getGeneratedFields(nodeType: string): UnifiedFieldDefinition[] {
  return GENERATED_FIELD_CONFIGS[nodeType] || [];
}

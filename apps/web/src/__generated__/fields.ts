/**
 * GENERATED FILE - DO NOT EDIT
 * Generated by domain model field configs generation
 * Generated at: 2025-09-19T17:28:44.335222
 *
 * This file contains base field configurations generated from domain models.
 * To customize fields, use the override system in each node's config file.
 */

import type { UnifiedFieldDefinition } from '@/infrastructure/config/unifiedConfig';

export interface GeneratedFieldConfigs {
  [nodeType: string]: UnifiedFieldDefinition[];
}

export const GENERATED_FIELD_CONFIGS: GeneratedFieldConfigs = {
  'api_job': [
    {
      name: 'url',
      type: 'url',
      label: 'url',
      required: true,
    },
    {
      name: 'method',
      type: 'text',
      label: 'method',
      required: true,
    },
    {
      name: 'headers',
      type: 'textarea',
      label: 'headers',
      required: false,
    },
    {
      name: 'params',
      type: 'textarea',
      label: 'params',
      required: false,
    },
    {
      name: 'body',
      type: 'textarea',
      label: 'body',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'timeout',
      required: false,
    },
    {
      name: 'auth_type',
      type: 'text',
      label: 'auth_type',
      required: false,
    },
    {
      name: 'auth_config',
      type: 'textarea',
      label: 'auth_config',
      required: false,
    },
  ],
  'code_job': [
    {
      name: 'language',
      type: 'text',
      label: 'language',
      required: true,
    },
    {
      name: 'filePath',
      type: 'text',
      label: 'filePath',
      required: false,
    },
    {
      name: 'code',
      type: 'text',
      label: 'code',
      required: false,
    },
    {
      name: 'functionName',
      type: 'text',
      label: 'functionName',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'timeout',
      required: false,
    },
  ],
  'condition': [
    {
      name: 'condition_type',
      type: 'text',
      label: 'condition_type',
      required: false,
    },
    {
      name: 'expression',
      type: 'text',
      label: 'expression',
      required: false,
    },
    {
      name: 'node_indices',
      type: 'textarea',
      label: 'node_indices',
      required: false,
    },
    {
      name: 'person',
      type: 'text',
      label: 'person',
      required: false,
    },
    {
      name: 'judge_by',
      type: 'text',
      label: 'judge_by',
      required: false,
    },
    {
      name: 'judge_by_file',
      type: 'text',
      label: 'judge_by_file',
      required: false,
    },
    {
      name: 'memorize_to',
      type: 'text',
      label: 'memorize_to',
      required: false,
    },
    {
      name: 'at_most',
      type: 'number',
      label: 'at_most',
      required: false,
    },
    {
      name: 'expose_index_as',
      type: 'text',
      label: 'expose_index_as',
      required: false,
    },
    {
      name: 'skippable',
      type: 'checkbox',
      label: 'skippable',
      required: false,
    },
  ],
  'db': [
    {
      name: 'file',
      type: 'text',
      label: 'file',
      required: false,
    },
    {
      name: 'collection',
      type: 'text',
      label: 'collection',
      required: false,
    },
    {
      name: 'sub_type',
      type: 'text',
      label: 'sub_type',
      required: true,
    },
    {
      name: 'operation',
      type: 'text',
      label: 'operation',
      required: true,
    },
    {
      name: 'query',
      type: 'text',
      label: 'query',
      required: false,
    },
    {
      name: 'keys',
      type: 'password',
      label: 'keys',
      required: false,
    },
    {
      name: 'data',
      type: 'textarea',
      label: 'data',
      required: false,
    },
    {
      name: 'serialize_json',
      type: 'checkbox',
      label: 'serialize_json',
      required: false,
    },
    {
      name: 'format',
      type: 'text',
      label: 'format',
      required: false,
    },
  ],
  'diff_patch': [
    {
      name: 'target_path',
      type: 'text',
      label: 'target_path',
      required: true,
    },
    {
      name: 'diff',
      type: 'text',
      label: 'diff',
      required: true,
    },
    {
      name: 'format',
      type: 'text',
      label: 'format',
      required: false,
    },
    {
      name: 'apply_mode',
      type: 'text',
      label: 'apply_mode',
      required: false,
    },
    {
      name: 'backup',
      type: 'checkbox',
      label: 'backup',
      required: false,
    },
    {
      name: 'validate_patch',
      type: 'text',
      label: 'validate_patch',
      required: false,
    },
    {
      name: 'backup_dir',
      type: 'text',
      label: 'backup_dir',
      required: false,
    },
    {
      name: 'strip_level',
      type: 'number',
      label: 'strip_level',
      required: false,
      min: 0,
      max: 10,
    },
    {
      name: 'fuzz_factor',
      type: 'number',
      label: 'fuzz_factor',
      required: false,
      min: 0,
      max: 100,
    },
    {
      name: 'reject_file',
      type: 'text',
      label: 'reject_file',
      required: false,
    },
    {
      name: 'ignore_whitespace',
      type: 'checkbox',
      label: 'ignore_whitespace',
      required: false,
    },
    {
      name: 'create_missing',
      type: 'checkbox',
      label: 'create_missing',
      required: false,
    },
  ],
  'endpoint': [
    {
      name: 'save_to_file',
      type: 'checkbox',
      label: 'save_to_file',
      required: false,
    },
    {
      name: 'file_name',
      type: 'text',
      label: 'file_name',
      required: false,
    },
  ],
  'hook': [
    {
      name: 'hook_type',
      type: 'text',
      label: 'hook_type',
      required: true,
    },
    {
      name: 'command',
      type: 'text',
      label: 'command',
      required: false,
    },
    {
      name: 'url',
      type: 'url',
      label: 'url',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'timeout',
      required: false,
      min: 1,
      max: 300,
    },
    {
      name: 'retry_count',
      type: 'number',
      label: 'retry_count',
      required: false,
      min: 0,
      max: 5,
    },
  ],
  'integrated_api': [
    {
      name: 'provider',
      type: 'text',
      label: 'provider',
      required: true,
    },
    {
      name: 'operation',
      type: 'text',
      label: 'operation',
      required: true,
    },
    {
      name: 'resource_id',
      type: 'text',
      label: 'resource_id',
      required: false,
    },
    {
      name: 'config',
      type: 'textarea',
      label: 'config',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'timeout',
      required: false,
      min: 1,
      max: 300,
    },
    {
      name: 'max_retries',
      type: 'number',
      label: 'max_retries',
      required: false,
      min: 0,
      max: 10,
    },
  ],
  'ir_builder': [
    {
      name: 'builder_type',
      type: 'text',
      label: 'builder_type',
      required: true,
    },
    {
      name: 'source_type',
      type: 'text',
      label: 'source_type',
      required: false,
    },
    {
      name: 'config_path',
      type: 'text',
      label: 'config_path',
      required: false,
    },
    {
      name: 'output_format',
      type: 'text',
      label: 'output_format',
      required: false,
    },
    {
      name: 'cache_enabled',
      type: 'checkbox',
      label: 'cache_enabled',
      required: false,
    },
    {
      name: 'validate_output',
      type: 'text',
      label: 'validate_output',
      required: false,
    },
  ],
  'json_schema_validator': [
    {
      name: 'schema_path',
      type: 'text',
      label: 'schema_path',
      required: false,
    },
    {
      name: 'json_schema',
      type: 'textarea',
      label: 'json_schema',
      required: false,
    },
    {
      name: 'data_path',
      type: 'text',
      label: 'data_path',
      required: false,
    },
    {
      name: 'strict_mode',
      type: 'checkbox',
      label: 'strict_mode',
      required: false,
    },
    {
      name: 'error_on_extra',
      type: 'checkbox',
      label: 'error_on_extra',
      required: false,
    },
  ],
  'person_job': [
    {
      name: 'person',
      type: 'text',
      label: 'person',
      required: false,
    },
    {
      name: 'first_only_prompt',
      type: 'text',
      label: 'first_only_prompt',
      required: false,
    },
    {
      name: 'first_prompt_file',
      type: 'text',
      label: 'first_prompt_file',
      required: false,
    },
    {
      name: 'default_prompt',
      type: 'text',
      label: 'default_prompt',
      required: false,
    },
    {
      name: 'prompt_file',
      type: 'text',
      label: 'prompt_file',
      required: false,
    },
    {
      name: 'max_iteration',
      type: 'number',
      label: 'max_iteration',
      required: true,
    },
    {
      name: 'memorize_to',
      type: 'text',
      label: 'memorize_to',
      required: false,
    },
    {
      name: 'at_most',
      type: 'number',
      label: 'at_most',
      required: false,
      min: 1,
      max: 500,
    },
    {
      name: 'ignore_person',
      type: 'text',
      label: 'ignore_person',
      required: false,
    },
    {
      name: 'tools',
      type: 'text',
      label: 'tools',
      required: false,
    },
    {
      name: 'text_format',
      type: 'text',
      label: 'text_format',
      required: false,
    },
    {
      name: 'text_format_file',
      type: 'text',
      label: 'text_format_file',
      required: false,
    },
    {
      name: 'resolved_prompt',
      type: 'text',
      label: 'resolved_prompt',
      required: false,
    },
    {
      name: 'resolved_first_prompt',
      type: 'text',
      label: 'resolved_first_prompt',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'password',
      label: 'batch_input_key',
      required: false,
    },
    {
      name: 'batch_parallel',
      type: 'checkbox',
      label: 'batch_parallel',
      required: false,
    },
    {
      name: 'max_concurrent',
      type: 'number',
      label: 'max_concurrent',
      required: false,
      min: 1,
      max: 100,
    },
  ],
  'start': [
    {
      name: 'trigger_mode',
      type: 'text',
      label: 'trigger_mode',
      required: false,
    },
    {
      name: 'custom_data',
      type: 'text',
      label: 'custom_data',
      required: false,
    },
    {
      name: 'output_data_structure',
      type: 'textarea',
      label: 'output_data_structure',
      required: false,
    },
    {
      name: 'hook_event',
      type: 'text',
      label: 'hook_event',
      required: false,
    },
    {
      name: 'hook_filters',
      type: 'textarea',
      label: 'hook_filters',
      required: false,
    },
  ],
  'sub_diagram': [
    {
      name: 'diagram_name',
      type: 'text',
      label: 'diagram_name',
      required: false,
    },
    {
      name: 'diagram_data',
      type: 'textarea',
      label: 'diagram_data',
      required: false,
    },
    {
      name: 'input_mapping',
      type: 'textarea',
      label: 'input_mapping',
      required: false,
    },
    {
      name: 'output_mapping',
      type: 'textarea',
      label: 'output_mapping',
      required: false,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'timeout',
      required: false,
      min: 1,
      max: 3600,
    },
    {
      name: 'wait_for_completion',
      type: 'checkbox',
      label: 'wait_for_completion',
      required: false,
    },
    {
      name: 'isolate_conversation',
      type: 'checkbox',
      label: 'isolate_conversation',
      required: false,
    },
    {
      name: 'ignoreIfSub',
      type: 'checkbox',
      label: 'ignoreIfSub',
      required: false,
    },
    {
      name: 'diagram_format',
      type: 'text',
      label: 'diagram_format',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'batch',
      required: false,
    },
    {
      name: 'batch_input_key',
      type: 'password',
      label: 'batch_input_key',
      required: false,
    },
    {
      name: 'batch_parallel',
      type: 'checkbox',
      label: 'batch_parallel',
      required: false,
    },
  ],
  'template_job': [
    {
      name: 'template_path',
      type: 'text',
      label: 'template_path',
      required: false,
    },
    {
      name: 'template_content',
      type: 'textarea',
      label: 'template_content',
      required: false,
    },
    {
      name: 'output_path',
      type: 'text',
      label: 'output_path',
      required: false,
    },
    {
      name: 'variables',
      type: 'textarea',
      label: 'variables',
      required: false,
    },
    {
      name: 'engine',
      type: 'text',
      label: 'engine',
      required: false,
    },
    {
      name: 'preprocessor',
      type: 'text',
      label: 'preprocessor',
      required: false,
    },
  ],
  'typescript_ast': [
    {
      name: 'source',
      type: 'text',
      label: 'source',
      required: false,
    },
    {
      name: 'extractPatterns',
      type: 'textarea',
      label: 'extractPatterns',
      required: false,
    },
    {
      name: 'includeJSDoc',
      type: 'checkbox',
      label: 'includeJSDoc',
      required: false,
    },
    {
      name: 'parseMode',
      type: 'text',
      label: 'parseMode',
      required: false,
    },
    {
      name: 'transformEnums',
      type: 'checkbox',
      label: 'transformEnums',
      required: false,
    },
    {
      name: 'flattenOutput',
      type: 'checkbox',
      label: 'flattenOutput',
      required: false,
    },
    {
      name: 'outputFormat',
      type: 'text',
      label: 'outputFormat',
      required: false,
    },
    {
      name: 'batch',
      type: 'checkbox',
      label: 'batch',
      required: false,
    },
    {
      name: 'batchInputKey',
      type: 'password',
      label: 'batchInputKey',
      required: false,
    },
  ],
  'user_response': [
    {
      name: 'prompt',
      type: 'text',
      label: 'prompt',
      required: true,
    },
    {
      name: 'timeout',
      type: 'text',
      label: 'timeout',
      required: false,
    },
  ],
};

/**
 * Get generated field configurations for a node type
 */
export function getGeneratedFields(nodeType: string): UnifiedFieldDefinition[] {
  return GENERATED_FIELD_CONFIGS[nodeType] || [];
}

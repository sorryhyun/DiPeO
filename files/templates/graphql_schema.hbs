# GraphQL Schema for {{displayName}} Node
# Generated from node specification

type {{spec.nodeType}}NodeData implements NodeData {
  id: ID!
  type: NodeType!
  label: String!
  position: Position!{{#each fields}}
  {{name}}: {{#if (eq type 'string')}}String{{else if (eq type 'number')}}Float{{else if (eq type 'boolean')}}Boolean{{else if (eq type 'enum')}}{{../spec.nodeType}}{{name}}Type{{else}}String{{/if}}{{#unless required}}{{/unless}}{{/each}}
  flipped: Boolean
}

input {{spec.nodeType}}NodeInput {
  label: String!
  position: PositionInput!{{#each fields}}
  {{name}}: {{#if (eq type 'string')}}String{{else if (eq type 'number')}}Float{{else if (eq type 'boolean')}}Boolean{{else if (eq type 'enum')}}{{../spec.nodeType}}{{name}}Type{{else}}String{{/if}}{{#unless required}}{{/unless}}{{/each}}
  flipped: Boolean
}

{{#each fields}}{{#if (eq type 'enum')}}
enum {{../../spec.nodeType}}{{name}}Type {{{#each values}}
  {{this}}{{/each}}
}
{{/if}}{{/each}}

# Update these union types to include the new node type:
# union NodeData = ... | {{spec.nodeType}}NodeData
# union NodeInput = ... | {{spec.nodeType}}NodeInput
version: light
description: Convert TypeScript models to Python using diagram-based approach

# Variables for paths
variables:
  source_dir: dipeo/models/src
  output_dir: dipeo/models
  
nodes:
  - label: Glob TypeScript Files
    type: code_job
    props:
      functionName: glob_typescript_files
      code: files/codegen/code/domain_model_functions.py
    position: {x: 100, y: 100}
        
  - label: Parse TypeScript Files
    type: typescript_ast
    props:
      extractPatterns: ["interface", "type", "enum", "class"]
      includeImports: true
      includeExports: true
    position: {x: 300, y: 100}
      
  - label: Transform to Python Models
    type: code_job
    props:
      functionName: transform_typescript_to_python
      codeFile: files/codegen/code/type_transformers.py
    position: {x: 500, y: 100}
      
  - label: Generate Pydantic Models
    type: code_job
    props:
      functionName: generate_pydantic_models
      code: files/codegen/code/domain_model_functions.py
    position: {x: 700, y: 100}
      
  - label: Generate Conversions
    type: code_job
    props:
      functionName: generate_conversions
      code: files/codegen/code/domain_model_functions.py
    position: {x: 700, y: 200}
    
  - label: Generate Zod Schemas
    type: code_job
    props:
      functionName: generate_zod_schemas
      code: files/codegen/code/domain_model_functions.py
    position: {x: 700, y: 300}
    
  - label: Generate JSON Schemas
    type: code_job
    props:
      functionName: generate_json_schemas
      codeFile: files/codegen/code/json_schema_generator.py
    position: {x: 700, y: 400}
    
  - label: Verify Generated Code
    type: code_job
    props:
      functionName: verify_generated_code
      code: files/codegen/code/domain_model_functions.py
    position: {x: 900, y: 250}
    
  - label: Generate Summary Report
    type: person_job
    person_id: reporter
    props:
      promptTemplate: |
        Code generation completed for TypeScript → Python models.
        
        Files processed: {{file_count}}
        Generated files:
        {{#each generated_files}}
        - {{this.path}} ({{this.type}})
        {{/each}}
        
        {{#if verification_results.errors}}
        ❌ Errors found:
        {{#each verification_results.errors}}
        - {{this}}
        {{/each}}
        {{else}}
        ✅ All generated code is syntactically valid!
        {{/if}}
        
        {{#if verification_results.warnings}}
        ⚠️ Warnings:
        {{#each verification_results.warnings}}
        - {{this}}
        {{/each}}
        {{/if}}
        
        Please provide a summary of the code generation results.
    position: {x: 1100, y: 250}

connections:
  - from: Glob TypeScript Files
    to: Parse TypeScript Files
    fromHandle: out
    toHandle: source_files
    
  - from: Parse TypeScript Files
    to: Transform to Python Models
    fromHandle: out
    toHandle: parsed_ast
    
  - from: Transform to Python Models
    to: Generate Pydantic Models
    fromHandle: model_data
    toHandle: in
    
  - from: Transform to Python Models
    to: Generate Conversions
    fromHandle: conversion_data
    toHandle: in
    
  - from: Transform to Python Models
    to: Generate Zod Schemas
    fromHandle: zod_data
    toHandle: in
    
  - from: Transform to Python Models
    to: Generate JSON Schemas
    fromHandle: schema_data
    toHandle: in
    
  - from: Generate Pydantic Models
    to: Verify Generated Code
    fromHandle: out
    toHandle: generated_files[0]
    
  - from: Generate Conversions
    to: Verify Generated Code
    fromHandle: out
    toHandle: generated_files[1]
    
  - from: Generate Zod Schemas
    to: Verify Generated Code
    fromHandle: out
    toHandle: generated_files[2]
    
  - from: Generate JSON Schemas
    to: Verify Generated Code
    fromHandle: generated_files
    toHandle: generated_files[3]
    
  - from: Verify Generated Code
    to: Generate Summary Report
    fromHandle: out
    toHandle: verification_results
    
  - from: Glob TypeScript Files
    to: Generate Summary Report
    fromHandle: file_count
    toHandle: file_count

persons:
  reporter:
    service: openai
    model: gpt-4.1-mini
    api_key_id: APIKEY_52609F
    system_prompt: |
      You are a code generation reporter. Provide clear, concise summaries
      of code generation results, highlighting any issues that need attention.
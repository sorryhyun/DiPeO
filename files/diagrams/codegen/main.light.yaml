version: light
nodes:
- label: Start
  type: start
  position: {x: 100, y: 300}
  props:
    trigger_mode: manual
    custom_data:
      node_spec_path: files/specifications/nodes/example_hook.json
- label: Load Node Spec
  type: db
  position: {x: 296, y: 89}
  props:
    operation: read
    sub_type: file
    source_details: files/specifications/nodes/example_hook.json
- label: Validate Spec
  type: json_schema_validator
  position: {x: 569, y: 248}
  props:
    schema_path: files/schemas/node_specification.schema.json
    strict_mode: true
- label: Parse Spec Data
  type: code_job
  position: {x: 581, y: 391}
  props:
    functionName: parse_spec_data
    flipped: [true, false]
    code_type: python
    code: files/code/codegen/codegen_functions.py
- label: Generate TypeScript Model
  type: template_job
  position: {x: 221, y: 785}
  props:
    template_path: files/templates/typescript_model.hbs
    output_path: dipeo/models/src/nodes/{{nodeType}}Node.ts
    engine: handlebars
- label: Generate Python Models
  type: code_job
  position: {x: 549, y: 792}
  props:
    functionName: generate_python_model
    flipped: [false, false]
    code_type: python
    code: files/code/codegen/codegen_functions.py
- label: Generate GraphQL Schema
  type: template_job
  position: {x: 211, y: 947}
  props:
    template_path: files/templates/graphql_schema.hbs
    output_path: apps/server/src/dipeo_server/api/graphql/schema/nodes/{{nodeType}}.graphql
    engine: handlebars
- label: Generate React Component
  type: template_job
  position: {x: 218, y: 1275}
  props:
    template_path: files/templates/react_component.hbs
    output_path: apps/web/src/features/diagram-editor/components/nodes/generated/{{nodeType}}Node.tsx
    engine: handlebars
    flipped: [false, false]
- label: Generate Node Config
  type: template_job
  position: {x: 207, y: 606}
  props:
    template_path: files/templates/node_config.hbs
    output_path: apps/web/src/features/diagram-editor/config/nodes/generated/{{spec_data.camelCase}}Config.ts
    engine: handlebars
    flipped: [false, false]
- label: Generate Field Config
  type: template_job
  position: {x: 218, y: 1111}
  props:
    template_path: files/templates/field_config.hbs
    output_path: apps/web/src/features/diagram-editor/config/nodes/generated/{{spec_data.camelCase}}Fields.ts
    engine: handlebars
- label: Update Registry Files
  type: code_job
  position: {x: 946, y: 1314}
  props:
    functionName: update_registry
    code_type: python
    code: files/code/codegen/codegen_functions.py
- label: Register Node Types
  type: code_job
  position: {x: 1212, y: 688}
  props:
    functionName: register_node_types
    flipped: [false, false]
    code_type: python
    code: files/code/codegen/codegen_functions.py
- label: Verify Generated Code
  type: person_job
  position: {x: 1364, y: 1319}
  props:
    person: Person 2
    default_prompt: |
      Please verify the generated code for the {{spec.nodeType}} node type.

      Generated files:
      {{#each registry_updates.files_generated}}
      - {{this}}
      {{/each}}

      Verification checklist:
      1. Check TypeScript model for type safety and proper imports
      2. Verify GraphQL schema has correct types and enum values
      3. Ensure React component follows project patterns
      4. Validate field configurations match the specification
      5. Check for any security vulnerabilities or malicious patterns
      6. Verify naming conventions are consistent

      Review the generated code and report:
      - Any syntax errors or type mismatches
      - Security concerns or suspicious patterns
      - Missing imports or dependencies
      - Deviations from DiPeO coding standards

      Provide a PASS/FAIL verdict with specific issues if any.
    max_iteration: 1
    flipped: [false, false]
- label: Success Report
  type: person_job
  position: {x: 1715, y: 1048}
  props:
    person: Person 1
    default_prompt: |
      Generate a comprehensive report of the code generation for {{spec.nodeType}} node:

      Summary of generated files:
      {{#each registry_updates.files_generated}}
      - {{this}}
      {{/each}}

      Node registration result:
      {{#if registration_result.success}}
      ✓ Successfully registered {{spec.nodeType}} node type
      Files updated by registration:
      {{#each registration_result.filesUpdated}}
      - {{this}}
      {{/each}}
      {{else}}
      ✗ Failed to register node: {{registration_result.message}}
      {{/if}}

      Verification result: {{verification_result}}

      Next manual steps required:
      {{#each registry_updates.next_steps}}
      {{this}}
      {{/each}}

      Please provide:
      1. A brief summary of what was generated
      2. Any warnings or considerations for the {{spec.nodeType}} node type
      3. Suggested testing approach for the new node
    max_iteration: 1
- label: End
  type: endpoint
  position: {x: 1642, y: 666}
  props:
    save_to_file: true
    file_format: md
    flipped: [false, false]
    file_path: logs/codegen/hook_codegen_report.md
connections:
- from: Start
  to: Load Node Spec
  content_type: object
  label: config
- from: Load Node Spec
  to: Validate Spec
  content_type: raw_text
- from: Validate Spec
  to: Parse Spec Data
  content_type: object
  label: raw_data
- from: Parse Spec Data
  to: Generate TypeScript Model
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate Python Models
  content_type: object
  label: spec
- from: Parse Spec Data
  to: Generate GraphQL Schema
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate React Component
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate Node Config
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate Field Config
  content_type: object
  label: spec_data
- from: Generate TypeScript Model
  to: Update Registry Files
  content_type: raw_text
  label: ts_result
- from: Generate Python Models
  to: Update Registry Files
  content_type: raw_text
  label: py_result
- from: Generate GraphQL Schema
  to: Update Registry Files
  content_type: raw_text
  label: gql_result
- from: Generate React Component
  to: Update Registry Files
  content_type: raw_text
  label: react_result
- from: Generate Node Config
  to: Update Registry Files
  content_type: raw_text
  label: config_result
- from: Generate Field Config
  to: Update Registry Files
  content_type: raw_text
  label: field_result
- from: Parse Spec Data
  to: Update Registry Files
  content_type: object
  label: spec
- from: Update Registry Files
  to: Register Node Types
  content_type: object
  label: registry_updates
- from: Parse Spec Data
  to: Register Node Types
  content_type: object
  label: spec
- from: Register Node Types
  to: Verify Generated Code
  content_type: object
  label: registration_result
- from: Update Registry Files
  to: Verify Generated Code
  content_type: object
  label: registry_updates
- from: Parse Spec Data
  to: Verify Generated Code
  content_type: object
  label: spec
- from: Verify Generated Code
  to: Success Report
  content_type: raw_text
  label: verification_result
- from: Update Registry Files
  to: Success Report
  content_type: object
  label: registry_updates
- from: Register Node Types
  to: Success Report
  content_type: object
  label: registration_result
- from: Parse Spec Data
  to: Success Report
  content_type: object
  label: spec
- from: Success Report
  to: End
  content_type: raw_text
persons:
  Person 1:
    service: openai
    model: gpt-4.1-nano
    api_key_id: APIKEY_52609F
  Person 2:
    service: openai
    model: gpt-4.1-nano
    api_key_id: APIKEY_52609F

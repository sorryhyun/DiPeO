version: light
nodes:
- label: Start
  type: start
  position: {x: 373, y: -278}
  props:
    trigger_mode: manual
- label: Get Node Spec Path
  type: code_job
  position: {x: 703, y: -296}
  props:
    functionName: get_node_spec_path
    code_type: python
    code: files/codegen/code/node_spec_loader.py
- label: Load Node Spec
  type: code_job
  position: {x: 1115, y: -315}
  props:
    functionName: load_node_spec
    code_type: python
    code: files/codegen/code/node_spec_loader.py
- label: Validate Spec
  type: json_schema_validator
  position: {x: 348, y: -133}
  props:
    schema_path: files/codegen/schemas/node_specification.schema.json
    strict_mode: true
    flipped: [true, false]
- label: Parse Spec Data
  type: code_job
  position: {x: 340, y: 55}
  props:
    functionName: parse_spec_data_with_paths
    code_type: python
    code: files/codegen/code/codegen_functions.py
- label: Generate TypeScript Model
  type: template_job
  position: {x: 748, y: -48}
  props:
    template_path: '{{spec_data.template_paths.typescript_model}}'
    output_path: '{{spec_data.output_paths.typescript_model}}'
    engine: handlebars
- label: Generate Python Models
  type: code_job
  position: {x: 753, y: 132}
  props:
    functionName: generate_python_model
    code_type: python
    code: files/codegen/code/codegen_functions.py
- label: Generate GraphQL Schema
  type: template_job
  position: {x: 748, y: 318}
  props:
    template_path: '{{spec_data.template_paths.graphql_schema}}'
    output_path: '{{spec_data.output_paths.graphql_schema}}'
    engine: handlebars
- label: Generate React Component
  type: template_job
  position: {x: 760, y: 494}
  props:
    template_path: '{{spec_data.template_paths.react_component}}'
    output_path: '{{spec_data.output_paths.react_component}}'
    engine: handlebars
- label: Generate Node Config
  type: template_job
  position: {x: 763, y: 670}
  props:
    template_path: '{{spec_data.template_paths.node_config}}'
    output_path: '{{spec_data.output_paths.node_config}}'
    engine: handlebars
- label: Generate Field Config
  type: template_job
  position: {x: 763, y: 837}
  props:
    template_path: '{{spec_data.template_paths.field_config}}'
    output_path: '{{spec_data.output_paths.field_config}}'
    engine: handlebars
- label: Update Registry Files
  type: code_job
  position: {x: 1270, y: 15}
  props:
    functionName: update_registry
    code_type: python
    code: files/codegen/code/codegen_functions.py
- label: Register Node Types
  type: code_job
  position: {x: 1279, y: 240}
  props:
    functionName: register_node_types
    flipped: [true, false]
    code_type: python
    code: files/codegen/code/codegen_functions.py
- label: Generate Report
  type: person_job
  position: {x: 1320, y: 503}
  props:
    person: NodeReporter
    default_prompt: |
      Generate a summary of the node UI code generation for {{registration_result.registry_updates.nodeType}}:

      Generated files:
      {{#each registration_result.registry_updates.files_generated}}
      - {{this}}
      {{/each}}

      Registration result:
      {{#if registration_result.success}}
      ✓ Successfully registered {{registration_result.registry_updates.nodeType}} node type
      {{else}}
      ✗ Failed to register node: {{registration_result.message}}
      {{/if}}

      Provide a brief summary including:
      1. What was successfully generated
      2. Any warnings or issues
      3. Next steps for testing the new node
    max_iteration: 1
    flipped: [false, false]
- label: Save Results
  type: code_job
  position: {x: 1680, y: 477}
  props:
    functionName: save_node_ui_results
    code_type: python
    code: files/codegen/code/phase3/sub_diagram_helpers.py
- label: End
  type: endpoint
  position: {x: 2100, y: 516}
  props:
    save_to_file: false
    flipped: [true, false]
connections:
- from: Start
  to: Get Node Spec Path
  content_type: object
- from: Get Node Spec Path
  to: Load Node Spec
  content_type: object
- from: Load Node Spec
  to: Validate Spec
  content_type: object
- from: Validate Spec
  to: Parse Spec Data
  content_type: object
  label: raw_data
- from: Parse Spec Data
  to: Generate TypeScript Model
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate Python Models
  content_type: object
  label: spec
- from: Parse Spec Data
  to: Generate GraphQL Schema
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate React Component
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate Node Config
  content_type: object
  label: spec_data
- from: Parse Spec Data
  to: Generate Field Config
  content_type: object
  label: spec_data
- from: Generate TypeScript Model
  to: Update Registry Files
  content_type: raw_text
  label: ts_result
- from: Generate Python Models
  to: Update Registry Files
  content_type: raw_text
  label: py_result
- from: Generate GraphQL Schema
  to: Update Registry Files
  content_type: raw_text
  label: gql_result
- from: Generate React Component
  to: Update Registry Files
  content_type: raw_text
  label: react_result
- from: Generate Node Config
  to: Update Registry Files
  content_type: raw_text
  label: config_result
- from: Generate Field Config
  to: Update Registry Files
  content_type: raw_text
  label: field_result
- from: Parse Spec Data
  to: Update Registry Files
  content_type: object
  label: spec
- from: Update Registry Files
  to: Register Node Types
  content_type: object
  label: registry_updates
- from: Register Node Types
  to: Generate Report
  content_type: object
  label: registration_result
- from: Generate Report
  to: Save Results
  content_type: raw_text
- from: Update Registry Files
  to: Save Results
  content_type: object
  label: registry_updates_save
- from: Register Node Types
  to: Save Results
  content_type: object
  label: registration_result_save
- from: Save Results
  to: End
  content_type: object
persons:
  NodeReporter:
    service: openai
    model: gpt-4.1-mini
    api_key_id: APIKEY_52609F

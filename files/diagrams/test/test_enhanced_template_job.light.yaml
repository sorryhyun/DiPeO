# Test Enhanced Template Job Features
# This diagram tests the enhanced template_job with TemplateService integration

version: light

nodes:
  - label: Test Data
    type: code_job
    position: {x: 100, y: 200}
    props:
      language: python
      code: |
        return {
            'ModelName': 'UserProfile',  # PascalCase to test snake_case filter
            'fields': [
                {'name': 'userId', 'type': 'string'},
                {'name': 'userAge', 'type': 'number'}, 
                {'name': 'userTags', 'type': 'string[]'},
                {'name': 'isActive', 'type': 'boolean'}
            ],
            'test_filters': {
                'snake_test': 'CamelCaseValue',
                'pascal_test': 'snake_case_value',
                'kebab_test': 'snake_case_value',
                'plural_test': 'user',
                'singular_test': 'users'
            }
        }

  - label: Test Enhanced Rendering
    type: template_job
    position: {x: 300, y: 200}
    props:
      engine: jinja2
      template_content: |
        # Testing Enhanced Template Features
        
        ## Case Conversions
        Model Name (original): {{ ModelName }}
        Model Name (snake_case): {{ ModelName | snake_case }}
        Model Name (camel_case): {{ ModelName | camel_case }}
        Model Name (pascal_case): {{ ModelName | pascal_case }}
        Model Name (kebab_case): {{ ModelName | kebab_case }}
        
        ## Python Class Generation
        class {{ ModelName | snake_case }}:
            """{{ ModelName | humanize }} model"""
            
            def __init__(self):
                {% for field in fields %}
                self.{{ field.name | snake_case }} = None  # Type: {{ field.type }}
                {% endfor %}
        
        ## TypeScript Interface Generation  
        interface {{ ModelName | pascal_case }} {
            {% for field in fields %}
            {{ field.name | camel_case }}: {{ field.type }};
            {% endfor %}
        }
        
        ## Filter Tests
        {% for key, value in test_filters.items() %}
        {{ key }}: "{{ value }}" -> 
        {%- if key == 'snake_test' %} {{ value | snake_case }}
        {%- elif key == 'pascal_test' %} {{ value | pascal_case }}
        {%- elif key == 'kebab_test' %} {{ value | kebab_case }}
        {%- elif key == 'plural_test' %} {{ value | pluralize }}
        {%- elif key == 'singular_test' %} {{ value | singularize }}
        {%- endif %}
        {% endfor %}
        
        ## Other Filters
        Title case: {{ ModelName | titleize }}
        Humanized: {{ ModelName | humanize }}
        Quoted: {{ ModelName | quote_string }}
        Ordinal: {{ 3 | ordinalize }}
      output_path: .temp/test_enhanced_template_output.txt

  - label: End
    type: endpoint
    position: {x: 500, y: 200}
    props:
      save_to_file: false

connections:
  - from: Test Data
    to: Test Enhanced Rendering

  - from: Test Enhanced Rendering
    to: End
# Test Enum Data Flow
version: light

nodes:
  - label: Generate Test Enums
    type: code_job
    position: {x: 100, y: 200}
    props:
      language: python
      code: |
        # Simulate enum data like extract_enums returns
        return [
            {
                'name': 'TestEnum',
                'description': 'Test enum description',
                'values': [
                    {'name': 'VALUE_ONE', 'value': 'value_one'},
                    {'name': 'VALUE_TWO', 'value': 'value_two'}
                ]
            },
            {
                'name': 'AnotherEnum',
                'description': 'Another test enum',
                'values': [
                    {'name': 'OPTION_A', 'value': 'option_a'},
                    {'name': 'OPTION_B', 'value': 'option_b'}
                ]
            }
        ]

  - label: Debug Template
    type: template_job
    position: {x: 300, y: 200}
    props:
      engine: jinja2
      template_content: |
        Debug Info:
        Type of enums_data: {{ enums_data.__class__.__name__ }}
        Length: {{ enums_data | length }}
        
        {% if enums_data %}
        First item: {{ enums_data[0] }}
        {% endif %}
        
        Generated Enums:
        {% for enum in enums_data %}
        class {{ enum.name }}(str, Enum):
            """{{ enum.description }}"""
            {% for value in enum.values %}
            {{ value.name }} = "{{ value.value }}"
            {% endfor %}
        {% endfor %}
      output_path: /tmp/enum_debug.txt

  - label: End
    type: endpoint
    position: {x: 500, y: 200}

connections:
  - from: Generate Test Enums
    to: Debug Template
    label: enums_data

  - from: Debug Template
    to: End
{
  "nodes": [
    {
      "id": "node_0",
      "type": "start",
      "position": {
        "x": 100,
        "y": 200
      },
      "data": {
        "trigger_mode": "none",
        "custom_data": {},
        "output_data_structure": {},
        "label": "start"
      }
    },
    {
      "id": "node_1",
      "type": "db",
      "position": {
        "x": 350,
        "y": 200
      },
      "data": {
        "file": [
          "files/data/input/*.csv"
        ],
        "sub_type": "file",
        "operation": "read",
        "serialize_json": false,
        "glob": true,
        "label": "load_files"
      }
    },
    {
      "id": "node_2",
      "type": "code_job",
      "position": {
        "x": 620,
        "y": 200
      },
      "data": {
        "language": "python",
        "code": "validation_result = {\"valid\": True, \"errors\": []}\nif not isinstance(raw_data, list):\n    validation_result[\"valid\"] = False\n    validation_result[\"errors\"].append({\"error\": \"raw_data_not_list\"})\nelse:\n    errors = []\n    for idx, item in enumerate(raw_data):\n        if isinstance(item, str):\n            if (\",\" not in item) and (\"\\t\" not in item):\n                validation_result[\"valid\"] = False\n                errors.append({\"index\": idx, \"error\": \"invalid_csv_format\"})\n        else:\n            validation_result[\"valid\"] = False\n            errors.append({\"index\": idx, \"error\": \"not_string\"})\n    if errors:\n        validation_result[\"errors\"] = errors\n# Expose\nvalidation_result = validation_result",
        "timeout": 60,
        "label": "validate_data"
      }
    },
    {
      "id": "node_3",
      "type": "condition",
      "position": {
        "x": 900,
        "y": 200
      },
      "data": {
        "condition_type": "custom",
        "expression": "validation_result['valid']",
        "label": "validation_check"
      }
    },
    {
      "id": "node_4",
      "type": "code_job",
      "position": {
        "x": 1150,
        "y": 200
      },
      "data": {
        "language": "python",
        "code": "items = []\nif isinstance(validation_result, dict) and validation_result.get(\"valid\"):\n    if isinstance(raw_data, list):\n        items = raw_data\n    else:\n        items = [raw_data]\nelse:\n    items = []\n# Expose batch data\n# Data flowing to the parallel processor is via 'items'\n",
        "timeout": 60,
        "label": "prepare_batch"
      }
    },
    {
      "id": "node_5",
      "type": "sub_diagram",
      "position": {
        "x": 1400,
        "y": 200
      },
      "data": {
        "diagram_name": "processors/parallel_item",
        "batch": true,
        "batch_input_key": "items",
        "batch_parallel": true,
        "ignoreIfSub": false,
        "label": "process_batch"
      }
    },
    {
      "id": "node_6",
      "type": "code_job",
      "position": {
        "x": 1650,
        "y": 200
      },
      "data": {
        "language": "python",
        "code": "processed = processed_items if isinstance(processed_items, list) else []\nfinal_results = {\"summary\": {\"processed_count\": len(processed)}, \"items\": processed}\n# Expose final results\nfinal_results = final_results",
        "timeout": 60,
        "label": "aggregate_results"
      }
    },
    {
      "id": "node_7",
      "type": "code_job",
      "position": {
        "x": 1000,
        "y": 200
      },
      "data": {
        "language": "python",
        "code": "error_list = []\nif isinstance(validation_result, dict):\n    error_list = validation_result.get(\"errors\", [])\nfinal_results = {\"status\": \"validation_failed\", \"errors\": error_list}\n",
        "timeout": 60,
        "label": "log_errors"
      }
    },
    {
      "id": "node_8",
      "type": "endpoint",
      "position": {
        "x": 1900,
        "y": 200
      },
      "data": {
        "save_to_file": true,
        "file_name": "files/output/results.json",
        "label": "save_results_endpoint"
      }
    }
  ],
  "arrows": [
    {
      "id": "arrow_0",
      "source": "node_0_default_output",
      "target": "node_1_default_input",
      "label": null,
      "data": null,
      "content_type": "object"
    },
    {
      "id": "arrow_1",
      "source": "node_1_default_output",
      "target": "node_2_default_input",
      "label": "raw_data",
      "data": null,
      "content_type": "object"
    },
    {
      "id": "arrow_2",
      "source": "node_2_default_output",
      "target": "node_3_default_input",
      "label": "validation_result",
      "data": null,
      "content_type": "object"
    },
    {
      "id": "arrow_5",
      "source": "node_4_default_output",
      "target": "node_5_default_input",
      "label": "items",
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_6",
      "source": "node_5_default_output",
      "target": "node_6_default_input",
      "label": "processed_items",
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_7",
      "source": "node_6_default_output",
      "target": "node_8_default_input",
      "label": "final_results",
      "data": null,
      "content_type": "object"
    },
    {
      "id": "arrow_8",
      "source": "node_7_default_output",
      "target": "node_8_default_input",
      "label": "final_results",
      "data": null,
      "content_type": "object"
    }
  ],
  "persons": [],
  "handles": [
    {
      "id": "node_0_default_output",
      "node_id": "node_0",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_1_default_input",
      "node_id": "node_1",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_1_default_output",
      "node_id": "node_1",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_2_default_input",
      "node_id": "node_2",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_2_default_output",
      "node_id": "node_2",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_3_default_input",
      "node_id": "node_3",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_3_condtrue_output",
      "node_id": "node_3",
      "label": "condtrue",
      "direction": "output",
      "data_type": "boolean",
      "position": "right"
    },
    {
      "id": "node_3_condfalse_output",
      "node_id": "node_3",
      "label": "condfalse",
      "direction": "output",
      "data_type": "boolean",
      "position": "right"
    },
    {
      "id": "node_4_default_input",
      "node_id": "node_4",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_4_default_output",
      "node_id": "node_4",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_5_default_input",
      "node_id": "node_5",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_5_default_output",
      "node_id": "node_5",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_6_default_input",
      "node_id": "node_6",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_6_default_output",
      "node_id": "node_6",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_7_default_input",
      "node_id": "node_7",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_7_default_output",
      "node_id": "node_7",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_8_default_input",
      "node_id": "node_8",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    }
  ],
  "metadata": {
    "name": "Untitled",
    "description": null,
    "author": null,
    "tags": null,
    "created": "2025-08-11T08:54:47.843Z",
    "modified": "2025-08-11T08:54:47.843Z",
    "version": "1.0.0",
    "id": null
  }
}
{
  "nodes": [
    {
      "id": "node_0",
      "type": "start",
      "position": {
        "x": 50,
        "y": 200
      },
      "data": {
        "label": "start",
        "custom_data": {
          "message": "Starting template-based GraphQL query generation"
        },
        "output_data_structure": {}
      }
    },
    {
      "id": "node_1",
      "type": "sub_diagram",
      "position": {
        "x": 200,
        "y": 200
      },
      "data": {
        "label": "parse typescript",
        "diagram_format": "light",
        "diagram_name": "codegen/diagrams/shared/parse_typescript_batch",
        "ignoreIfSub": true,
        "passInputData": false
      }
    },
    {
      "id": "node_2",
      "type": "db",
      "position": {
        "x": 350,
        "y": 200
      },
      "data": {
        "label": "load query definitions",
        "glob": true,
        "operation": "read",
        "serialize_json": true,
        "sub_type": "file",
        "file": [
          "temp/frontend/query-definitions/*.ts.json",
          "temp/frontend/query-enums.ts.json",
          "temp/frontend/query-builder.ts.json"
        ]
      }
    },
    {
      "id": "node_3",
      "type": "code_job",
      "position": {
        "x": 500,
        "y": 200
      },
      "data": {
        "label": "prepare query data",
        "filePath": "files/codegen/code/frontend/queries/prepare_query_data.py",
        "functionName": "prepare_query_data_for_template",
        "language": "python"
      }
    },
    {
      "id": "node_4",
      "type": "template_job",
      "position": {
        "x": 700,
        "y": 200
      },
      "data": {
        "label": "generate queries",
        "engine": "jinja2",
        "output_path": "apps/web/src/__generated__/queries/all-queries.ts",
        "template_path": "files/codegen/templates/frontend/graphql-queries.j2",
        "variables": {
          "generated_warning": "DO NOT EDIT - Generated by DiPeO"
        }
      }
    },
    {
      "id": "node_5",
      "type": "code_job",
      "position": {
        "x": 900,
        "y": 200
      },
      "data": {
        "label": "verify generated files",
        "code": "import os\nfrom pathlib import Path\n\n# Check that the generated file exists\noutput_file = '/home/soryhyun/DiPeO/apps/web/src/__generated__/queries/all-queries.ts'\nfile_exists = Path(output_file).exists()\n\nif file_exists:\n    file_size = Path(output_file).stat().st_size\n    print(f\"✓ Generated query file: {output_file}\")\n    print(f\"  File size: {file_size:,} bytes\")\n    \n    # Count queries in the file\n    with open(output_file, 'r') as f:\n        content = f.read()\n        query_count = content.count('export const')\n        gql_count = content.count('gql`')\n    \n    print(f\"  Exported constants: {query_count}\")\n    print(f\"  GraphQL documents: {gql_count}\")\nelse:\n    print(f\"✗ Failed to generate: {output_file}\")\n\n# Check metadata from input - handle different input formats\ninput_data = inputs.get('default', {})\nmetadata = {}\n\n# Try to extract metadata from various possible structures\nif isinstance(input_data, dict):\n    metadata = input_data.get('metadata', {})\nelif isinstance(input_data, str):\n    # Input might be a string, just note it\n    print(f\"Debug: Input is string type\")\n\nif metadata:\n    print(f\"\\nQuery statistics:\")\n    print(f\"  Queries: {metadata.get('total_queries', 0)}\")\n    print(f\"  Mutations: {metadata.get('total_mutations', 0)}\")\n    print(f\"  Subscriptions: {metadata.get('total_subscriptions', 0)}\")\n\nresult = {\n    'success': file_exists,\n    'file': output_file if file_exists else None,\n    'metadata': metadata\n}\n",
        "language": "python"
      }
    },
    {
      "id": "node_6",
      "type": "endpoint",
      "position": {
        "x": 1000,
        "y": 200
      },
      "data": {
        "label": "end",
        "save_to_file": false
      }
    }
  ],
  "arrows": [
    {
      "id": "arrow_0",
      "source": "node_0_default_output",
      "target": "node_1_default_input",
      "label": null,
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_1",
      "source": "node_1_default_output",
      "target": "node_2_default_input",
      "label": null,
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_2",
      "source": "node_2_default_output",
      "target": "node_3_default_input",
      "label": "ast_files",
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_3",
      "source": "node_3_default_output",
      "target": "node_4_default_input",
      "label": "query_data",
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_4",
      "source": "node_3_default_output",
      "target": "node_5_default_input",
      "label": "metadata",
      "data": null,
      "content_type": "raw_text"
    },
    {
      "id": "arrow_5",
      "source": "node_4_default_output",
      "target": "node_6_default_input",
      "label": null,
      "data": null,
      "content_type": "raw_text"
    }
  ],
  "persons": [],
  "handles": [
    {
      "id": "node_0_default_output",
      "node_id": "node_0",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_1_default_input",
      "node_id": "node_1",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_1_default_output",
      "node_id": "node_1",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_2_default_input",
      "node_id": "node_2",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_2_default_output",
      "node_id": "node_2",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_3_default_input",
      "node_id": "node_3",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_3_default_output",
      "node_id": "node_3",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_4_default_input",
      "node_id": "node_4",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_4_default_output",
      "node_id": "node_4",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_5_default_input",
      "node_id": "node_5",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    },
    {
      "id": "node_5_default_output",
      "node_id": "node_5",
      "label": "default",
      "direction": "output",
      "data_type": "any",
      "position": "right"
    },
    {
      "id": "node_6_default_input",
      "node_id": "node_6",
      "label": "default",
      "direction": "input",
      "data_type": "any",
      "position": "left"
    }
  ],
  "metadata": {
    "name": "Untitled",
    "description": null,
    "author": null,
    "tags": null,
    "created": "2025-08-07T09:54:43.994Z",
    "modified": "2025-08-07T09:54:43.994Z",
    "version": "1.0.0",
    "id": null
  }
}
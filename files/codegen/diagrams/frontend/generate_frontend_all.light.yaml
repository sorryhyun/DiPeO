# Frontend Batch Generation Diagram
# Generates all frontend artifacts for multiple node types using sub_diagram

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 200}

  - label: Load Frontend Manifest
    type: db
    position: {x: 200, y: 200}
    props:
      operation: read
      sub_type: file
      source_details: files/codegen/manifests/frontend.json

  - label: Initialize Iterator
    type: code_job
    position: {x: 400, y: 200}
    props:
      language: python
      code: |
        # Initialize iteration state
        manifest = manifest_data
        nodes = manifest.get('nodes', [])
        
        result = {
            'nodes': nodes,
            'current_index': 0,
            'total_nodes': len(nodes),
            'generated_nodes': []
        }

  - label: Check More Nodes
    type: condition
    position: {x: 600, y: 200}
    props:
      condition: current_index < total_nodes

  - label: Get Current Node
    type: code_job
    position: {x: 800, y: 150}
    props:
      language: python
      code: |
        # Extract current node for processing
        current_node = nodes[current_index]
        result = {
            'node_spec_path': current_node
        }

  - label: Generate Frontend Files
    type: sub_diagram
    position: {x: 1000, y: 150}
    props:
      diagram_name: codegen/diagrams/frontend/generate_frontend_single

  - label: Update Iterator
    type: code_job
    position: {x: 1200, y: 150}
    props:
      language: python
      code: |
        # Update iteration state
        current_index += 1
        generated_nodes.append(node_spec_path)
        
        result = {
            'nodes': nodes,
            'current_index': current_index,
            'total_nodes': total_nodes,
            'generated_nodes': generated_nodes
        }

  - label: Prepare Summary
    type: code_job
    position: {x: 800, y: 300}
    props:
      language: python
      code: |
        # Prepare final summary
        result = {
            'summary': {
                'total_nodes': total_nodes,
                'generated_nodes': generated_nodes,
                'success': True,
                'message': f"Successfully generated frontend files for {total_nodes} node types"
            }
        }

  - label: End
    type: endpoint
    position: {x: 1000, y: 300}
    props:
      file_format: json
      save_to_file: false

connections:
  - from: Start
    to: Load Frontend Manifest
  
  - from: Load Frontend Manifest
    to: Initialize Iterator
    label: manifest_data

  - from: Initialize Iterator
    to: Check More Nodes
  
  # If more nodes to process
  - from: Check More Nodes
    to: Get Current Node
    label: condtrue
  
  - from: Check More Nodes
    to: Get Current Node

  - from: Get Current Node
    to: Generate Frontend Files
    label: node_spec_path
  
  - from: Generate Frontend Files
    to: Update Iterator
  
  - from: Get Current Node
    to: Update Iterator
    label: node_spec_path
  
  - from: Check More Nodes
    to: Update Iterator
  
  - from: Update Iterator
    to: Check More Nodes
  
  # If no more nodes
  - from: Check More Nodes
    to: Prepare Summary
    label: condfalse
  
  - from: Check More Nodes
    to: Prepare Summary

  - from: Prepare Summary
    to: End
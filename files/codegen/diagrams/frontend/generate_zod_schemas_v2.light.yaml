# Generate Zod Validation Schemas from Domain Models V2
# Simplified version using template_job for direct template rendering
# Generates Zod validation schemas from TypeScript interfaces

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 300}
    props:
      custom_data:
        message: Starting Zod schemas generation with template job

  # Run batch parser if cache doesn't exist
  - label: Parse TypeScript Batch
    type: sub_diagram
    position: {x: 200, y: 300}
    props:
      diagram_name: codegen/diagrams/models/parse_all_typescript_batch
      diagram_format: light
      passInputData: false
      ignoreIfSub: true

  # Load all cached AST files at once
  - label: Load All AST Files
    type: db
    position: {x: 400, y: 300}
    props:
      operation: read
      sub_type: file
      source_details:
        - .temp/codegen_mappings_ast.json
        - .temp/diagram_ast.json
        - .temp/node_data_ast.json

  # Extract mappings
  - label: Extract Mappings
    type: code_job
    position: {x: 600, y: 150}
    props:
      language: python
      filePath: files/codegen/code/shared/extract_mappings.py
      functionName: main

  # Generate Zod schemas
  - label: Generate Zod Schemas
    type: code_job
    position: {x: 700, y: 300}
    props:
      language: python
      filePath: files/codegen/code/shared/extractors/zod_schemas_extractor.py
      functionName: main

  # NEW: Use template_job for rendering with automatic enhancements
  - label: Render Zod Schemas Template
    type: template_job
    position: {x: 900, y: 400}
    props:
      engine: jinja2
      template_path: files/codegen/templates/frontend/zod_schemas.j2
      output_path: apps/web/src/__generated__/schemas.ts
      variables:
        module_name: "schemas"
        generated_warning: "DO NOT EDIT - Generated by DiPeO"

  # Generate success summary
  - label: Generate Summary
    type: code_job
    position: {x: 1100, y: 400}
    props:
      language: python
      filePath: files/codegen/code/shared/generators/summary_generator.py
      functionName: main

  - label: End
    type: endpoint
    position: {x: 1300, y: 400}
    props:
      save_to_file: false

connections:
  # Run batch parser first
  - from: Start
    to: Parse TypeScript Batch
  
  # Load cached data after parsing
  - from: Parse TypeScript Batch
    to: Load All AST Files
  
  # Extract mappings from the loaded files
  - from: Load All AST Files
    to: Extract Mappings
    label: default
  
  # Pass all AST files to Generate Zod Schemas
  - from: Load All AST Files
    to: Generate Zod Schemas
    label: ast_files
  - from: Extract Mappings
    to: Generate Zod Schemas
    label: mappings
  
  # Pass data to template_job node
  # The Generate Zod Schemas node outputs 'data' which contains:
  # - schemas: array of schema definitions
  # - enum_schemas: enum schema definitions
  # - branded_types: branded type definitions
  - from: Generate Zod Schemas
    to: Render Zod Schemas Template
    # No label - will be unwrapped as 'default' by template_job handler
  
  # Generate summary
  - from: Generate Zod Schemas
    to: Generate Summary
    label: default
  
  - from: Render Zod Schemas Template
    to: End
  - from: Generate Summary
    to: End
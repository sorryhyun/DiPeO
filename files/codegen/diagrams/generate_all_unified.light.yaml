# Unified Code Generation Pipeline
# Generates all code from TypeScript sources - both domain models and node UI

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 300}
    props:
      custom_data:
        message: Starting unified code generation from TypeScript sources

  # Phase 1: Domain Model Generation (replacement for legacy make codegen)
  - label: Generate Python Models
    type: sub_diagram
    position: {x: 250, y: 100}
    props:
      diagram_name: codegen/diagrams/models/generate_python_models
      diagram_format: light
      
  - label: Generate Conversions
    type: sub_diagram
    position: {x: 250, y: 200}
    props:
      diagram_name: codegen/diagrams/models/generate_conversions
      diagram_format: light
      
  - label: Generate GraphQL Schema
    type: sub_diagram
    position: {x: 250, y: 300}
    props:
      diagram_name: codegen/diagrams/models/generate_graphql_schema
      diagram_format: light
      
  - label: Generate Field Configs
    type: sub_diagram
    position: {x: 250, y: 400}
    props:
      diagram_name: codegen/diagrams/models/generate_field_configs
      diagram_format: light
      
  - label: Generate Zod Schemas
    type: sub_diagram
    position: {x: 250, y: 500}
    props:
      diagram_name: codegen/diagrams/models/generate_zod_schemas
      diagram_format: light

  - label: Generate Static Nodes
    type: sub_diagram
    position: {x: 250, y: 600}
    props:
      diagram_name: codegen/diagrams/models/generate_static_nodes
      diagram_format: light

  # Phase 2: Node UI Generation from TypeScript specifications
  - label: Generate Backend Node Files
    type: sub_diagram
    position: {x: 550, y: 250}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_all_ts
      diagram_format: light

  - label: Generate Frontend Node Files
    type: sub_diagram
    position: {x: 550, y: 450}
    props:
      diagram_name: codegen/diagrams/frontend/generate_frontend_batch_ts
      diagram_format: light

  # Phase 3: Generate Registries
  - label: Generate Node Registry
    type: sub_diagram
    position: {x: 850, y: 350}
    props:
      diagram_name: codegen/diagrams/frontend/generate_frontend_registry
      diagram_format: light

  # Summary
  - label: Summarize Results
    type: code_job
    position: {x: 1050, y: 350}
    props:
      language: python
      code: |
        print("\n=== Unified Code Generation Complete ===")
        print("\nPhase 1 - Domain Models:")
        print("✓ Python models generated from TypeScript")
        print("✓ Conversion functions generated")
        print("✓ GraphQL schema generated")
        print("✓ Field configurations generated")
        print("✓ Zod schemas generated")
        print("✓ Static node classes generated")
        
        print("\nPhase 2 - Node UI:")
        print("✓ Backend node files generated from TypeScript specs")
        print("✓ Frontend node files generated from TypeScript specs")
        
        print("\nPhase 3 - Registries:")
        print("✓ Node registry updated")
        
        result = {
            'status': 'success',
            'message': 'All code generation completed successfully'
        }

  - label: End
    type: endpoint
    position: {x: 1250, y: 350}
    props:
      save_to_file: false

connections:
  # Phase 1 - Domain model generation (can run in parallel)
  - from: Start
    to: Generate Python Models
  - from: Start
    to: Generate Conversions
  - from: Start
    to: Generate GraphQL Schema
  - from: Start
    to: Generate Field Configs
  - from: Start
    to: Generate Zod Schemas
  - from: Start
    to: Generate Static Nodes
  
  # Wait for domain models before generating node UI
  - from: Generate Python Models
    to: Generate Backend Node Files
  - from: Generate Conversions
    to: Generate Backend Node Files
  
  # Frontend can start after basic models are ready
  - from: Generate Python Models
    to: Generate Frontend Node Files
  
  # Registries need all node files
  - from: Generate Backend Node Files
    to: Generate Node Registry
  - from: Generate Frontend Node Files
    to: Generate Node Registry
  
  # Summary waits for everything
  - from: Generate Python Models
    to: Summarize Results
  - from: Generate Conversions
    to: Summarize Results
  - from: Generate GraphQL Schema
    to: Summarize Results
  - from: Generate Field Configs
    to: Summarize Results
  - from: Generate Zod Schemas
    to: Summarize Results
  - from: Generate Static Nodes
    to: Summarize Results
  - from: Generate Backend Node Files
    to: Summarize Results
  - from: Generate Frontend Node Files
    to: Summarize Results
  - from: Generate Node Registry
    to: Summarize Results
  
  - from: Summarize Results
    to: End
# Generate Strawberry GraphQL Types from Node Specifications V2
# Uses template_job node for enhanced rendering when services are available

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 300}
    props:
      custom_data:
        message: Starting Strawberry GraphQL types generation with template job

  # Run batch parser if cache doesn't exist
  - label: Parse Node Specs Batch
    type: sub_diagram
    position: {x: 200, y: 300}
    props:
      diagram_name: codegen/diagrams/shared/parse_all_node_specs_batch_clean
      diagram_format: light
      passInputData: false
      ignoreIfSub: true

  # Extract node specifications
  - label: Extract Node Specs
    type: code_job
    position: {x: 400, y: 300}
    props:
      language: python
      filePath: files/codegen/code/models/generate_strawberry_types/strawberry_types_generator_v2.py
      functionName: extract_node_specs

  # Generate Strawberry types
  - label: Generate Strawberry Types
    type: code_job
    position: {x: 600, y: 300}
    props:
      language: python
      filePath: files/codegen/code/models/generate_strawberry_types/strawberry_types_generator_v2.py
      functionName: generate_strawberry_types

  # NEW: Use template_job for rendering with automatic enhancements
  - label: Render Types Template
    type: template_job
    position: {x: 800, y: 300}
    props:
      engine: jinja2  # Will use enhanced rendering if services available
      template_path: files/codegen/templates/models/strawberry_types.j2
      output_path: dipeo/diagram_generated_staged/graphql/strawberry_nodes.py
      # Can add variables here if needed
      variables:
        module_name: "strawberry_nodes"
        generated_warning: "DO NOT EDIT - Generated by DiPeO"

  - label: End
    type: endpoint
    position: {x: 1000, y: 300}
    props:
      save_to_file: false

connections:
  # Parse specs first
  - from: Start
    to: Parse Node Specs Batch
  
  # Extract specifications
  - from: Parse Node Specs Batch
    to: Extract Node Specs
  
  # Generate types
  - from: Extract Node Specs
    to: Generate Strawberry Types
    label: node_specs
  
  # Pass strawberry types to template renderer
  - from: Generate Strawberry Types
    to: Render Types Template
    label: strawberry_types  # This becomes available as 'strawberry_types' in template
  
  - from: Render Types Template
    to: End
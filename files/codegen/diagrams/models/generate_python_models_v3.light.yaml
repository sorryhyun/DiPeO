# Generate Python Domain Models V3
# Uses simplified extractor and enhanced template service with TypeScript filters

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 300}
    props:
      custom_data:
        message: Starting Python domain model generation V3 with enhanced template processing

  # Run batch parser if cache doesn't exist
  - label: Parse TypeScript Batch
    type: sub_diagram
    position: {x: 200, y: 300}
    props:
      diagram_name: codegen/diagrams/models/parse_all_typescript_batch
      diagram_format: light
      passInputData: false
      ignoreIfSub: true

  # Load all cached AST data at once
  - label: Load All AST Files
    type: db
    position: {x: 400, y: 300}
    props:
      operation: read
      sub_type: file
      source_details:
        - .temp/diagram_ast.json
        - .temp/execution_ast.json
        - .temp/conversation_ast.json
        - .temp/node_specifications_ast.json
        - .temp/utils_ast.json
        - .temp/integration_ast.json
        - .temp/node_data_ast.json

  # Extract raw model data (no conversion)
  - label: Extract Raw Model Data
    type: code_job
    position: {x: 600, y: 300}
    props:
      language: python
      filePath: files/codegen/code/models/generate_python_models/python_models_extractor_v2.py
      functionName: extract_models

  # Use template_job with enhanced template for rendering
  - label: Render Python Models Enhanced
    type: template_job
    position: {x: 800, y: 300}
    props:
      engine: jinja2  # Will use enhanced service with TypeScript filters
      template_path: files/codegen/templates/models/python_models_v3.j2
      output_path: dipeo/diagram_generated_staged/domain_models.py
      variables:
        module_name: "domain_models"
        generated_warning: "DO NOT EDIT - Generated by DiPeO V3"

  # Generate success summary
  - label: Generate Summary
    type: code_job
    position: {x: 1000, y: 300}
    props:
      language: python
      filePath: files/codegen/code/models/generate_python_models/python_models_extractor_v2.py
      functionName: generate_summary

  - label: End
    type: endpoint
    position: {x: 1200, y: 300}
    props:
      save_to_file: false

connections:
  # Run batch parser first
  - from: Start
    to: Parse TypeScript Batch
  
  # Load cached AST data after parsing
  - from: Parse TypeScript Batch
    to: Load All AST Files
  
  # Pass all AST data to extract
  - from: Load All AST Files
    to: Extract Raw Model Data
    label: ast_files
  
  # Pass raw extracted data to template renderer
  - from: Extract Raw Model Data
    to: Render Python Models Enhanced
    label: model_data  # Raw TypeScript data for template to process
  
  # Generate summary with counts from extraction
  - from: Extract Raw Model Data
    to: Generate Summary
    label: generation_result
  
  - from: Render Python Models Enhanced
    to: End
  - from: Generate Summary
    to: End

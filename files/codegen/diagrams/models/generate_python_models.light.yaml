# Generate Python Domain Models from TypeScript
# Replaces dipeo/models/scripts/generate-python.ts
# Generates core domain models (Diagram, Node, Execution, etc.) from TypeScript sources

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 300}
    props:
      custom_data:
        message: Starting Python domain model generation from cached AST data

  # Run batch parser if cache doesn't exist
  - label: Parse TypeScript Batch
    type: sub_diagram
    position: {x: 200, y: 300}
    props:
      diagram_name: codegen/diagrams/models/parse_all_typescript_batch
      diagram_format: light
      passInputData: false
      ignoreIfSub: true

  # Load all cached AST data at once
  - label: Load All AST Files
    type: db
    position: {x: 400, y: 400}
    props:
      operation: read
      sub_type: file
      source_details:
        - .temp/diagram_ast.json
        - .temp/execution_ast.json
        - .temp/conversation_ast.json
        - .temp/node_specifications_ast.json
        - .temp/utils_ast.json
        - .temp/integration_ast.json
        - .temp/node_data_ast.json

  # Combine all AST data
  - label: Combine AST Data
    type: code_job
    position: {x: 600, y: 400}
    props:
      language: python
      filePath: files/codegen/code/models/generate_python_models/python_models_generator.py
      functionName: combine_ast_data

  # Load Python model template
  - label: Load Python Template
    type: db
    position: {x: 600, y: 550}
    props:
      operation: read
      sub_type: file
      source_details: files/codegen/templates/models/python_models.j2

  # Generate Python models using the generator module
  - label: Generate Python Models
    type: code_job
    position: {x: 800, y: 450}
    props:
      language: python
      filePath: files/codegen/code/models/generate_python_models/python_models_generator.py
      functionName: generate_python_models

  # Write generated Python models
  - label: Write Python Models
    type: db
    position: {x: 1000, y: 450}
    props:
      operation: write
      sub_type: file
      source_details: dipeo/diagram_generated_staged/domain_models.py

  # Generate success summary
  - label: Generate Summary
    type: code_job
    position: {x: 1200, y: 450}
    props:
      language: python
      filePath: files/codegen/code/models/generate_python_models/python_models_generator.py
      functionName: generate_summary

  - label: End
    type: endpoint
    position: {x: 1400, y: 450}
    props:
      save_to_file: false

connections:
  # Run batch parser first
  - from: Start
    to: Parse TypeScript Batch
  
  # Load cached AST data after parsing
  - from: Parse TypeScript Batch
    to: Load All AST Files
  
  # Pass all AST data to combine
  - from: Load All AST Files
    to: Combine AST Data
    label: ast_files
  
  # Generate Python models
  - from: Combine AST Data
    to: Generate Python Models
    label: ast_data
  - from: Load Python Template
    to: Generate Python Models
    label: template_content
  
  # Write output and generate summary
  - from: Generate Python Models
    to: Write Python Models
    label: generated_code
  - from: Generate Python Models
    to: Generate Summary
    label: generation_result
  
  - from: Write Python Models
    to: End
  - from: Generate Summary
    to: End
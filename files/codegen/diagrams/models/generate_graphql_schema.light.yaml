# Generate GraphQL Schema from Domain Models
# Generates GraphQL type definitions from TypeScript domain models using cached AST data

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 300}
    props:
      custom_data:
        message: Starting GraphQL schema generation from cached AST data

  # Run batch parser if cache doesn't exist
  - label: Parse TypeScript Batch
    type: sub_diagram
    position: {x: 200, y: 300}
    props:
      diagram_name: codegen/diagrams/models/parse_all_typescript_batch
      diagram_format: light
      passInputData: false
      ignoreIfSub: true

  # Load cached AST data
  - label: Load Diagram AST
    type: db
    position: {x: 400, y: 200}
    props:
      operation: read
      sub_type: file
      source_details: .temp/diagram_ast.json

  - label: Load Execution AST
    type: db
    position: {x: 400, y: 300}
    props:
      operation: read
      sub_type: file
      source_details: .temp/execution_ast.json

  - label: Load Conversation AST
    type: db
    position: {x: 400, y: 400}
    props:
      operation: read
      sub_type: file
      source_details: .temp/conversation_ast.json

  - label: Load Enums AST
    type: db
    position: {x: 400, y: 500}
    props:
      operation: read
      sub_type: file
      source_details: .temp/enums_ast.json

  - label: Load Integration AST
    type: db
    position: {x: 400, y: 600}
    props:
      operation: read
      sub_type: file
      source_details: .temp/integration_ast.json

  # Combine all node data AST files
  - label: Combine Node Data AST
    type: code_job
    position: {x: 400, y: 700}
    props:
      language: python
      filePath: files/codegen/code/models/generate_graphql_schema/graphql_schema_generator.py
      functionName: combine_node_data_ast


  # Extract GraphQL types
  - label: Extract GraphQL Types
    type: code_job
    position: {x: 600, y: 400}
    props:
      language: python
      filePath: files/codegen/code/models/generate_graphql_schema/graphql_schema_generator.py
      functionName: extract_graphql_types

  # Load GraphQL template
  - label: Load GraphQL Template
    type: db
    position: {x: 600, y: 450}
    props:
      operation: read
      sub_type: file
      source_details: files/codegen/templates/models/graphql_schema.j2

  # Prepare template data
  - label: Prepare Template Data
    type: code_job
    position: {x: 800, y: 350}
    props:
      language: python
      filePath: files/codegen/code/models/generate_graphql_schema/graphql_schema_generator.py
      functionName: prepare_template_data

  # Generate GraphQL schema
  - label: Generate GraphQL Schema
    type: code_job
    position: {x: 1000, y: 400}
    props:
      language: python
      filePath: files/codegen/code/models/generate_graphql_schema/graphql_schema_generator.py
      functionName: render_graphql_schema

  # Write GraphQL schema file
  - label: Write GraphQL Schema
    type: db
    position: {x: 1200, y: 400}
    props:
      operation: write
      sub_type: file
      source_details: dipeo/diagram_generated_staged/domain-schema.graphql

  # Generate success summary
  - label: Generate Summary
    type: code_job
    position: {x: 1400, y: 400}
    props:
      language: python
      filePath: files/codegen/code/models/generate_graphql_schema/graphql_schema_generator.py
      functionName: generate_summary

  - label: End
    type: endpoint
    position: {x: 1600, y: 400}
    props:
      save_to_file: false

connections:
  # Run batch parser first
  - from: Start
    to: Parse TypeScript Batch
  
  # Load cached AST data after parsing
  - from: Parse TypeScript Batch
    to: Load Diagram AST
  - from: Parse TypeScript Batch
    to: Load Execution AST
  - from: Parse TypeScript Batch
    to: Load Conversation AST
  - from: Parse TypeScript Batch
    to: Load Enums AST
  - from: Parse TypeScript Batch
    to: Load Integration AST
  - from: Parse TypeScript Batch
    to: Combine Node Data AST
  
  # Extract GraphQL types from cached data
  - from: Load Diagram AST
    to: Extract GraphQL Types
    label: diagram_ast
  - from: Load Execution AST
    to: Extract GraphQL Types
    label: execution_ast
  - from: Load Conversation AST
    to: Extract GraphQL Types
    label: conversation_ast
  - from: Combine Node Data AST
    to: Extract GraphQL Types
    label: node_data_ast
  - from: Load Enums AST
    to: Extract GraphQL Types
    label: enums_ast
  - from: Load Integration AST
    to: Extract GraphQL Types
    label: integration_ast
  
  # Prepare template data
  - from: Extract GraphQL Types
    to: Prepare Template Data
    label: graphql_types
  
  # Generate GraphQL
  - from: Prepare Template Data
    to: Generate GraphQL Schema
    label: default
  - from: Load GraphQL Template
    to: Generate GraphQL Schema
    label: template_content
  
  # Write output
  - from: Generate GraphQL Schema
    to: Write GraphQL Schema
    label: generated_code
  
  # Generate summary
  - from: Extract GraphQL Types
    to: Generate Summary
    label: graphql_types
  - from: Write GraphQL Schema
    to: End
  - from: Generate Summary
    to: End
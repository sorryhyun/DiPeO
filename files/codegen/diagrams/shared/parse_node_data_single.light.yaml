# Parse Single Node Data File
# Loads cached AST data for a single node data TypeScript file to extract interface

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 200}
    
  # Parse input to get node type
  - label: Parse Input
    type: code_job
    position: {x: 150, y: 200}
    props:
      language: python
      filePath: files/codegen/code/shared/parse_node_data/parse_input.py
      functionName: main
  
  # Load cached AST data for this node type
  - label: Load Cached AST
    type: db
    position: {x: 350, y: 200}
    props:
      operation: read
      sub_type: file
      source_details: .temp/{data.cache_filename}_ast.json
      
  # Extract interface data from cached AST
  - label: Extract Interface
    type: code_job
    position: {x: 550, y: 200}
    props:
      language: python
      filePath: files/codegen/code/shared/parse_node_data/extract_interface.py
      functionName: main
        
  # Save result to temp file
  - label: Save to Temp
    type: code_job
    position: {x: 750, y: 200}
    props:
      language: python
      filePath: files/codegen/code/shared/parse_node_data/save_to_temp.py
      functionName: main
        
  # Return the parsed interface data  
  - label: End
    type: endpoint
    position: {x: 950, y: 200}
    props:
      save_to_file: false
      
connections:
  - from: Start
    to: Parse Input
    
  - from: Parse Input
    to: Load Cached AST
    label: data
    content_type: object
    
  - from: Load Cached AST
    to: Extract Interface
    label: ast_data
    
  - from: Parse Input
    to: Extract Interface
    label: node_info
    
  - from: Extract Interface
    to: Save to Temp
    label: interface_data
    
  - from: Extract Interface
    to: End
    label: parsed_node
# Backend Batch Generation Diagram
# Generates all backend artifacts for multiple node types using sub_diagram approach

version: light

nodes:
  - label: Start
    type: start
    position: {x: 50, y: 50}
    props:
      custom_data:
        message: Starting batch generation for backend files

  # Code nodes to provide inputs for each sub_diagram
  - label: PersonJob Input
    type: code_job
    position: {x: 150, y: 100}
    props:
      language: python
      code: |
        result = {"node_spec_path": "person_job"}

  - label: Generate PersonJob
    type: sub_diagram
    position: {x: 300, y: 100}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: Condition Input
    type: code_job
    position: {x: 150, y: 200}
    props:
      language: python
      code: |
        result = {"node_spec_path": "condition"}

  - label: Generate Condition
    type: sub_diagram
    position: {x: 300, y: 200}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: APIJob Input
    type: code_job
    position: {x: 150, y: 300}
    props:
      language: python
      code: |
        result = {"node_spec_path": "api_job"}

  - label: Generate APIJob
    type: sub_diagram
    position: {x: 300, y: 300}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: CodeJob Input
    type: code_job
    position: {x: 150, y: 400}
    props:
      language: python
      code: |
        result = {"node_spec_path": "code_job"}

  - label: Generate CodeJob
    type: sub_diagram
    position: {x: 300, y: 400}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: DB Input
    type: code_job
    position: {x: 450, y: 100}
    props:
      language: python
      code: |
        result = {"node_spec_path": "db"}

  - label: Generate DB
    type: sub_diagram
    position: {x: 600, y: 100}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: Endpoint Input
    type: code_job
    position: {x: 450, y: 200}
    props:
      language: python
      code: |
        result = {"node_spec_path": "endpoint"}

  - label: Generate Endpoint
    type: sub_diagram
    position: {x: 600, y: 200}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: UserResponse Input
    type: code_job
    position: {x: 450, y: 300}
    props:
      language: python
      code: |
        result = {"node_spec_path": "user_response"}

  - label: Generate UserResponse
    type: sub_diagram
    position: {x: 600, y: 300}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: SubDiagram Input
    type: code_job
    position: {x: 450, y: 400}
    props:
      language: python
      code: |
        result = {"node_spec_path": "sub_diagram"}

  - label: Generate SubDiagram
    type: sub_diagram
    position: {x: 600, y: 400}
    props:
      diagram_name: codegen/diagrams/backend/generate_backend_single
      diagram_format: light

  - label: Summary
    type: code_job
    position: {x: 750, y: 250}
    props:
      language: python
      code: |
        result = {
          'message': 'Successfully generated backend files',
          'nodes_processed': [
            'person_job', 'condition', 'api_job', 'code_job',
            'db', 'endpoint', 'user_response', 'sub_diagram'
          ],
          'artifacts_generated': [
            'pydantic_models',
            'graphql_schemas', 
            'static_nodes'
          ]
        }

  - label: End
    type: endpoint
    position: {x: 900, y: 250}
    props:
      save_to_file: false

connections:
  - from: Start
    to: PersonJob Input
  
  - from: PersonJob Input
    to: Generate PersonJob
  
  - from: Generate PersonJob
    to: Condition Input
  
  - from: Condition Input
    to: Generate Condition
  
  - from: Generate Condition
    to: APIJob Input
  
  - from: APIJob Input
    to: Generate APIJob
  
  - from: Generate APIJob
    to: CodeJob Input
  
  - from: CodeJob Input
    to: Generate CodeJob
  
  - from: Generate CodeJob
    to: DB Input
  
  - from: DB Input
    to: Generate DB
  
  - from: Generate DB
    to: Endpoint Input
  
  - from: Endpoint Input
    to: Generate Endpoint
  
  - from: Generate Endpoint
    to: UserResponse Input
  
  - from: UserResponse Input
    to: Generate UserResponse
  
  - from: Generate UserResponse
    to: SubDiagram Input
  
  - from: SubDiagram Input
    to: Generate SubDiagram
  
  - from: Generate SubDiagram
    to: Summary
  
  - from: Summary
    to: End
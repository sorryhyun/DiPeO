# Auto-generated GraphQL documentation for {{ nodeType }} node
# 
# This file documents the data structure for the {{ nodeType }} node type.
# DiPeO uses a generic node system where all nodes are represented as DomainNodeType
# with a JSONScalar data field. This file is for documentation purposes only.
#
# Node type: {{ nodeType }}
# Display name: {{ displayName | default(nodeType | title_case) }}
# Description: {{ description | default('No description provided') }}
#
# Data structure for {{ nodeType }} nodes:
# {
{%- for field in fields %}
#   {{ field.name }}: {{ field | graphql_type }}  # {{ field.description | default('No description') }}
{%- endfor %}
# }
#
# Example usage in DiPeO:
# 
# mutation CreateNode {
#   create_node(
#     diagram_id: "my-diagram",
#     input_data: {
#       type: {{ nodeType }},
#       position: { x: 100, y: 200 },
#       data: {
{%- for field in fields %}
#         {{ field.name }}: {% if field.type == 'string' or field.type == 'str' %}"example"{% elif field.type in ['number', 'float'] %}1.0{% elif field.type in ['int', 'integer'] %}1{% elif field.type == 'boolean' or field.type == 'bool' %}true{% elif field.type in ['array', 'list'] %}[]{% elif field.type in ['object', 'json', 'dict'] %}{}{% else %}null{% endif %}{% if not loop.last %},{% endif %}
{%- endfor %}
#       }
#     }
#   ) {
#     success
#     node {
#       id
#       type
#       data
#     }
#   }
# }
# Auto-generated GraphQL schema for {{ nodeType }} node

type {{ nodeType | pascal_case }}Node implements Node {
  id: ID!
  type: String!
  position: Position!
  data: {{ nodeType | pascal_case }}NodeData!
  selected: Boolean
  dragging: Boolean
}

type {{ nodeType | pascal_case }}NodeData {
{% for field in fields %}
{% if field.description %}
  "{{ field.description }}"
{% endif %}
  {{ field.name }}: {{ field | graphql_type }}{% if field.required %}!{% endif %}
{% endfor %}
{% if not fields %}
  _empty: String
{% endif %}
}

input {{ nodeType | pascal_case }}NodeInput {
  id: ID!
  type: String!
  position: PositionInput!
  data: {{ nodeType | pascal_case }}NodeDataInput!
}

input {{ nodeType | pascal_case }}NodeDataInput {
{% for field in fields %}
  {{ field.name }}: {{ field | graphql_type }}{% if field.required %}!{% endif %}
{% endfor %}
{% if not fields %}
  _empty: String
{% endif %}
}

# Add to schema extensions
extend type Query {
  {{ nodeType }}Nodes: [{{ nodeType | pascal_case }}Node!]!
  {{ nodeType }}Node(id: ID!): {{ nodeType | pascal_case }}Node
}

extend type Mutation {
  create{{ nodeType | pascal_case }}Node(input: {{ nodeType | pascal_case }}NodeInput!): {{ nodeType | pascal_case }}Node!
  update{{ nodeType | pascal_case }}Node(id: ID!, input: {{ nodeType | pascal_case }}NodeDataInput!): {{ nodeType | pascal_case }}Node!
  delete{{ nodeType | pascal_case }}Node(id: ID!): Boolean!
}
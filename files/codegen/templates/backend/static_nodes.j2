"""
Auto-generated static node type for {{ spec_data.nodeType }}.
DO NOT EDIT THIS FILE DIRECTLY.
Generated from: {{ spec_path }}
"""

from dataclasses import dataclass, field
from typing import Dict, Any, Optional, List, Union, Literal

from dipeo.models.models import (
    NodeType, Vec2, NodeID, PersonID, MemoryConfig, MemorySettings, ToolConfig,
    HookTriggerMode, SupportedLanguage, HttpMethod, DBBlockSubType,
    NotionOperation, HookType, PersonLLMConfig, LLMService, ExtractPattern
)
from dipeo.core.static.generated_nodes import BaseExecutableNode


@dataclass(frozen=True)
class {{ spec_data.nodeTypePascal }}Node(BaseExecutableNode):
    """{{ spec_data.description }}"""
    type: NodeType = field(default=NodeType.{{ spec_data.nodeType | replace('-', '_') }}, init=False)
    {% for field in spec_data.fields %}
    {{ field.name }}: {{ field | python_type }}{% if field.required == false %} = {{ field | python_default }}{% endif %}
    {% endfor %}

    def to_dict(self) -> Dict[str, Any]:
        """Convert node to dictionary representation."""
        data = super().to_dict()
        {%- for field in spec_data.fields %}
        {%- if field.name == 'person' %}
        data["person"] = self.person_id
        {%- else %}
        data["{{ field.name }}"] = self.{{ field.name }}
        {%- endif %}
        {%- endfor %}
        return data
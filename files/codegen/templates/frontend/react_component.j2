// Auto-generated React component for {{ nodeType }} node
import React from 'react';
import { BaseNode } from '../BaseNode';
import { Handle, Position } from 'reactflow';
import { {{ nodeType | title }}NodeData } from '@/types/nodes/{{ nodeType }}Node';

interface {{ nodeType | title }}NodeProps {
  data: {{ nodeType | title }}NodeData;
  selected?: boolean;
}

export const {{ nodeType | title }}Node: React.FC<{{ nodeType | title }}NodeProps> = ({ data, selected }) => {
  return (
    <BaseNode
      title="{{ displayName }}"
      category="{{ category }}"
      selected={selected}
      data={data}
    >
{% if handles.inputs %}
{% for handle in handles.inputs %}
      <Handle
        type="input"
        position={Position.Left}
        id="{{ handle.id | default('input') }}"
        className="handle-input"
      />
{% endfor %}
{% endif %}
      
      <div className="node-content">
{% if fields %}
        <div className="space-y-2">
{% for field in fields[:3] %}
          {data.{{ field.name }} && (
            <div className="field-display">
              <span className="field-label">{{ field.label | default(field.name) }}:</span>
              <span className="field-value">{String(data.{{ field.name }})}</span>
            </div>
          )}
{% endfor %}
{% if fields | length > 3 %}
          <div className="text-xs text-gray-500">+{{ fields | length - 3 }} more fields</div>
{% endif %}
        </div>
{% else %}
        <p className="text-sm text-gray-600">No configuration required</p>
{% endif %}
      </div>
      
{% if handles.outputs %}
{% for handle in handles.outputs %}
      <Handle
        type="output"
        position={Position.Right}
        id="{{ handle.id | default('output') }}"
        className="handle-output"
      />
{% endfor %}
{% endif %}
    </BaseNode>
  );
};

{{ nodeType | title }}Node.displayName = '{{ nodeType | title }}Node';

export default {{ nodeType | title }}Node;
// Auto-generated node configuration for {{ nodeType }}
import { NodeConfig } from '@/features/diagram-editor/types';
import { {{ nodeType | title }}Node } from '@/features/diagram-editor/components/nodes/generated/{{ nodeType | title }}Node';
import { {{ nodeTypeCamel }}Fields } from '../fields/{{ nodeType }}FieldConfigs';
import { {{ icon | emoji_to_icon }} } from 'lucide-react';

export const {{ nodeTypeCamel }}Config: NodeConfig = {
  type: '{{ nodeType }}',
  displayName: '{{ displayName }}',
  category: '{{ category | default('custom') }}',
  description: '{{ description | default(displayName + ' node') }}',
  icon: {{ icon | emoji_to_icon }},
  color: '{{ color | default('#6366f1') }}',
  component: {{ nodeType | title }}Node,
  fields: {{ nodeTypeCamel }}Fields,
  handles: {
{% if handles.inputs %}
    inputs: [
{% for input in handles.inputs %}
      { id: '{{ input.id | default('input') }}', label: '{{ input.label | default('') }}' },
{% endfor %}
    ],
{% endif %}
{% if handles.outputs %}
    outputs: [
{% for output in handles.outputs %}
      { id: '{{ output.id | default('output') }}', label: '{{ output.label | default('') }}' },
{% endfor %}
    ],
{% endif %}
  },
  defaultData: {
{% for field in fields if field.default is defined %}
{% if field.default is string %}
    {{ field.name }}: '{{ field.default }}',
{% elif field.default is boolean %}
    {{ field.name }}: {{ field.default | lower }},
{% else %}
    {{ field.name }}: {{ field.default | tojson }},
{% endif %}
{% endfor %}
  },
  validation: {
    required: [{{ fields | selectattr("required", "equalto", true) | map(attribute="name") | map("quote") | join(", ") }}],
  },
};

export default {{ nodeTypeCamel }}Config;
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Node Type Specification",
  "description": "Schema for defining new DiPeO node types for code generation",
  "type": "object",
  "required": ["nodeType", "displayName", "category", "icon", "fields", "handles"],
  "properties": {
    "nodeType": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9_]*$",
      "description": "The internal node type identifier (snake_case)"
    },
    "displayName": {
      "type": "string",
      "description": "Human-readable name for the node"
    },
    "category": {
      "type": "string",
      "enum": ["control", "action", "data", "integration", "utility"],
      "description": "Node category for organization"
    },
    "icon": {
      "type": "string",
      "description": "Icon identifier or emoji for the node"
    },
    "color": {
      "type": "string",
      "pattern": "^#[0-9a-fA-F]{6}$",
      "description": "Hex color code for the node"
    },
    "description": {
      "type": "string",
      "description": "Detailed description of what the node does"
    },
    "fields": {
      "type": "array",
      "description": "Field definitions for the node",
      "items": {
        "type": "object",
        "required": ["name", "type", "required"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-z][a-zA-Z0-9_]*$",
            "description": "Field name (camelCase)"
          },
          "type": {
            "type": "string",
            "enum": ["string", "number", "boolean", "enum", "object", "array", "code", "file_path", "code_reference"],
            "description": "Field data type"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required"
          },
          "description": {
            "type": "string",
            "description": "Field description for documentation"
          },
          "defaultValue": {
            "description": "Default value for the field"
          },
          "placeholder": {
            "type": "string",
            "description": "Placeholder text for input fields"
          },
          "values": {
            "type": "array",
            "description": "Possible values for enum type",
            "items": {
              "type": "string"
            }
          },
          "validation": {
            "type": "object",
            "description": "Validation rules",
            "properties": {
              "min": {
                "type": "number",
                "description": "Minimum value for numbers"
              },
              "max": {
                "type": "number",
                "description": "Maximum value for numbers"
              },
              "pattern": {
                "type": "string",
                "description": "Regex pattern for strings"
              },
              "minLength": {
                "type": "integer",
                "description": "Minimum string length"
              },
              "maxLength": {
                "type": "integer",
                "description": "Maximum string length"
              }
            }
          },
          "uiConfig": {
            "type": "object",
            "description": "UI-specific configuration",
            "properties": {
              "inputType": {
                "type": "string",
                "enum": ["text", "textarea", "number", "select", "checkbox", "code", "file"],
                "description": "UI input component type"
              },
              "rows": {
                "type": "integer",
                "description": "Number of rows for textarea"
              },
              "language": {
                "type": "string",
                "description": "Programming language for code fields"
              }
            }
          }
        }
      }
    },
    "handles": {
      "type": "object",
      "required": ["inputs", "outputs"],
      "description": "Node connection points",
      "properties": {
        "inputs": {
          "type": "array",
          "description": "Input handle definitions",
          "items": {
            "type": "string",
            "description": "Handle identifier"
          }
        },
        "outputs": {
          "type": "array",
          "description": "Output handle definitions",
          "items": {
            "type": "string",
            "description": "Handle identifier"
          }
        }
      }
    },
    "execution": {
      "type": "object",
      "description": "Execution configuration",
      "properties": {
        "timeout": {
          "type": "integer",
          "description": "Default timeout in seconds"
        },
        "retryable": {
          "type": "boolean",
          "description": "Whether the node can be retried on failure"
        },
        "maxRetries": {
          "type": "integer",
          "description": "Maximum number of retries"
        },
        "requires": {
          "type": "array",
          "description": "Required services",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "examples": {
      "type": "array",
      "description": "Usage examples",
      "items": {
        "type": "object",
        "required": ["name", "description", "configuration"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Example name"
          },
          "description": {
            "type": "string",
            "description": "What the example demonstrates"
          },
          "configuration": {
            "type": "object",
            "description": "Example node configuration"
          }
        }
      }
    }
  }
}